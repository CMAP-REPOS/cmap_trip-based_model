      SUBROUTINE SUB_GEOG
      IMPLICIT INTEGER (A-Z)
C***********************************************************************
C
C     THIS SUBROUTINE READS A FILE DIMENSIONED BY TG SUBZONES.  IT IS A
C     MATCH FILE BETWEEN THE TG SUBZONES AND LARGER GEOGRAPHIC UNITS AS
C     FOLLOWS:.
C
C       SZ_NUM = TG SUBZONE NUMBER
C       SZ_CO = TG SUBZONE FIPS COUNTY CODE
C       SZ_CONAME = TG SUBZONE ALPHANUMERIC COUNTY NAME (CHAR*10)
C       SZ_STATE = TG SUBZONE ALPHANUMERIC STATE CODE (CHAR*2)
C       SZ_PUMA1 = TG SUBZONE ONE PERCENT PUMS AREA 
C       SZ_PUMA5 = TG SUBZONE FIVE PERCENT PUMS AREA
C       SZ_ZONE = TG SUBZONE TRANSPORTATION MODEL ZONE
C       SZ_CHI = TG SUBZONE CHICAGO CODE (0/1)
C       SZ_CBD = TG SUBZONE CHICAGO CBD CODE (0/1) 
C       SZ_ROWCOL = ROW-COLUMN VECTORS TO BE USED FOR ITERATIVE 
C                   PROPORTIONAL FITTING OF TG SUBZONE 
C       SZ_AREA = TG SUBZONE AREA IN SQUARE MILES
C
C     TWO HIGHER LEVEL GEOGRAPHY TABLES ARE CREATED FROM THIS TG 
C     SUBZONE MATCH FILE.
C
C     1. A MATCH FILE BETWEEN FIVE PERCENT PUMAS AND LARGER GEOGRAPHIC 
C        AREAS
C
C       P5_NUM = FIVE PERCENT PUMS AREA
C       P5_STATE = FIVE PERCENT PUMS AREA ALPHANUMERIC STATE CODE
C                  (CHAR*2)
C       P5_PUMA1 = FIVE PERCENT PUMS AREA ONE PERCENT PUMS AREA
C       P5_ROWCOL = ROW-COLUMN VECTORS TO BE USED FOR ITERATIVE 
C                   PROPORTIONAL FITTING OF TG SUBZONE 
C
C     2. A MATCH FILE BETWEEN COUNTY NAMES AND CODES
C
C       CO_NUM = COUNTY FIPS CODE
C       CO_CONAME = ALPHANUMBERIC COUNTY NAME (CHAR*10)
C       CO_STATE = ALPHANUMERIC STATE CODE (CHAR*2)
C
C***********************************************************************
	INCLUDE 'COMMON_PARAM.FI'
	INCLUDE 'COMMON_GEOG.FI'
C
C	INPUT GEOGRAPHIC FILE IS UNIT NAMELIST IS UNIT 15
C
      OPEN (UNIT=17,FILE='GEOG_IN.TXT',STATUS='OLD',ERR=99)
C
C     READ COMMA DELIMITED GEOGRAPHY FILE SORTED BY SZ_NUM
C
      DO SZ=1,SUBZONES
        SZ_NUM(SZ) = 0
	  SZ_ZONE(SZ) = 0
	  SZ_CHI(SZ) = 0
	  SZ_CBD(SZ) = 0
	  SZ_ROWCOL(SZ) = 0
	  SZ_PUMA5(SZ) = 0
	  SZ_CO(SZ) = 0
	  SZ_PUMA1(SZ) = 0

	  SZ_AREA(SZ) = 0.0

        SZ_CONAME(SZ) = '          '

	  SZ_STATE(SZ) = '  '
      ENDDO	
	
	I = 1

    5	READ(17,*,END=10) SZ_NUM(I), SZ_CO(I), SZ_CONAME(I), SZ_STATE(I),
     A  SZ_PUMA1(I), SZ_PUMA5(I), SZ_ZONE(I), SZ_CHI(I), SZ_CBD(I),
     B  SZ_ROWCOL(I), SZ_AREA(I) 
C*****
C      WRITE(16,*) I, SZ_NUM(I), SZ_CO(I), SZ_CONAME(I), SZ_STATE(I),
C     A  SZ_PUMA1(I), SZ_PUMA5(I), SZ_ZONE(I), SZ_CHI(I), SZ_CBD(I),
C     B  SZ_ROWCOL(I), SZ_AREA(I)
C*****
C
C     ADD STATE TO PUMA5 CODE
C
      TEMP1 = SZ_CO(I)/1000
	TEMP1 = TEMP1 * 10000
	SZ_PUMA5(I) = TEMP1 + SZ_PUMA5(I)
C
C     CHECK SOME QUANTITIES
C
      IF (SZ_NUM(I) .NE. I) GO TO 1991
	IF ((SZ_ZONE(I) .LT. 1) .OR. (SZ_ZONE(I) .GT. 5000)) GO TO 799
	IF ((SZ_CHI(I) .LT. 0) .OR. (SZ_CHI(I) .GT. 1)) GO TO 899
	IF ((SZ_CBD(I) .LT. 0) .OR. (SZ_CBD(I) .GT. 1)) GO TO 8991
	IF ((SZ_ROWCOL(I) .LT. 1) .OR. (SZ_ROWCOL(I) .GT. 4)) GO TO 8992

      I = I+1

      GO TO 5
C 
   10 CONTINUE
C
C     CHECK AGAINST INPUT PARAMETER
C
      IF ((I-1) .NE. SUBZONES) GO TO 199
C
C     SET UP PUMA5 MATCH FILES
C
      LOW_PUMA5 = 0

      DO J=1,100
	  HIGH_PUMA5 = 9999999
	  IF (J .GT. 1) THEN              
          IF (P5_NUM(J-1) .GT. 0) LOW_PUMA5 = P5_NUM(J-1)
        ENDIF    
        
	  DO I=1,SUBZONES
	    IF ((SZ_PUMA5(I) .GT. LOW_PUMA5) .AND. 
     A	    (SZ_PUMA5(I) .LT. HIGH_PUMA5)) THEN
	      P5_NUM(J) = SZ_PUMA5(I)
	      P5_STATE(J) = SZ_STATE(I)
		  P5_PUMA1(J) = SZ_PUMA1(I)
	      P5_ROWCOL(J) = SZ_ROWCOL(I)
		  HIGH_PUMA5 = SZ_PUMA5(I)
		ENDIF

	  ENDDO
	ENDDO
C****
C      DO J=1,100
C	  WRITE(16,*) P5_NUM(J),P5_STATE(J), P5_PUMA1(J)
C      ENDDO 
C****
C
C     CROSSCHECKS
C
      NUM_PUMA5 = 0
      DO J=1,100
        IF (P5_NUM(J) .NE. 0) NUM_PUMA5 = NUM_PUMA5+1 
      ENDDO
C*****
C      WRITE (16,*) NUM_PUMA5, PUMA5
C*****
      IF (NUM_PUMA5 .NE. PUMA5) GO TO 299

      DO J=1,PUMA5
        DO I=1,SUBZONES

	    IF ((P5_NUM(J) .EQ. SZ_PUMA5(I)) .AND. 
     A       ((P5_STATE(J) .NE. SZ_STATE(I)) .OR.
     B	    (P5_PUMA1(J) .NE. SZ_PUMA1(I)) .OR.
     C        (P5_ROWCOL(J) .NE. SZ_ROWCOL(I)))) GO TO 399
		
	  ENDDO
	ENDDO  
C
C     SET UP COUNTY MATCH FILES
C
      LOW_COUNTY = 0

      DO J=1,30
	  HIGH_COUNTY = 99999
	  IF (J .GT. 1) THEN 
          IF (CO_NUM(J-1) .GT. 0) LOW_COUNTY = CO_NUM(J-1)
        ENDIF    
        
	  DO I=1,SUBZONES

	    IF ((SZ_CO(I) .GT. LOW_COUNTY) .AND. 
     A	    (SZ_CO(I) .LT. HIGH_COUNTY)) THEN
	      CO_NUM(J) = SZ_CO(I)
		  CO_CONAME(J) = SZ_CONAME(I)
		  HIGH_COUNTY = SZ_CO(I)
		ENDIF

	  ENDDO
	ENDDO
C*****
C      DO J=1,30
C	  WRITE(16,*) CO_NUM(J),CO_CONAME(J), CO_STATE(J)
C      ENDDO
C***** 
C
C     CROSSCHECK
C
      NUM_CO = 0
      DO J=1,30
        IF (CO_NUM(J) .NE. 0) NUM_CO = NUM_CO+1 
      ENDDO

      IF (NUM_CO .NE. COUNTIES) GO TO 499

      DO J=1,COUNTIES
        DO I=1,SUBZONES

	    IF ((CO_NUM(J) .EQ. SZ_CO(I)) .AND. 
     A       (CO_CONAME(J) .NE. SZ_CONAME(I))) GO TO 3991
		
	  ENDDO
	ENDDO  
C
C     SET UP PUMA1 ARRAY
C 
      LOW_PUMA1 = 0

      DO J=1,30
	  HIGH_PUMA1 = 999999
	  IF (J .GT. 1) THEN 
          IF (P1_NUM(J-1) .GT. 0) LOW_PUMA1 = P1_NUM(J-1)
        ENDIF    
        
	  DO I=1,SUBZONES

	    IF ((SZ_PUMA1(I) .GT. LOW_PUMA1) .AND. 
     A	    (SZ_PUMA1(I) .LT. HIGH_PUMA1)) THEN
	      P1_NUM(J) = SZ_PUMA1(I)
	      P1_STATE(J) = SZ_STATE(I)
	      P1_ROWCOL(J) = SZ_ROWCOL(I)
		  HIGH_PUMA1 = SZ_PUMA1(I)
		ENDIF

	  ENDDO
	ENDDO
C
C     CROSSCHECK
C
      NUM_PUMA1 = 0
	DO J=1,30
	  IF (P1_NUM(J) .NE. 0) NUM_PUMA1 = NUM_PUMA1+1
	ENDDO
	
      IF (NUM_PUMA1 .NE. PUMA1) GO TO 599

      DO J=1,PUMA1
        DO I=1,SUBZONES

	    IF ((P1_NUM(J) .EQ. SZ_PUMA1(I)) .AND. 
     A        (P1_STATE(J) .NE. SZ_STATE(I))) GO TO 3992
		
	  ENDDO
	ENDDO  
C
C     SET UP ZONE ARRAY
C 
      LOW_ZONE = 0

      DO J=1,4000
	  HIGH_ZONE = 999999
	  IF (J .GT. 1) THEN 
          IF (Z_NUM(J-1) .GT. 0) LOW_ZONE = Z_NUM(J-1)
        ENDIF    
        
	  DO I=1,SUBZONES

	    IF ((SZ_ZONE(I) .GT. LOW_ZONE) .AND. 
     A	    (SZ_ZONE(I) .LT. HIGH_ZONE)) THEN
	      Z_NUM(J) = SZ_ZONE(I)
		  HIGH_ZONE = SZ_ZONE(I)
		ENDIF

	  ENDDO
	ENDDO
C
C     CROSSCHECK
C
      NUM_ZONE = 0
	DO J=1,4000
	  IF (Z_NUM(J) .NE. 0) NUM_ZONE = NUM_ZONE+1
	ENDDO
	
      IF (NUM_ZONE .NE. ZONES) GO TO 699
C
C     WRITE OUT PUMS AREA MATCH FILES
C
      WRITE (16,'(/A)') 'ONE PERCENT PUMAS'
	WRITE (16,'(/A)') '     PUMA1 STATE' 


      WRITE (16,'(A)')  '----------------'
      DO J=1,PUMA1
	  WRITE(16,'(I3,I7,A6)') J, P1_NUM(J), P1_STATE(J) 
      ENDDO

      WRITE (16,'(/A)') 'MATRIX BALANCING AREAS'
	WRITE (16,'(/A)') '     PUMA5  PUMA1 ROWCOL STATE' 

      WRITE (16,'(A)')  '------------------------------'

      DO J=1,PUMA5
	  WRITE(16,'(I3,I7,I7,I7,A6)') J, P5_NUM(J), P5_PUMA1(J), 
     A    P5_ROWCOL(J), P5_STATE(J) 
      ENDDO
C
	CLOSE (17,DISP='KEEP')
C
      WRITE (16,'(/A)') 'END OF GEOG'
      WRITE (*,'(/A)') 'END OF GEOG'

	RETURN

   99 WRITE (*,'(/A)')  'ERROR:  PROBLEM OPENING FILE GEOG_IN.TXT'
      STOP 99

  199 WRITE (*,'(/A)') 'ERROR;  SUBZONES READ DO NOT MATCH SUBZONES PARA
     AMETER'
      STOP 199

 1991 WRITE (*,'(/A)') 'ERROR;  SUBZONES OUT OF ORDER IN GEOG_IN.TXT'
      STOP 1991

  299 WRITE (*,'(/A)') 'ERROR;  PUMA5 PARAMETER DOES NOT MATCH GEOG_INPU
     AT.TXT FILE'
      STOP 299

  399 WRITE (*,'(/A)') 'ERROR:  INCONSISTENT GEOG_INPUT.TXT:'  
      WRITE (*,'(A,2I7)') ' PUMA5 = ', J, P5_NUM(J)
      WRITE (*,'(A,2I7)') ' SUBZONE = ', I, SZ_PUMA5(I)
	  WRITE (*,'(A,2I7)') ' P5_PUMA1 = ', J, P5_PUMA1(J)
	  WRITE (*,'(A,2I7)') ' SZ_PUMA1 = ', I, SZ_PUMA1(I)
	  WRITE (*,'(A,2I7)') ' P5_ROWCOL = ', J, P5_ROWCOL(J)
	  WRITE (*,'(A,2I7)') ' SZ_ROWCOL = ', I, SZ_ROWCOL(I)
	  WRITE (*,'(A,I7,A)') ' P5_STATE = ', J, P5_STATE(J)
	  WRITE (*,'(A,I7,A)') ' SZ_STATE = ', I, SZ_STATE(I)
      STOP 399

 3991 WRITE (*,'(/A)') 'ERROR:  INCONSISTENT GEOG_INPUT.TXT:' 
      WRITE (*,'(A,2I6)') ' COUNTY = ', J, CO_NUM(J)
      WRITE (*,'(A,2I6)') ' SUBZONE = ', I, SZ_CO(I)
      STOP 3991

 3992 WRITE (*,'(/A)') 'ERROR:  INCONSISTENT GEOG_INPUT.TXT:'  
      WRITE (*,'(A,2I6)') ' PUMA1 = ', J, P1_NUM(J)
      WRITE (*,'(A,2I6)') ' SUBZONE = ', I, SZ_PUMA1(I)
      STOP 3992

  499 WRITE (*,'(/A)') 'ERROR;  COUNTIES PARAMETER DOES NOT MATCH GEOG_I
     ANPUT.TXT FILE'
      STOP 499

  599 WRITE (*,'(/A)') 'ERROR;  PUMA1 PARAMETER DOES NOT MATCH GEOG_INPU
     AT.TXT FILE'
	STOP 599

  699 WRITE (*,'(/A)') 'ERROR;  ZONES PARAMETER DOES NOT MATCH GEOG_INPU
     AT.TXT FILE'
	STOP 699
  
  799 WRITE (*,'(/A)') 'ERROR;  ZONE OUT OF RANGE'
	STOP 799

  899 WRITE (*,'(/A)') 'ERROR;  CHICAGO CODE OUT OF RANGE'
	STOP 899

 8991 WRITE (*,'(/A)') 'ERROR;  CBD CODE OUT OF RANGE'
	STOP 8991

 8992 WRITE (*,'(/A)') 'ERROR;  ROWCOL CODE OUT OF RANGE'
	STOP 8992
C
      END