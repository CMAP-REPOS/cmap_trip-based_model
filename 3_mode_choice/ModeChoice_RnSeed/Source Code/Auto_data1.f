      SUBROUTINE AUTO_DATA1
      IMPLICIT INTEGER (A-Z)
C***********************************************************************
C
C  THE DATA1 SUBROUTINE WILL READ NAMELISTS
C                            SET DEFAULT VALUES
C
C  1.  TOLL=F,HOV2=F,HOV3=F (SUBROUTINE NOT CALLED)                                             30690002
C
C  2.  TOLL=T,HOV2=F,HOV3=F
C
C &AUTOTAB  TABLE_FREE_TIME = EMME INPUT TABLE WITH UNTOLLED TRAVEL
C                             TIME, DEFAULT IS MF01
C           TABLE_FREE_DIST = EMME INPUT TABLE WITH UNTOLLED TRAVEL
C                             DISTANCE, DEFAULT IS MF02
C           TABLE_TOLL_TIME = EMME INPUT TABLE WITH TOLLED TRAVEL
C                             TIME, DEFAULT IS MF03
C           TABLE_TOLL_DIST = EMME INPUT TABLE WITH TOLLED TRAVEL
C                             DISTANCE, DEFAULT IS MF04
C           TABLE_TOLL = EMME INPUT TABLE WITH TOLLS IN CENTS, DEFAULT
C                        IS MF05
C           TABLE_AUTO_FREE = EMME OUTPUT TABLE WITH AUTO TRIPS ON FREE
C                             PATHS, DEFAULT IS MF06
C           TABLE_AUTO_TOLL = EMME OUTPUT TABLE WITH AUTO TRIPS ON TOLL
C                             PATHS, DEFAULT IS MF07
C
C  3.  TOLL=F,HOV2=T OR HOV3=T
C
C &AUTOTAB  HOV_CBDBIAS(1) = BIAS COST FOR HOV 3+ TRIPS TO CBD
C           HOV_CBDBIAS(2) = BIAS COST FOR SHARED RIDE TRIPS TO CBD
C           HOV_BIAS(1) = BIAS COST FOR HOV 3+ TRIPS TO 
C                              NON-CBD DESTINATIONS
C           HOV_BIAS(2) = BIAS COST FOR SHARED RIDE TRIPS TO 
C                              NON-CBD DESTINATIONS
C           TABLE_SOV_TIME = EMME INPUT TABLE WITH SOV TRAVEL TIME,
C                            DEFAULT IS MF01
C           TABLE_SOV_DIST = EMME INPUT TABLE WITH SOV TRAVEL DISTANCE,
C                            DEFAULT IS MF02
C           TABLE_HOV_TIME = EMME INPUT TABLE WITH HOV TRAVEL TIME,
C                            DEFAULT IS MF03
C           TABLE_HOV_DIST = EMME INPUT TABLE WITH HOV TRAVEL DISTANCE,
C                            DEFAULT IS MF04
C           TABLE_SOV1 = EMME OUTPUT TABLE WITH SOV AUTO TRIPS, DEFAULT 
C                        IS MF05
C           TABLE_HOV2 = EMME OUTPUT TABLE WITH TWO PERSON HOV TRIPS,
C                        DEFAULT IS MF06
C           TABLE_HOV3 = EMME OUTPUT TABLE WITH THREE OR MORE PERSON 
C                        HOV TRIPS, DEFAULT IS MF07
C
C  4.  TOLL=T,HOV2=T OR HOV3=T
C
C &AUTOTAB  HOV_CBDBIAS(1) = BIAS COST FOR HOV 3+ TRIPS TO CBD
C           HOV_CBDBIAS(2) = BIAS COST FOR SHARED RIDE TRIPS TO CBD
C           HOV_BIAS(1) = BIAS COST FOR HOV 3+ TRIPS TO 
C                         NON-CBD DESTINATIONS
C           HOV_BIAS(2) = BIAS COST FOR SHARED RIDE TRIPS TO 
C                         NON-CBD DESTINATIONS
C           TABLE_FREE_TIME = EMME INPUT TABLE WITH UNTOLLED TRAVEL
C                             TIME (NO HOV LANE), DEFAULT IS MF01
C           TABLE_FREE_DIST = EMME INPUT TABLE WITH UNTOLLED TRAVEL
C                             DISTANCE (NO HOV LANE), DEFAULT IS MF02
C           TABLE_TOLL_TIME = EMME INPUT TABLE WITH TOLLED TRAVEL
C                             TIME (NO HOV LANE), DEFAULT IS MF03
C           TABLE_TOLL_DIST = EMME INPUT TABLE WITH TOLLED TRAVEL
C                             DISTANCE,  (NO HOV LANE)DEFAULT IS MF04
C           TABLE_TOLL = EMME INPUT TABLE WITH TOLLS IN CENTS,  
C                        (NO HOV LANE), DEFAULT IS MF05
C           TABLE_SOV_FREE_TIME = EMME INPUT TABLE WITH SOV FREE 
C                                 TRAVEL TIME, DEFAULT IS MF06
C           TABLE_SOV_FREE_DIST = EMME INPUT TABLE WITH SOV FREE 
C                                 TRAVEL DISTANCE, DEFAULT IS MF07
C           TABLE_HOV_FREE_TIME = EMME INPUT TABLE WITH HOV FREE 
C                                 TRAVEL TIME, DEFAULT IS MF08
C           TABLE_HOV_FREE_DIST = EMME INPUT TABLE WITH HOV FREE 
C                                 TRAVEL DISTANCE, DEFAULT IS MF09
C           TABLE_SOV_TOLL_TIME = EMME INPUT TABLE WITH SOV TOLL 
C                                 TRAVEL TIME, DEFAULT IS MF10
C           TABLE_SOV_TOLL_DIST = EMME INPUT TABLE WITH SOV TOLL 
C                                 TRAVEL DISTANCE, DEFAULT IS MF11
C           TABLE_SOV_TOLL = EMME INPUT TABLE WITH SOV PATH TOLLS, 
C                            DEFAULT IS MF12
C           TABLE_HOV_TOLL_TIME = EMME INPUT TABLE WITH HOV TOLL 
C                                 TRAVEL TIME, DEFAULT IS MF13
C           TABLE_HOV_TOLL_DIST = EMME INPUT TABLE WITH HOV TOLL 
C                                 TRAVEL DISTANCE, DEFAULT IS MF14
C           TABLE_HOV_TOLL = EMME INPUT TABLE WITH HOV PATH TOLLS, 
C                            DEFAULT IS MF15
C           TABLE_SOV1_FREE = EMME OUTPUT TABLE WITH SOV AUTO TRIPS ON 
C                             UNTOLLED PATHS, DEFAULT IS MF16
C           TABLE_HOV2_FREE = EMME OUTPUT TABLE WITH TWO PERSON HOV 
C                             TRIPS ON UNTOLLED PATHS, DEFAULT IS MF17
C           TABLE_HOV3_FREE = EMME OUTPUT TABLE WITH THREE OR MORE 
C                             PERSON HOV TRIPS ON UNTOLLED PATHS, 
C                             DEFAULT IS MF18
C           TABLE_SOV1_TOLL = EMME OUTPUT TABLE WITH SOV AUTO TRIPS ON 
C                             TOLL PATHS, DEFAULT IS MF19
C           TABLE_HOV2_TOLL = EMME OUTPUT TABLE WITH TWO PERSON HOV 
C                             TRIPS ON TOLL PATHS, DEFAULT IS MF20
C           TABLE_HOV3_TOLL = EMME OUTPUT TABLE WITH THREE OR MORE 
C                             PERSON HOV TRIPS ON TOLL PATHS, 
C                             DEFAULT IS MF21
C
C***********************************************************************
	INCLUDE 'Common_params.fi'
	INCLUDE 'Common_auto_params.fi'
C
	NAMELIST/AUTOTAB/ HOV_CBDBIAS, HOV_BIAS, TABLE_FREE_TIME, 
     A  TABLE_FREE_DIST, TABLE_TOLL_TIME, TABLE_TOLL_DIST, TABLE_TOLL, 
     B  TABLE_SOV_TIME, TABLE_SOV_DIST,
     C  TABLE_HOV_TIME, TABLE_HOV_DIST,
     D  TABLE_SOV_FREE_TIME, TABLE_SOV_FREE_DIST, 
     E  TABLE_HOV_FREE_TIME, TABLE_HOV_FREE_DIST,
     F  TABLE_SOV_TOLL_TIME, TABLE_SOV_TOLL_DIST, TABLE_SOV_TOLL,
     G  TABLE_HOV_TOLL_TIME, TABLE_HOV_TOLL_DIST, TABLE_HOV_TOLL,
     H  TABLE_AUTO_FREE, TABLE_AUTO_TOLL, 
     I  TABLE_SOV1, TABLE_HOV2, TABLE_HOV3,
     J  TABLE_SOV1_FREE, TABLE_HOV2_FREE, TABLE_HOV3_FREE,
     K  TABLE_SOV1_TOLL, TABLE_HOV2_TOLL, TABLE_HOV3_TOLL

      LOGICAL*4 NLIST/.FALSE./
	
	CHARACTER*9 CARD/' &AUTOTAB'/, TEXT
 
	CHARACTER*1 ASTERIX(100)/100*'*'/
     
      CHARACTER*1 CTAB1
      CHARACTER*2 CTAB2
      CHARACTER*3 CTAB3
C
C     SET DEFAULT TABLE NUMBERS
C
      HOV_CBDBIAS(1) = 2.51
      HOV_CBDBIAS(2) = 1.59

      HOV_BIAS(1) = 2.09
      HOV_BIAS(2) = 1.15
C
	IF ((TOLL .EQ. .TRUE.) .AND. ((HOV2 .EQ. .FALSE.) .AND. 
     A  (HOV3 .EQ. .FALSE.))) THEN 
        TABLE_FREE_TIME=1
        TABLE_FREE_DIST=2
	  TABLE_TOLL_TIME=3
	  TABLE_TOLL_DIST=4
	  TABLE_TOLL=5
C
        TABLE_AUTO_FREE=6
	  TABLE_AUTO_TOLL=7 
	ENDIF

	IF ((TOLL .EQ. .FALSE.) .AND. ((HOV2 .EQ. .TRUE.) .OR. 
     A  (HOV3 .EQ. .TRUE.))) THEN 
 	  TABLE_SOV_TIME=1
	  TABLE_SOV_DIST=2
	  TABLE_HOV_TIME=3
	  TABLE_HOV_DIST=4
C
        TABLE_SOV1=5
	  TABLE_HOV2=6
	  TABLE_HOV3=7
	ENDIF

	IF ((TOLL .EQ. .TRUE.) .AND. ((HOV2 .EQ. .TRUE.) .OR. 
     A  (HOV3 .EQ. .TRUE.))) THEN 
 	  TABLE_FREE_TIME=1
	  TABLE_FREE_DIST=2
	  TABLE_TOLL_TIME=3
	  TABLE_TOLL_DIST=4
   	  TABLE_TOLL=5
	  TABLE_SOV_FREE_TIME=6
	  TABLE_SOV_FREE_DIST=7
	  TABLE_HOV_FREE_TIME=8
	  TABLE_HOV_FREE_DIST=9
	  TABLE_SOV_TOLL_TIME=10
	  TABLE_SOV_TOLL_DIST=11
        TABLE_SOV_TOLL=12
	  TABLE_HOV_TOLL_TIME=13
	  TABLE_HOV_TOLL_DIST=14
        TABLE_HOV_TOLL=15
C
        TABLE_SOV1_FREE=16
	  TABLE_HOV2_FREE=17
	  TABLE_HOV3_FREE=18
	  TABLE_SOV1_TOLL=19
	  TABLE_HOV2_TOLL=20
	  TABLE_HOV3_TOLL=21
	ENDIF
C
C     PROCESS NAMELIST CARDS
C
	REWIND 33
04100 READ(33,'(A9)',END=04190) TEXT

      IF(TEXT .EQ.' &AUTOTAB') NLIST=.TRUE.
      GO TO 04100
C
04190 REWIND 33
C
      IF(NLIST) READ(33,AUTOTAB,END=07220)
C
      IF(.NOT.NLIST) WRITE(31,07230) CARD
07230 FORMAT(/' (WARNING) CONTROL CARD ',A9,' IS MISSING.',/
     +        ' DEFAULT VALUES WILL BE ASSUMED.')
      REWIND 33
      GOTO 07900
C
07220 WRITE(31,'(/A)') '  ERROR:  EARLY END OF FILE ENCOUNTERED WHILE'
      WRITE(31,'(A)')  '          READING &AUTOTAB CONTROL CARDS FROM UN
     AIT 33'
      STOP 217
C
07900 CONTINUE
C
C     CREATE EXTERNAL MATRIX FILE NAMES
C
C     AUTO UNTOLLED TIME
C
      IF (TABLE_FREE_TIME .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_FREE_TIME 
        TEMX_FREE_TIME = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_FREE_TIME .GE. 10).AND.(TABLE_FREE_TIME .LT. 100)) THEN
        WRITE (CTAB2,'(I2)') TABLE_FREE_TIME
        TEMX_FREE_TIME = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_FREE_TIME .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_FREE_TIME
        TEMX_FREE_TIME = 'mf'//CTAB3//'.emx'
      ENDIF      
C
C     AUTO UNTOLLED DISTANCE
C
      IF (TABLE_FREE_DIST .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_FREE_DIST 
        TEMX_FREE_DIST = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_FREE_DIST .GE. 10).AND.(TABLE_FREE_DIST .LT. 100)) THEN
        WRITE (CTAB2,'(I2)') TABLE_FREE_DIST
        TEMX_FREE_DIST = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_FREE_DIST .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_FREE_DIST
        TEMX_FREE_DIST = 'mf'//CTAB3//'.emx'
      ENDIF           
C
C     AUTO TOLLED TIME
C
      IF (TABLE_TOLL_TIME .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_TOLL_TIME 
        TEMX_TOLL_TIME = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_TOLL_TIME .GE. 10).AND.(TABLE_TOLL_TIME .LT. 100)) THEN
        WRITE (CTAB2,'(I2)') TABLE_TOLL_TIME
        TEMX_TOLL_TIME = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_TOLL_TIME .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_TOLL_TIME
        TEMX_TOLL_TIME = 'mf'//CTAB3//'.emx'
      ENDIF      
C
C     AUTO TOLLED DISTANCE
C
      IF (TABLE_TOLL_DIST .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_TOLL_DIST 
        TEMX_TOLL_DIST = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_TOLL_DIST .GE. 10).AND.(TABLE_TOLL_DIST .LT. 100)) THEN
        WRITE (CTAB2,'(I2)') TABLE_TOLL_DIST
        TEMX_TOLL_DIST = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_TOLL_DIST .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_TOLL_DIST
        TEMX_TOLL_DIST = 'mf'//CTAB3//'.emx'
      ENDIF           
C
C     AUTO TOLLS
C
      IF (TABLE_TOLL .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_TOLL 
        TEMX_TOLL = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_TOLL .GE. 10).AND.(TABLE_TOLL .LT. 100)) THEN
        WRITE (CTAB2,'(I2)') TABLE_TOLL
        TEMX_TOLL = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_TOLL .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_TOLL
        TEMX_TOLL = 'mf'//CTAB3//'.emx'
      ENDIF                       
C
C     SOV TIME
C
      IF (TABLE_SOV_TIME .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_SOV_TIME 
        TEMX_SOV_TIME = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_SOV_TIME .GE. 10).AND.(TABLE_SOV_TIME .LT. 100)) THEN
        WRITE (CTAB2,'(I2)') TABLE_SOV_TIME
        TEMX_SOV_TIME = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_SOV_TIME .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_SOV_TIME
        TEMX_SOV_TIME = 'mf'//CTAB3//'.emx'
      ENDIF      
C
C     SOV DISTANCE
C
      IF (TABLE_SOV_DIST .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_SOV_DIST 
        TEMX_SOV_DIST = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_SOV_DIST .GE. 10).AND.(TABLE_SOV_DIST .LT. 100)) THEN
        WRITE (CTAB2,'(I2)') TABLE_SOV_DIST
        TEMX_SOV_DIST = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_SOV_DIST .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_SOV_DIST
        TEMX_SOV_DIST = 'mf'//CTAB3//'.emx'
      ENDIF                 
C
C     HOV TIME
C
      IF (TABLE_HOV_TIME .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV_TIME 
        TEMX_HOV_TIME = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV_TIME .GE. 10).AND.(TABLE_HOV_TIME .LT. 100)) THEN
        WRITE (CTAB2,'(I2)') TABLE_HOV_TIME
        TEMX_HOV_TIME = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV_TIME .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV_TIME
        TEMX_HOV_TIME = 'mf'//CTAB3//'.emx'
      ENDIF      
C
C     HOV DISTANCE
C
      IF (TABLE_HOV_DIST .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV_DIST 
        TEMX_HOV_DIST = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV_DIST .GE. 10).AND.(TABLE_HOV_DIST .LT. 100)) THEN
        WRITE (CTAB2,'(I2)') TABLE_HOV_DIST
        TEMX_HOV_DIST = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV_DIST .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV_DIST
        TEMX_HOV_DIST = 'mf'//CTAB3//'.emx'
      ENDIF                      
C
C     SOV UNTOLLED TIME
C
      IF (TABLE_SOV_FREE_TIME .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_SOV_FREE_TIME 
        TEMX_SOV_FREE_TIME = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_SOV_FREE_TIME .GE. 10).AND.
     A  (TABLE_SOV_FREE_TIME .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_SOV_FREE_TIME
          TEMX_SOV_FREE_TIME = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_SOV_FREE_TIME .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_SOV_FREE_TIME
        TEMX_SOV_FREE_TIME = 'mf'//CTAB3//'.emx'
      ENDIF      
C
C     SOV UNTOLLED DISTANCE
C
      IF (TABLE_SOV_FREE_DIST .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_SOV_FREE_DIST 
        TEMX_SOV_FREE_DIST = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_SOV_FREE_DIST .GE. 10).AND.
     A  (TABLE_SOV_FREE_DIST .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_SOV_FREE_DIST
          TEMX_SOV_FREE_DIST = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_SOV_FREE_DIST .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_SOV_FREE_DIST
        TEMX_SOV_FREE_DIST = 'mf'//CTAB3//'.emx'
      ENDIF                 
C
C     HOV UNTOLLED TIME
C
      IF (TABLE_HOV_FREE_TIME .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV_FREE_TIME 
        TEMX_HOV_FREE_TIME = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV_FREE_TIME .GE. 10).AND.
     A  (TABLE_HOV_FREE_TIME .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_HOV_FREE_TIME
          TEMX_HOV_FREE_TIME = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV_FREE_TIME .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV_FREE_TIME
        TEMX_HOV_FREE_TIME = 'mf'//CTAB3//'.emx'
      ENDIF      
C
C     HOV UNTOLLED DISTANCE
C
      IF (TABLE_HOV_FREE_DIST .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV_FREE_DIST 
        TEMX_HOV_FREE_DIST = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV_FREE_DIST .GE. 10).AND.
     A  (TABLE_HOV_FREE_DIST .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_HOV_FREE_DIST
          TEMX_HOV_FREE_DIST = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV_FREE_DIST .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV_FREE_DIST
        TEMX_HOV_FREE_DIST = 'mf'//CTAB3//'.emx'
      ENDIF                      
C
C     SOV TOLLED TIME
C
      IF (TABLE_SOV_TOLL_TIME .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_SOV_TOLL_TIME 
        TEMX_SOV_TOLL_TIME = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_SOV_TOLL_TIME .GE. 10).AND.
     A  (TABLE_SOV_TOLL_TIME .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_SOV_TOLL_TIME
          TEMX_SOV_TOLL_TIME = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_SOV_TOLL_TIME .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_SOV_TOLL_TIME
        TEMX_SOV_TOLL_TIME = 'mf'//CTAB3//'.emx'
      ENDIF      
C
C     SOV TOLLED DISTANCE
C
      IF (TABLE_SOV_TOLL_DIST .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_SOV_TOLL_DIST 
        TEMX_SOV_TOLL_DIST = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_SOV_TOLL_DIST .GE. 10).AND.
     A  (TABLE_SOV_TOLL_DIST .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_SOV_TOLL_DIST
          TEMX_SOV_TOLL_DIST = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_SOV_TOLL_DIST .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_SOV_TOLL_DIST
        TEMX_SOV_TOLL_DIST = 'mf'//CTAB3//'.emx'
      ENDIF                             
C
C     SOV TOLLS
C
      IF (TABLE_SOV_TOLL .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_SOV_TOLL 
        TEMX_SOV_TOLL = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_SOV_TOLL .GE. 10).AND.
     A  (TABLE_SOV_TOLL .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_SOV_TOLL
          TEMX_SOV_TOLL = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_SOV_TOLL .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_SOV_TOLL
        TEMX_SOV_TOLL = 'mf'//CTAB3//'.emx'
      ENDIF                                   
C
C     HOV TOLLED TIME
C
      IF (TABLE_HOV_TOLL_TIME .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV_TOLL_TIME 
        TEMX_HOV_TOLL_TIME = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV_TOLL_TIME .GE. 10).AND.
     A  (TABLE_HOV_TOLL_TIME .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_HOV_TOLL_TIME
          TEMX_HOV_TOLL_TIME = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV_TOLL_TIME .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV_TOLL_TIME
        TEMX_HOV_TOLL_TIME = 'mf'//CTAB3//'.emx'
      ENDIF      
C
C     HOV TOLLED DISTANCE
C
      IF (TABLE_HOV_TOLL_DIST .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV_TOLL_DIST 
        TEMX_HOV_TOLL_DIST = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV_TOLL_DIST .GE. 10).AND.
     A  (TABLE_HOV_TOLL_DIST .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_HOV_TOLL_DIST
          TEMX_HOV_TOLL_DIST = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV_TOLL_DIST .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV_TOLL_DIST
        TEMX_HOV_TOLL_DIST = 'mf'//CTAB3//'.emx'
      ENDIF                             
C
C     HOV TOLLS
C
      IF (TABLE_HOV_TOLL .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV_TOLL 
        TEMX_HOV_TOLL = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV_TOLL .GE. 10).AND.
     A  (TABLE_HOV_TOLL .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_HOV_TOLL
          TEMX_HOV_TOLL = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV_TOLL .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV_TOLL
        TEMX_HOV_TOLL = 'mf'//CTAB3//'.emx'
      ENDIF                                   
C
C     OUTPUT UNTOLLED AUTO
C
      IF (TABLE_AUTO_FREE .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_AUTO_FREE 
        TEMX_AUTO_FREE = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_AUTO_FREE .GE. 10).AND.
     A  (TABLE_AUTO_FREE .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_AUTO_FREE
          TEMX_AUTO_FREE = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_AUTO_FREE .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_AUTO_FREE
        TEMX_AUTO_FREE = 'mf'//CTAB3//'.emx'
      ENDIF                                         
C
C     OUTPUT TOLLED AUTO
C
      IF (TABLE_AUTO_TOLL .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_AUTO_TOLL 
        TEMX_AUTO_TOLL = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_AUTO_TOLL .GE. 10).AND.
     A  (TABLE_AUTO_TOLL .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_AUTO_TOLL
          TEMX_AUTO_TOLL = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_AUTO_TOLL .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_AUTO_TOLL
        TEMX_AUTO_TOLL = 'mf'//CTAB3//'.emx'
      ENDIF                                         
C
C     OUTPUT SOV
C
      IF (TABLE_SOV1 .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_SOV1 
        TEMX_SOV1 = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_SOV1 .GE. 10).AND.
     A  (TABLE_SOV1 .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_SOV1
          TEMX_SOV1 = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_SOV1 .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_SOV1
        TEMX_SOV1 = 'mf'//CTAB3//'.emx'
      ENDIF                                      
C
C     OUTPUT TWO PERSON HOV
C
      IF (TABLE_HOV2 .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV2 
        TEMX_HOV2 = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV2 .GE. 10).AND.
     A  (TABLE_HOV2 .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_HOV2
          TEMX_HOV2 = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV2 .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV2
        TEMX_HOV2 = 'mf'//CTAB3//'.emx'
      ENDIF                                    
C
C     OUTPUT THREE OR MORE PERSON HOV
C
      IF (TABLE_HOV3 .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV3 
        TEMX_HOV3 = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV3 .GE. 10).AND.
     A  (TABLE_HOV3 .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_HOV3
          TEMX_HOV3 = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV3 .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV3
        TEMX_HOV3 = 'mf'//CTAB3//'.emx'
      ENDIF                                         
C
C     OUTPUT UNTOLLED SOV
C
      IF (TABLE_SOV1_FREE .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_SOV1_FREE 
        TEMX_SOV1_FREE = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_SOV1_FREE .GE. 10).AND.
     A  (TABLE_SOV1_FREE .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_SOV1_FREE
          TEMX_SOV1_FREE = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_SOV1_FREE .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_SOV1_FREE
        TEMX_SOV1_FREE = 'mf'//CTAB3//'.emx'
      ENDIF                                      
C
C     OUTPUT UNTOLLED TWO PERSON HOV
C
      IF (TABLE_HOV2_FREE .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV2_FREE 
        TEMX_HOV2_FREE = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV2_FREE .GE. 10).AND.
     A  (TABLE_HOV2_FREE .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_HOV2_FREE
          TEMX_HOV2_FREE = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV2_FREE .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV2_FREE
        TEMX_HOV2_FREE = 'mf'//CTAB3//'.emx'
      ENDIF                                    
C
C     OUTPUT UNTOLLED THREE OR MORE PERSON HOV
C
      IF (TABLE_HOV3_FREE .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV3_FREE 
        TEMX_HOV3_FREE = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV3_FREE .GE. 10).AND.
     A  (TABLE_HOV3_FREE .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_HOV3_FREE
          TEMX_HOV3_FREE = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV3_FREE .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV3_FREE
        TEMX_HOV3_FREE = 'mf'//CTAB3//'.emx'
      ENDIF                                                     
C
C     OUTPUT TOLLED SOV
C
      IF (TABLE_SOV1_TOLL .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_SOV1_TOLL 
        TEMX_SOV1_TOLL = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_SOV1_TOLL .GE. 10).AND.
     A  (TABLE_SOV1_TOLL .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_SOV1_TOLL
          TEMX_SOV1_TOLL = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_SOV1_TOLL .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_SOV1_TOLL
        TEMX_SOV1_TOLL = 'mf'//CTAB3//'.emx'
      ENDIF                                      
C
C     OUTPUT TOLLED TWO PERSON HOV
C
      IF (TABLE_HOV2_TOLL .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV2_TOLL 
        TEMX_HOV2_TOLL = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV2_TOLL .GE. 10).AND.
     A  (TABLE_HOV2_TOLL .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_HOV2_TOLL
          TEMX_HOV2_TOLL = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV2_TOLL .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV2_TOLL
        TEMX_HOV2_TOLL = 'mf'//CTAB3//'.emx'
      ENDIF                                    
C
C     OUTPUT TOLLED THREE OR MORE PERSON HOV
C
      IF (TABLE_HOV3_TOLL .LT. 10) THEN
        WRITE (CTAB1,'(I1)') TABLE_HOV3_TOLL 
        TEMX_HOV3_TOLL = 'mf'//CTAB1//'.emx'
      ENDIF 

      IF ((TABLE_HOV3_TOLL .GE. 10).AND.
     A  (TABLE_HOV3_TOLL .LT. 100)) THEN
          WRITE (CTAB2,'(I2)') TABLE_HOV3_TOLL
          TEMX_HOV3_TOLL = 'mf'//CTAB2//'.emx'
      ENDIF  

      IF (TABLE_HOV3_TOLL .GE. 100) THEN
        WRITE (CTAB3,'(I3)') TABLE_HOV3_TOLL
        TEMX_HOV3_TOLL = 'mf'//CTAB3//'.emx'
      ENDIF                                                     
C*******************
C  START REPORTING INPUT PARAMETERS
C*******************
	WRITE (31, '(/A)') ' ADDITIONAL TABLES FOR HOV AND TOLL OPTIONS' 
	WRITE (31,'(100A1)') ASTERIX
C
	IF ((TOLL .EQ. .TRUE.) .AND. ((HOV2 .EQ. .FALSE.) .AND. 
     A  (HOV3 .EQ. .FALSE.))) THEN 
 	  WRITE (31,'(/A)') ' &AUTOTAB'
	  WRITE (31,'(A,I2,A,A)') '   UNTOLLED TRAVEL TIME TABLE= MF',
     A    TABLE_FREE_TIME,': ',TEMX_FREE_TIME
	  WRITE (31,'(A,I2,A,A)') '   UNTOLLED DISTANCE TABLE= MF',
     A    TABLE_FREE_DIST,': ',TEMX_FREE_DIST
	  WRITE (31,'(A,I2,A,A)') '   TOLL PATH TRAVEL TIME TABLE= MF',
     A    TABLE_TOLL_TIME,': ',TEMX_TOLL_TIME
	  WRITE (31,'(A,I2,A,A)') '   TOLL PATH DISTANCE TABLE= MF',
     A    TABLE_TOLL_DIST,': ',TEMX_TOLL_DIST
	  WRITE (31,'(A,I2,A,A)') '   TOLL COST TABLE= MF',
     A    TABLE_TOLL,': ',TEMX_TOLL
	  WRITE (31,'(A,I2,A,A)') '   AUTO TRIPS ON FREE PATHS= MF',
     A    TABLE_AUTO_FREE,': ',TEMX_AUTO_FREE
 	  WRITE (31,'(A,I2,A,A)') '   AUTO TRIPS ON TOLL PATHS= MF',
     A    TABLE_AUTO_TOLL,': ',TEMX_AUTO_TOLL
	ENDIF
C
	IF ((TOLL .EQ. .FALSE.) .AND. ((HOV2 .EQ. .TRUE.) .OR. 
     A  (HOV3 .EQ. .TRUE.))) THEN 
 	  WRITE (31,'(/A)') ' &AUTOTAB'
	  WRITE (31,'(A,F8.4)')'   HOV 3= BIAS FOR HW TRIPS TO CBD=',
     A    HOV_CBDBIAS(1)
	  WRITE (31,'(A,F8.4)')'   HOV 3= BIAS FOR HW TRIPS TO NON-CBD=',
     A    HOV_BIAS(1)
	  WRITE (31,'(A,F8.4)')'   SHARED RIDE BIAS FOR HW TRIPS TO CBD=',
     A    HOV_CBDBIAS(2)
	  WRITE (31,'(A,F8.4)')'   SHARED RIDE BIAS FOR HW TRIPS TO NON-CB
     AD=',  HOV_BIAS(2)
C
	  WRITE (31,'(A,I2,A,A)') '   SOV TRAVEL TIME TABLE= MF',
     A    TABLE_SOV_TIME,': ',TEMX_SOV_TIME
	  WRITE (31,'(A,I2,A,A)') '   SOV DISTANCE TABLE= MF',
     A    TABLE_SOV_DIST,': ',TEMX_SOV_DIST
	  WRITE (31,'(A,I2,A,A)') '   HOV TRAVEL TIME TABLE= MF',
     A    TABLE_HOV_TIME,': ',TEMX_HOV_TIME
	  WRITE (31,'(A,I2,A,A)') '   HOV DISTANCE TABLE= MF',
     A    TABLE_HOV_DIST,': ',TEMX_HOV_DIST
	  WRITE (31,'(A,I2,A,A)') '   SOV TRIPS= MF',
     A    TABLE_SOV1,': ',TEMX_SOV1
	  WRITE (31,'(A,I2,A,A)') '   TWO PERSON HOV TRIPS= MF',
     A    TABLE_HOV2,': ',TEMX_HOV2
	  WRITE (31,'(A,I2,A,A)') '   THREE OR MORE PERSON HOV TRIPS= MF',
     A    TABLE_HOV3,': ',TEMX_HOV3
	ENDIF
C
	IF ((TOLL .EQ. .TRUE.) .AND. ((HOV2 .EQ. .TRUE.) .OR. 
     A  (HOV3 .EQ. .TRUE.))) THEN 
 	  WRITE (31,'(/A)') ' &AUTOTAB'
	  WRITE (31,'(A,F8.4)')'   HOV 3= BIAS FOR HW TRIPS TO CBD=',
     A    HOV_CBDBIAS(1)
	  WRITE (31,'(A,F8.4)')'   HOV 3= BIAS FOR HW TRIPS TO NON-CBD=',
     A    HOV_BIAS(1)
	  WRITE (31,'(A,F8.4)')'   SHARED RIDE BIAS FOR HW TRIPS TO CBD=',
     A    HOV_CBDBIAS(2)
	  WRITE (31,'(A,F8.4)')'   SHARED RIDE BIAS FOR HW TRIPS TO NON-CB
     AD=',  HOV_BIAS(2)
C
	  WRITE (31,'(A,I2,A,A)') '   UNTOLLED TRAVEL TIME TABLE= MF',
     A    TABLE_FREE_TIME,': ',TEMX_FREE_TIME
	  WRITE (31,'(A,I2,A,A)') '   UNTOLLED DISTANCE TABLE= MF',
     A    TABLE_FREE_DIST,': ',TEMX_FREE_DIST
	  WRITE (31,'(A,I2,A,A)') '   TOLL PATH TRAVEL TIME TABLE= MF',
     A    TABLE_TOLL_TIME,': ',TEMX_TOLL_TIME
	  WRITE (31,'(A,I2,A,A)') '   TOLL PATH DISTANCE TABLE= MF',
     A    TABLE_TOLL_DIST,': ',TEMX_TOLL_DIST
   	  WRITE (31,'(A,I2,A,A)') '   TOLL COST TABLE= MF',
     A    TABLE_TOLL,': ',TEMX_TOLL
	  WRITE (31,'(A,I2,A,A)') '   SOV UNTOLLED TRAVEL TIME TABLE= MF',
     A    TABLE_SOV_FREE_TIME,': ',TEMX_SOV_FREE_TIME
	  WRITE (31,'(A,I2,A,A)') '   SOV UNTOLLED DISTANCE TABLE= MF',
     A    TABLE_SOV_FREE_DIST,': ',TEMX_SOV_FREE_DIST
	  WRITE (31,'(A,I2,A,A)') '   HOV UNTOLLED TRAVEL TIME TABLE= MF',
     A    TABLE_HOV_FREE_TIME,': ',TEMX_HOV_FREE_TIME
	  WRITE (31,'(A,I2,A,A)') '   HOV UNTOLLED DISTANCE TABLE= MF',
     A    TABLE_HOV_FREE_DIST,': ',TEMX_HOV_FREE_DIST
	  WRITE (31,'(A,I2,A,A)') '   SOV TOLL PATH TRAVEL TIME TABLE= MF',
     A    TABLE_SOV_TOLL_TIME,': ',TEMX_SOV_TOLL_TIME
	  WRITE (31,'(A,I2,A,A)') '   SOV TOLL PATH DISTANCE TABLE= MF',
     A    TABLE_SOV_TOLL_DIST,': ',TEMX_SOV_TOLL_DIST
        WRITE (31,'(A,I2,A,A)') '   SOV TOLL COST TABLE= MF',
     A    TABLE_SOV_TOLL,': ',TEMX_SOV_TOLL
	  WRITE (31,'(A,I2,A,A)') '   HOV TOLL PATH TRAVEL TIME TABLE= MF',
     A    TABLE_HOV_TOLL_TIME,': ',TEMX_HOV_TOLL_TIME
	  WRITE (31,'(A,I2,A,A)') '   HOV TOLL PATH DISTANCE TABLE= MF',
     A    TABLE_HOV_TOLL_DIST,': ',TEMX_HOV_TOLL_DIST
        WRITE (31,'(A,I2,A,A)') '   HOV TOLL COST TABLE= MF',
     A    TABLE_HOV_TOLL,': ',TEMX_HOV_TOLL
	  WRITE (31,'(A,I2,A,A)') '   SOV TRIPS ON UNTOLLED PATHS= MF',
     A    TABLE_SOV1_FREE,': ',TEMX_SOV1_FREE
	  WRITE (31,'(A,I2,A,A)') '   TWO PERSON HOV TRIPS ON UNTOLLED PATHS= 
     AMF',TABLE_HOV2_FREE,': ',TEMX_HOV2_FREE
	  WRITE (31,'(A,I2,A,A)') '   THREE OR MORE PERSON HOV TRIPS ON UNTOLL
     AED PATHS= MF', TABLE_HOV3_FREE,': ',TEMX_HOV3_FREE
	  WRITE (31,'(A,I2,A,A)') '   SOV TRIPS ON TOLL PATHS= MF',
     A    TABLE_SOV1_TOLL,': ',TEMX_SOV1_TOLL
	  WRITE (31,'(A,I2,A,A)') '   TWO PERSON HOV TRIPS ON TOLL PATHS=MF',
     A    TABLE_HOV2_TOLL,': ',TEMX_HOV2_TOLL
	  WRITE (31,'(A,I2,A,A)') '   THREE OR MORE PERSON HOV TRIPS ON TOLL P
     AATHS= MF', TABLE_HOV3_TOLL,': ',TEMX_HOV3_TOLL

	ENDIF

      WRITE (31,'(A)') ' &END'
      WRITE (31,'(100A1)') ASTERIX
C
      RETURN
      END