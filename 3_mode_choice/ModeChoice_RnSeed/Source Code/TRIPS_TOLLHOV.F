      SUBROUTINE TRIPS_TOLLHOV(ORIG)
      IMPLICIT INTEGER (A-Z)
C*******************
C  THIS SUBROUTINE PERFORMS THE OPERATION OF SIMULATING THE TRIPS
C       FROM THIS ORIGIN
C  THIS SUBROUTINE IS CALLED ONCE PER ZONE SELECTED FOR ANALYSIS.
C  NOTE THAT SUBROUTING IS NOT CALLED WHEN ZONE HAS NO TRIPS.
C  THIS IS THE VERSION USED WHEN BOTH HOV AND TOLL ARE TURNED ON.
C  THE MODEL FOR THE HOV CALUCLATION IS BORROWED FROM THE COMSIS-
C  MARYLAND NATIONAL CAPITAL PARKS AND PLANNING COMMISSION MODEL
C*******************
C
C     THIS IS THE INTERCHANGE VERSION OF THE MODEL AND THERE ARE
C     SEVERAL CODING CHANGES IN THIS SUBROUTINE FROM THE TRIP
C     END VERSION
C     THERE IS AN ADDITIONAL LOOP OUTSIDE THE DO LOOP FOR ITERATIONS
C     FOR ALL DESTINATIONS WITH INTERCHANGES FROM THE ORIGIN ZONE
C     AS THE SIMULATION PROGRESSES, TWO FILES ARE WRITTEN, ONE FOR
C     SIMULATED TRANSIT TRIPS AND ONE FOR AUTO TRIPS
C     MODE CHOICE IS DONE USING BINARY MONTE CARLO SIMULATION
C
C     THIS VERSION INCLUDES AN OPTION TO SUBDIVIDE THE AUTO MODE
C     INTO ONE, TWO AND THREE PLUS PERSON AUTO OCCUPANCY BY TOLL AND
C     UNTOLLED PATHS.  THE MODEL APPLIED IS THE COMSIS-MNCPPC OCCUPANCY
C     MODEL.
C
C     LOGIC IS TO FIRST ESTIMATE AUTO-TRANSIT MODE CHOICE USING THE
C     CATS BINAARY MODEL MODE CHOICE COEFFICIENTS.  THIS MODE SHARE IS
C     THEN USED TO CALCULATE THE TRANSIT UTILITY IN THE COMSIS-MNCPPC
C     MODEL.
C
C ##  Heither 09-06-2016: Add ITER to program        
C############ Heither, 07-11-2018: updated to support 4000 zones
C*******************
      INCLUDE 'Common_params.fi'
	INCLUDE 'Common_data.fI'
      INCLUDE 'Common_emme4bank.fi'
	INCLUDE 'Common_approach_model.fi'
	INCLUDE 'Common_cbdparking.fi'

      INCLUDE 'Common_auto_params.fi'
      INCLUDE 'Common_auto_emme4bank.fi'

      REAL*4 ARNUMT, ARNUMA, ARNUMA_TOLL
	REAL*4 RAN_NUM, RAN_NUM1, RAN_NUM2, RAN_NUM3, RAN_NUM4, RAN_NUM5, 
     A  TTP, TTP1, TTP2, TTP3, TTP1_FREE, TTP2_FREE, TTP3_FREE, 
     B  TTP1_TOLL, TTP2_TOLL, TTP3_TOLL

	REAL*4 D, DD, ACOST, ACOST0, ACOST1, ACOST2, ACOST_TOLL, 
     A  ACOST0_TOLL, ACOST1_TOLL, ACOST2_TOLL, INCOME, AUTOCC, HEADER,
     B  WALK, CAPK
      
      REAL*4 SC, SC1,	SC2, SC3, SC1_TOLL, SC2_TOLL, SC3_TOLL, SCT, SCA 

      REAL*4 U2, U3, U4PLUS, UDA, USR, UAUTO, UTRAN
      REAL*4 U2_TOLL, U3_TOLL, U4PLUS_TOLL, UDA_TOLL, USR_TOLL, 
     A  UAUTO_TOLL

C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      REAL*4 HOV_BIAS1, HOV_BIAS2
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************

	LOGICAL*4 CBDIND, NOTTRO, NOTTRD
C
C     REOPEN EMMEBANK
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C      OPEN (UNIT=32, FILE='EMMEBANK',
C     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
C
C      OPEN (UNIT=42, FILE='AUTOBANK',
C     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      OPEN (UNIT=951, FILE='emmemat/'//TEMX_AUTO,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
      OPEN (UNIT=952, FILE='emmemat/'//TEMX_TRANSIT,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
      OPEN (UNIT=953, FILE='emmemat/'//TEMX_SOV1_FREE,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
      OPEN (UNIT=954, FILE='emmemat/'//TEMX_SOV1_TOLL,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
      OPEN (UNIT=955, FILE='emmemat/'//TEMX_HOV2_FREE,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
      OPEN (UNIT=956, FILE='emmemat/'//TEMX_HOV2_TOLL,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
      OPEN (UNIT=957, FILE='emmemat/'//TEMX_HOV3_FREE,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
      OPEN (UNIT=958, FILE='emmemat/'//TEMX_HOV3_TOLL,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
C
C     ALL TRIPS ARE SIMULATED FOR EACH DESTINATION
C
      DO II=1,ZONES
	  ATRIP(II) = 0.0
        ATRIP1(II) = 0.0
        ATRIP2(II) = 0.0
        ATRIP3(II) = 0.0
	  ATRIP1_TOLL(II) = 0.0
        ATRIP2_TOLL(II) = 0.0
        ATRIP3_TOLL(II) = 0.0
        TTRIP(II) = 0.0
      ENDDO
C
C  REVISED COUNTER
C
      SC = 0.0
	SC1 = 0.0 
	SC2 = 0.0 
	SC3 = 0.0
	SC1_TOLL = 0.0 
	SC2_TOLL = 0.0 
	SC3_TOLL = 0.0
	SCT = 0.0
	SCA = 0.0 
C
C  THE NEXT FEW STATEMENTS DETERMINE WHETHER OR NOT THIS ZONE
C               IS SERVED BY A TRANSIT MODE
C                      IF NOT, DON'T BOTHER SIMULATING
C
      NOTTRO = .TRUE.
C
C    NEED ONE DESTINATION ZONE ACCESSIBLE BY TRANSIT
C
      DO I=1,ZONES
	  IF (DZOI(I)) THEN
          IF ((DISTR(I,1,3).NE.999).OR.(DISTR(I,2,3).NE.999).OR.
     A      (DISTR(I,3,3).NE.999).OR.(DISTR(I,4,3).NE.999)) THEN
            IF(PMD(I).GE.3) THEN
              NOTTRO = .FALSE.
            ENDIF
          ENDIF
        ENDIF
      ENDDO
C
C     CHECK ORIGIN FOR DISTR PARAMETERS
C
      IF ((DISTR(ORIG,1,3).EQ.999).AND.(DISTR(ORIG,2,3).EQ.999).AND.
     A  (DISTR(ORIG,3,3).EQ.999).AND.(DISTR(ORIG,4,3).EQ.999).AND.
     B  (DISTR(ORIG,5,3).EQ.999)) THEN
        NOTTRO = .TRUE.
      ENDIF 

      IF (NOTTRO) THEN
	  WRITE(31,505) ORIG
      ENDIF

  505 FORMAT(' ZONE ',I5,' NOT SERVED BY A TRANSIT MODE(4-8)')
C****************************************
C  THIS BEGINS THE SIMULATION OF TRIPS  *
C****************************************
      DEST = 0
C
C     START OF LOOP BY DESTINATION ZONE
C
50502 CONTINUE

      DEST = DEST + 1
C
C     SKIP DESTINATION ZONE, TRIPS DETERMINED ABOVE
C
C       1.  NOT SELECTED FOR SIMULATION:  TTRIP=0, ATRIP1=0, ATRIP2=0,
C           ATRIP3=0
C       2.  NO TRIPS BBETWEEN ORIGIN AND DESTINATION ZONES:  TTRIP=0, 
C           ATRIP1=0, ATRIP2=0, ATRIP3=0
C
      IF ((.NOT. DZOI(DEST)) .OR. (PTRIP(DEST) .EQ. 0)) GO TO 10102
C
C	START OF DO LOOP FOR ALL TRIPS IN INTERCHANGE
C
C************ RWE CHANGE FOR I290 ROUND 3 MODELS MARCH 2013 ************
C
C       SIMULATE 1000 TRIPS TO OBTAIN MODE SHARES
C
C   Heither, CMAP 11-05-13: simulate 100 trips
C ##   Heither, CMAP 09-06-2016: simulate ITER trips       
C***********************************************************************
C      ITER = PTRIP(DEST)
      DO 10101 I=1,ITER
C
C  NOW THAT THE DESTINATION HAS BEEN OBTAINED,
C      CHECK TO SEE IF TRANSIT WILL GO TO THAT ZONE
C
      NOTTRD = .TRUE.
      
      IF(PMD(DEST).GE.3) THEN
        IF ((DISTR(DEST,1,3).NE.999).OR.(DISTR(DEST,2,3).NE.999).OR.
     A    (DISTR(DEST,3,3).NE.999).OR.(DISTR(DEST,4,3).NE.999)) THEN
          NOTTRD = .FALSE.
        ENDIF
      ENDIF
C
C  SET THE MINIMUM LINE HAUL DRIVING TIME TO ONE MINUTE
C
      IF(ZLHT(DEST).LT.1) ZLHT(DEST)=1
      IF(ZLHT1(DEST).LT.1) ZLHT1(DEST)=1
      IF(ZLHT2(DEST).LT.1) ZLHT2(DEST)=1
      IF(ZLHT$(DEST).LT.1) ZLHT$(DEST)=1
      IF(ZLHT1$(DEST).LT.1) ZLHT1$(DEST)=1
      IF(ZLHT2$(DEST).LT.1) ZLHT2$(DEST)=1
C
C  RUN A CHECK FOR A CBD DESTINATION
C
      CBDIND=.FALSE.
      IF(ZCBD(DEST)) CBDIND=.TRUE.
C*******************
C  THE NEXT SECTION COMPUTES THE AUTO OPERATING COSTS IN CENTS
C*******************
C
C     AUTO FREE PATH COSTS
C
      D=ZLHD(DEST)
      DD=ZLHT(DEST)
	IF (D .GT. 0 .AND. DD .GT. 0) THEN 
        CALL AUTCST(I,ORIG,DEST,D,DD,ACOST)
	ELSE
	  ACOST = 0.0
      ENDIF
C
C     SOV FREE PATH COSTS
C
      D=ZLHD1(DEST)
      DD=ZLHT1(DEST)
	IF (D .GT. 0 .AND. DD .GT. 0) THEN 
        CALL AUTCST(I,ORIG,DEST,D,DD,ACOST1)
	ELSE
	  ACOST1 = 0.0
      ENDIF
C
C     HOV FREE PATH COSTS
C
      D=ZLHD2(DEST)
      DD=ZLHT2(DEST)
	IF (D .GT. 0 .AND. DD .GT. 0) THEN 
        CALL AUTCST(I,ORIG,DEST,D,DD,ACOST2)
	ELSE
	  ACOST2 = 0.0
      ENDIF
C
C     AUTO TOLL PATH COSTS
C
      D=ZLHD$(DEST)
      DD=ZLHT$(DEST)
	IF (D .GT. 0 .AND. DD .GT. 0) THEN 
        CALL AUTCST(I,ORIG,DEST,D,DD,ACOST_TOLL)
	ELSE
	  ACOST_TOLL = 0.0
      ENDIF
C
C     SOV TOLL PATH COSTS
C
      D=ZLHD1$(DEST)
      DD=ZLHT1$(DEST)
	IF (D .GT. 0 .AND. DD .GT. 0) THEN 
        CALL AUTCST(I,ORIG,DEST,D,DD,ACOST1_TOLL)
	ELSE
	  ACOST1_TOLL = 0.0
      ENDIF
C
C     HOV TOLL PATH COSTS
C
      D=ZLHD2$(DEST)
      DD=ZLHT2$(DEST)
	IF (D .GT. 0 .AND. DD .GT. 0) THEN 
        CALL AUTCST(I,ORIG,DEST,D,DD,ACOST2_TOLL)
	ELSE
	  ACOST2_TOLL = 0.0
      ENDIF
C*******************
C  THE NEXT SECTION OBTAINS THE INCOME OF THE TRIPMAKER
C      IF THIS A HOME BASED TRIP START WITH THE ZONAL MEDIAN INCOME
C         AT THE DESTINATION RATHER THAN AT THE ORIGIN
C*******************
	  
C## Heither, 01-11-2018: the following INCDIS change was implemented in TRIPS but not TRIPS_TOLLHOV until now. 
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      IF (TPTYPE .NE. 3) THEN
        MEDINC=INC(ORIG)*100
        CALL INCDIS(I,ORIG,DEST,MEDINC,INCOME)
C
C  IF WE HAVE A NON-HOME BASED TRIP USE THE AVERAGE REGIONAL
C     2007 ACS HH INCOME FOR CHICAGO METRO AREA
      ELSE
	  INCOME = 59300.
      ENDIF		 
	  
C
C  THE CALL TO SUBROUTINE TRAPP WILL RETURN THE TRANSIT APPROACH TIMES
C
      IF ((.NOT. NOTTRO) .AND. (.NOT. NOTTRD)) THEN 
	  CALL TRAPP(I,ORIG,DEST,EIVT,EOVT,EC)
C
        HEADER=0.5*HWAY(DEST)
C
C     COSTS ARE DISCOUNTED FROM 1990 TO 1970 (CALIBRATION YEAR)
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     COSTS ARE ESTIMATED IN CURRENT DOLLARS AND MODEL COST COEFFICIENT 
C     HAS BEEN ADJUSTED ACCORDINGLY, SO DISCNT = 1.00
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
        FARE(DEST) = FARE(DEST) * DISCNT
	  EC = EC * DISCNT
C
C   COMPUTE TRANSIT UTILITY:  NOTE THAT SIGN ON TRANSIT BIAS COEFFICIENT
C   IS NEGATIVE BECAUSE IT IS ENTERED AS MINUS NUMBER.  TRANSIT BIAS IS
C   AN ADDITIONAL TRANSIT COST, I.E., TRANSIT IS LESS THAN 50 PERCENT
C   EVERYTHING ELSE BEING EQUAL.
C
        IF(.NOT.CBDIND) THEN
	    ARNUMT= COEFF1(1)*IVT(DEST)+
     A            COEFF1(2)*(FARE(DEST)+EC)+
     B            COEFF1(3)*EIVT-
     C            COEFF1(4)+
     D            COEFF1(5)*(OVT(DEST)+EOVT)+
     E            COEFF1(6)*HEADER
	  ENDIF
C
	  IF(CBDIND) THEN
	    ARNUMT= COEFF2(1)*IVT(DEST)+
     A            COEFF2(2)*(FARE(DEST)+EC)+
     B            COEFF2(3)*EIVT-
     C            COEFF2(4)+
     D            COEFF2(5)*(OVT(DEST)+EOVT)+
     E            COEFF2(6)*HEADER
	  ENDIF
C
C     WRITE UTILITIES IF TRACE IS TURNED ON
C
	  IF (TRACE) THEN
	    WRITE (31, '(/A)') ' TRANSIT INPUTS IN SUBROUTINE TRIPS'

	    WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
	    WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST

  	    WRITE (31, '(A,F8.3)') '   FIRST MODE (FMD)=',FMD(DEST)
  	    WRITE (31, '(A,F8.3)') '   LAST MODE (LMD)=',LMD(DEST)
  	    WRITE (31, '(A,F8.3)') '   PRIORITY MODE (PMD)=',PMD(DEST)
  	    WRITE (31, '(A,F8.3)') '   IN-VEHICLE TIME (IVT)=',IVT(DEST)
  	    WRITE (31, '(A,F8.3)') '   TRANSIT FARE (FARE)=',FARE(DEST)
  	    WRITE (31, '(A,F8.3)') '   OUT-OF-VEHICLE TIME (OVT)=',
     A      OVT(DEST)
  	    WRITE (31, '(A,F8.3)') '   INITIAL WAIT TIME (1/2 HEADWAY)=',
     A      HEADER
	    WRITE (31, '(A,I6)') '   APPROACH IVT (EIVT)=',EIVT
  	    WRITE (31, '(A,I6)') '   APPROACH TRANSIT FARE (EC)=',EC
  	    WRITE (31, '(A,I6)') '   APPROACH OVT (EOVT)=',EOVT
	    WRITE (31, '(A,F8.3)') '   TRANSIT UTILITY (ARNUMT)=',ARNUMT
	  ENDIF
	ENDIF
C
C  THE CALL TO PRKCST OBTAINS THE COST OF PARKING FOR A HIGHWAY TRIP
C    CAPK CONTAINS COST OF PARKING
C    WALK IS THE AVERAGE WALK TIME FROM THE AUTO TO THE DESTINATION
C
      INTOCC = 0
      CALL PRKCST(I,ORIG,DEST,INCOME,CAPK,WALK,INTOCC)
C
      ACOST=0.5*CAPK+ACOST+AFC1
	ACOST1=0.5*CAPK+ACOST1+AFC1
      ACOST2=0.5*CAPK+ACOST2+AFC1

	ACOST_TOLL=0.5*CAPK+ACOST_TOLL+AFC1 + ZLHC(DEST)
	ACOST1_TOLL=0.5*CAPK+ACOST1_TOLL+AFC1 + ZLHC1(DEST)
      ACOST2_TOLL=0.5*CAPK+ACOST2_TOLL+AFC1 + ZLHC2(DEST)
C*******************
C  ACOST CONTAINS THE TOTAL COST OF THE HIGHWAY TRIP ON PATH
C    WITHOUT HOV LANE IN PLACE
C  ACOST0 ALSO CONTAINS THE TOTAL COST OF THE HIGHWAY TRIP ON PATH
C    WITHOUT HOV LANE IN PLACE FOR THE HOV CALCULATIONS
C  ACOST1 CONTAINS THE COST OF THE HIGHWAY TRIP ON THE SOV PATH
C    WITH HOV LANE IN PLACE
C  ACOST2 CONTAINS THE COST OF THE HIGHWAY TRIP ON THE HOV PATH
C    WITH HOV LANE IN PLACE
C  ACOST VARIABLES SUFFIXED WITH TOLL ARE SAME AS ABOVE FOR TOLL PATHS
C*******************
C
C     AUTO OCCUPANCY DETERMINED BY THE FOLLOWING OPTIONS/PRIORITIES:
C
C       1.  FROM PARKING MODEL WHEN DEST IS A CBD PARKING ZONE
C       2.  OCCUPANCIES INPUT VIA TABLE FROME EMMEBANK
C       3.  OBTAINED FROM M023 INPUT
C
      AUTOCC = ZOCC(DEST)
C
C     FOLLOWING CODE ALLOWS USER TO INPUT AUTO OCCUPANCIES
C
      IF (AOCC) AUTOCC = COCC(DEST)
C
C     OCCUPANCY RETURNED FROM PRKCBD ALWAYS IS USED
C
      IF (INTOCC .GT. 0) AUTOCC=INTOCC
C
C    COMPUTE FINAL AUTO COST
C
      ACOST0 = ACOST
	ACOST0_TOLL = ACOST_TOLL
      ACOST=ACOST/AUTOCC
	ACOST_TOLL=ACOST_TOLL/AUTOCC
C
C     COSTS ARE DISCOUNTED FROM 1990 TO 1970 (CALIBRATION YEAR) IN CATS 
C     MODEL
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     COSTS ARE ESTIMATED IN CURRENT DOLLARS FOR I290 RUNS AND MODEL 
C     COST COEFFICIENT HAS BEEN ADJUSTED ACCORDINGLY, SO DISCNT IS 
C     INPUT AS 1.00
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      ACOST = ACOST * DISCNT
      ACOST_TOLL = ACOST_TOLL * DISCNT
C
      ACOST0 = ACOST0 * DISCNT
      ACOST1 = ACOST1 * DISCNT
      ACOST2 = ACOST2 * DISCNT
C
      ACOST0_TOLL = ACOST0_TOLL * DISCNT
      ACOST1_TOLL = ACOST1_TOLL * DISCNT
      ACOST2_TOLL = ACOST2_TOLL * DISCNT
C
C    COMPUTE AUTO UTILITY
C
      IF(.NOT.CBDIND) THEN
	  ARNUMA= COEFF1(1)*ZLHT(DEST)+
     A          COEFF1(2)*ACOST+
     B          COEFF1(3)*WALK
        ARNUMA_TOLL= COEFF1(1)*ZLHT(DEST)+
     A          COEFF1(2)*ACOST_TOLL+
     B          COEFF1(3)*WALK

	ENDIF
      IF(CBDIND) THEN
	  ARNUMA= COEFF2(1)*ZLHT(DEST)+
     A          COEFF2(2)*ACOST+
     B          COEFF2(3)*WALK
        ARNUMA_TOLL= COEFF2(1)*ZLHT(DEST)+
     A          COEFF2(2)*ACOST_TOLL+
     B          COEFF2(3)*WALK
	ENDIF
C
C     WRITE UTILITIES IF TRACE IS TURNED ON
C
	IF (TRACE) THEN
	  WRITE (31, '(/A)') ' HIGHWAY INPUTS IN SUBROUTINE TRIPS'
	
	  WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
	  WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST
	 
	  WRITE (31, '(A,I8)') '   HOUSEHOLD MEDIAN INCOME=', MEDINC
	  WRITE (31, '(A,F8.0)') '   HOUSEHOLD INCOME=', INCOME
  	  WRITE (31, '(A,F8.3)') '   FREE PATH HIGHWAY TRAVEL TIME (ZLHT)=
     A', ZLHT(DEST)
	  WRITE (31, '(A,F8.3)') '   TOLL PATH HIGHWAY TRAVEL TIME (ZLHT$)
     A=', ZLHT$(DEST)
  	  WRITE (31, '(A,F8.3)') '   FREE PATH HIGHWAY DISTANCE (ZLHD)=',
     A    ZLHD(DEST)
	  WRITE (31, '(A,F8.3)') '   TOLL PATH HIGHWAY DISTANCE (ZLHD$)=',
     A    ZLHD$(DEST)
  	  WRITE (31, '(A,F8.3)') '   AUTO OCCUPANCY (AUTOCC)= ',AUTOCC
  	  WRITE (31, '(A,F8.3)') '   CBD PARKING COST (CAPK)= ',CAPK
  	  WRITE (31, '(A,I8)')   '   AUTO FIXED COST (AFC1)= ',AFC1
  	  WRITE (31, '(A,F8.3)') '   FINAL AUTO FREE PATH COST (ACOST)=',
     A    ACOST
	  WRITE (31, '(A,F8.3)') '   FINAL AUTO TOLL PATH COST (ACOST_TOLL
     A)=', ACOST_TOLL
	  WRITE (31, '(A,F8.3)') '   WALK TIME (WALK)= ',WALK
	  WRITE (31, '(A,F8.3)') '   FREE PATH HIGHWAY UTILITY (ARNUMA)=',
     A    ARNUMA
        WRITE (31, '(A,F8.3)') '   TOLL PATH HIGHWAY UTILITY (ARNUMA_TOL
     AL)=', ARNUMA_TOLL
	ENDIF
C
C   TTP BECOMES THE PROBABILITY THIS TRIP IS BY TRANSIT IN THE
C     CATS MODEL
C
      IF ((.NOT. NOTTRO) .AND. (.NOT. NOTTRD)) THEN 
	  
	  IF (ARNUMA_TOLL .GT. ARNUMA) THEN
	    TTP = EXP(-ARNUMT)/(EXP(-ARNUMT)+EXP(-ARNUMA))
	  ELSE 
	    TTP = EXP(-ARNUMT)/(EXP(-ARNUMT)+EXP(-ARNUMA_TOLL))
	  ENDIF
	  
	ELSE
	  TTP = 0.0
	ENDIF
C
C   NOW MOVE TO COMSIS-MNCPPC MODEL:
C
C   1.  DETERMINE AUTO OWNERSHIP LEVEL TO USE IN DRIVE ALONE-SHARED RIDE
C       MODEL
C
	CALL RANDOM(RAN_NUM)
C
      C0 = 0
      C1 = 0
      C2PLUS = 1
      IF (RAN_NUM .LE. COWN1(ORIG)) THEN
        C2PLUS = 0
        C1 =1
      ENDIF
      IF (RAN_NUM .LE. COWN0(ORIG)) THEN
        C1 =0
        C0 =1
      ENDIF
C
C   2.  U2, U3, U4PLUS ARE SHARED RIDE UTILITIES COMPUTED WITHOUT HOV 
C       LANE
C
C*******************  RWE CHANGE FOR I290 OCTOBER 2009  ****************
C
C     ORIGINAL COMSIS COST COEFFICIENTS ADJUSTED TO 2009 (*0.55)
C
      IF (CBDIND) THEN
        HOV_BIAS1 = HOV_CBDBIAS(1)
	  HOV_BIAS2 = HOV_CBDBIAS(2)
      ELSE
        HOV_BIAS1 = HOV_BIAS(1)
	  HOV_BIAS2 = HOV_BIAS(2)
      ENDIF

      U2 = -0.138*ZLHT(DEST) - 0.00275*ACOST0/2
      U3 = -0.138*ZLHT(DEST) - 0.00275*ACOST0/3 - HOV_BIAS1
      U4PLUS = -0.138*ZLHT(DEST) - 0.00275*ACOST0/5.56 - HOV_BIAS1

	U2_TOLL = -0.138*ZLHT$(DEST) - 0.00275*ACOST0_TOLL/2
      U3_TOLL = -0.138*ZLHT$(DEST) - 0.00275*ACOST0_TOLL/3 - HOV_BIAS1
      U4PLUS_TOLL = -0.138*ZLHT$(DEST) - 0.00275*ACOST0_TOLL/5.56 - 
     A  HOV_BIAS1
C
C   3.  UDA = DRIVE ALONE UTILITY (NO HOV LANE)
C       USR = SHARED RIDE UTILITY (NO HOV LANE)
C
      UDA = -0.078*ZLHT(DEST) - 0.001155*ACOST0
      USR = LOG(EXP(U2)+EXP(U3)+EXP(U4PLUS))

      UDA_TOLL = -0.078*ZLHT$(DEST) - 0.001155*ACOST0_TOLL
      USR_TOLL = LOG(EXP(U2_TOLL)+EXP(U3_TOLL)+EXP(U4PLUS_TOLL))
C
      USR = 0.536*USR + 3.204*C0 - 1.941*C1 - 2.373*C2PLUS - HOV_BIAS2
      USR_TOLL = 0.536*USR_TOLL + 3.204*C0 - 1.941*C1 - 
     A  2.373*C2PLUS - HOV_BIAS2
C*******************  RWE CHANGE FOR I290 OCTOBER 2009  ****************
C
C   4.  UAUTO = AUTO UTILITY (NO HOV LANE)
C
      UAUTO = LOG(EXP(UDA)+EXP(USR))
      UAUTO = 0.571*UAUTO - 0.141*WALK
	
	UAUTO_TOLL = LOG(EXP(UDA_TOLL)+EXP(USR_TOLL))
      UAUTO_TOLL = 0.571*UAUTO_TOLL - 0.141*WALK
C
C   5.  NOW ESTIMATE EQUIVALENT TRANSIT UTILITY IN COMSIS MODEL (UTRAN)
C       WITHOUT HOV LANE IN PLACE
C
C*******************  RWE CHANGE FOR I290 OCTOBER 2009  ****************
      IF ((.NOT. NOTTRO) .AND. (.NOT. NOTTRD) .AND. (TTP.GT.0.0)) THEN
C*******************  RWE CHANGE FOR I290 OCTOBER 2009  ****************
        UTRAN = TTP*EXP(UAUTO)/(1-TTP)
        IF (UAUTO_TOLL .GT. UAUTO) UTRAN = TTP*EXP(UAUTO_TOLL)/(1-TTP)

        UTRAN = LOG(UTRAN)
	ELSE
	  UTRAN = 0.0
      ENDIF
C
C     WRITE COMSIS MODEL PARAMETERS IF TRACE IS TURNED ON
C
	IF (TRACE) THEN
	  WRITE (31, '(/A)') ' COMSIS MODEL PARAMETERS WITHOUT HOV LANE'
	
	  WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
	  WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST

	  WRITE (31, '(A,F8.4)') '   TRANSIT PROBABILITY (TTP)=', TTP

	  WRITE (31, '(A,F8.4)') '   RANDOM NUMBER (RAN_NUM)=', RAN_NUM
	  WRITE (31, '(A,3F8.4)')'   CAR OWNERSHIP PROBABILITIES (COWN0, C
     AOWN1, COWN2)=', COWN0(DEST), COWN1(DEST), COWN2(DEST)
	  WRITE (31, '(A,3I2)')  '   CAR OWNERSHIP VARIABLES (C0, C1, C2PL
     AUS)=', C0, C1, C2PLUS

	  WRITE (31, '(A,F6.2)')  '   FREE PATH AUTO COST WITHOUT HOV LANE
     A (ACOST0)=', ACOST0
	  WRITE (31, '(A,F6.2)')  '   TOLL PATH AUTO COST WITHOUT HOV LANE
     A (ACOST0_TOLL)=', ACOST0_TOLL

	  WRITE (31, '(A,3F8.3)')  '   FREE PATH SHARED RIDE UTILITIES (U2
     A, U3, U4PLUS)=', U2, U3, U4PLUS
	  WRITE (31, '(A,3F8.3)')  '   TOLL PATH SHARED RIDE UTILITIES (U2
     A_TOLL, U3_TOLL, U4PLUS_TOLL)=', U2_TOLL, U3_TOLL, U4PLUS_TOLL
	  WRITE (31, '(A,F8.3)')  '   FREE PATH DRIVE ALONE UTILITY (UDA)=
     A', UDA
	  WRITE (31, '(A,F8.3)')  '   TOLL PATH DRIVE ALONE UTILITY (UDA_T
     AOLL)=', UDA_TOLL
	  WRITE (31, '(A,F8.3)') '   FREE PATH COMPOSITE SHARED RIDE UTILI
     ATY (USR)=', USR
	  WRITE (31, '(A,F8.3)') '   TOLL PATH COMPOSITE SHARED RIDE UTILI
     ATY (USR_TOLL)=', USR_TOLL
	  WRITE (31, '(A,F8.3)') '   WALK TIME (WALK)= ',WALK
	  WRITE (31, '(A,F8.3)')  '   FREE PATH AUTO UTILITY (UAUTO)=', 
     A    UAUTO
        WRITE (31, '(A,F8.3)')  '   TOLL PATH AUTO UTILITY (UAUTO_TOLL)=
     A', UAUTO

	  WRITE (31, '(A,F8.3)')  '   DERIVED TRANSIT UTILITY (UTRAN)=',
     A UTRAN

	ENDIF
C
C   6.  NEXT STEP IS TO RECALCULATE AUTO SIDE UTILITIES WITH HOV LANE
C       IN PLACE
C
      U2 = -0.138*ZLHT1(DEST) - 0.00275*ACOST1/2.0
      U2_TOLL = -0.138*ZLHT1$(DEST) - 0.00275*ACOST1_TOLL/2.0

      IF (HOV2) THEN
	  U2 = -0.138*ZLHT2(DEST) - 0.00275*ACOST2/2.0
	  U2_TOLL = -0.138*ZLHT2$(DEST) - 0.00275*ACOST2_TOLL/2.0
	ENDIF

      U3 = -0.138*ZLHT2(DEST) - 0.00275*ACOST2/3 - HOV_BIAS1
      U4PLUS = -0.138*ZLHT2(DEST) - 0.00275*ACOST2/5.56 - HOV_BIAS1

      U3_TOLL = -0.138*ZLHT2$(DEST) - 0.00275*ACOST2_TOLL/3 - HOV_BIAS1
      U4PLUS_TOLL = -0.138*ZLHT2$(DEST) - 0.00275*ACOST2_TOLL/5.56 - 
     A  HOV_BIAS1
C
C   7.  UDA = DRIVE ALONE UTILITY (WITH HOV LANE)
C       USR = SHARED RIDE UTILITY (WITH HOV LANE)
C
      UDA = -0.078*ZLHT1(DEST) - 0.001155*ACOST1
      USR = LOG(EXP(U2)+EXP(U3)+EXP(U4PLUS))

      UDA_TOLL = -0.078*ZLHT1$(DEST) - 0.001155*ACOST1_TOLL
      USR_TOLL = LOG(EXP(U2_TOLL)+EXP(U3_TOLL)+EXP(U4PLUS_TOLL))
C
      USR = 0.536*USR + 3.204*C0 - 1.941*C1 - 2.373*C2PLUS - HOV_BIAS2
      USR_TOLL = 0.536*USR_TOLL + 3.204*C0 - 1.941*C1 - 
     A  2.373*C2PLUS - HOV_BIAS2
C
C   8.  UAUTO = AUTO UTILITY (WITH HOV LANE)
C
      UAUTO = LOG(EXP(UDA)+EXP(USR))
      UAUTO = 0.571*UAUTO - 0.141*WALK

      UAUTO_TOLL = LOG(EXP(UDA_TOLL)+EXP(USR_TOLL))
      UAUTO_TOLL = 0.571*UAUTO_TOLL - 0.141*WALK
C
C   9.  TTP IS NOW THE REVISED PROBABILITY THIS TRIP IS BY TRANSIT IN
C       COMSIS-MNCPPC MODEL, SMALLER OF TOLL AND FREE PROBABILITIES
C
C*******************  RWE CHANGE FOR I290 OCTOBER 2009  ****************
      IF ((.NOT. NOTTRO) .AND. (.NOT. NOTTRD) .AND. (TTP.GT.0.0)) THEN
C*******************  RWE CHANGE FOR I290 OCTOBER 2009  ****************
        TTP=EXP(UTRAN)/(EXP(MAX(UAUTO,UAUTO_TOLL))+EXP(UTRAN))
	ELSE
        TTP=0
      ENDIF
C
C     WRITE COMSIS MODEL PARAMETERS IF TRACE IS TURNED ON
C
	IF (TRACE) THEN
	  WRITE (31, '(/A)') ' COMSIS MODEL PARAMETERS WITH HOV LANE'
	
	  WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
	  WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST

	  WRITE (31, '(A,F8.4)') '   TRANSIT PROBABILITY (TTP)=', TTP

	  WRITE (31, '(A,F6.2)')  '   FREE PATH SOV AUTO COST WITH HOV LAN
     AE (ACOST1)=', ACOST1
	  WRITE (31, '(A,F6.2)')  '   TOLL PATH SOV AUTO COST WITH HOV LAN
     AE (ACOST1_TOLL)=', ACOST1_TOLL
	  WRITE (31, '(A,F6.2)')  '   FREE PATH HOV AUTO COST WITH HOV LAN
     AE (ACOST2)=', ACOST2
	  WRITE (31, '(A,F6.2)')  '   TOLL PATH HOV AUTO COST WITH HOV LAN
     AE (ACOST2_TOLL)=', ACOST2_TOLL

	  WRITE (31, '(A,3F8.3)')  '   FREE PATH SHARED RIDE UTILITIES (U2
     A, U3, U4PLUS)=', U2, U3, U4PLUS
	  WRITE (31, '(A,3F8.3)')  '   TOLL PATH SHARED RIDE UTILITIES (U2
     A_TOLL, U3_TOLL, U4PLUS_TOLL)=', U2_TOLL, U3_TOLL, U4PLUS_TOLL
	  WRITE (31, '(A,F8.3)')  '   FREE PATH DRIVE ALONE UTILITY (UDA)=
     A', UDA
	  WRITE (31, '(A,F8.3)')  '   TOLL PATH DRIVE ALONE UTILITY (UDA_T
     AOLL)=', UDA_TOLL
	  WRITE (31, '(A,F8.3)') '   FREE PATH COMPOSITE SHARED RIDE UTILI
     ATY (USR)=', USR
	  WRITE (31, '(A,F8.3)') '   TOLL PATH COMPOSITE SHARED RIDE UTILI
     ATY (USR_TOLL)=', USR_TOLL

	  WRITE (31, '(A,F8.3)') '   WALK TIME (WALK)= ',WALK
	  WRITE (31, '(A,F8.3)')  '   FREE PATH AUTO UTILITY (UAUTO)=', 
     A    UAUTO
	  WRITE (31, '(A,F8.3)')  '   TOLL PATH AUTO UTILITY (UAUTO_TOLL)=
     A', UAUTO_TOLL
	  WRITE (31, '(A,F8.3)')  '   DERIVED TRANSIT UTILITY (UTRAN)=',
     A UTRAN

	ENDIF
C
C     SEE WHETHER THIS TRIP IS AN AUTO OR TRANSIT TRIP
C
C************ RWE CHANGE FOR I290 ROUND 3 MODELS MARCH 2013 ************
C
C       SIMULATE 1000 TRIPS TO OBTAIN MODE SHARES
C
C***********************************************************************
C
      TTRIP(DEST) = TTRIP(DEST) + TTP
      ATRIP(DEST) = ATRIP(DEST) + (1.0-TTP)
C
C     TTP1 IS THE PROBABILITY THIS TRIP IS BY SOV
C     CALCULATE TTP1 USING BEST PATHS
C
      TTP1 = EXP(MAX(UDA,UDA_TOLL))/(EXP(MAX(UDA,UDA_TOLL))+
     A  EXP(MAX(USR,USR_TOLL)))
      TTP1 = TTP1*(1.0-TTP)
C
C     TTP1_TOLL IS THE PROBABILITY THIS TRIP IS BY SOV
C     VIA A TOLL PATH
C
      TTP1_TOLL = EXP(UDA_TOLL)/(EXP(UDA)+EXP(UDA_TOLL))
      TTP1_FREE = (1.0-TTP1_TOLL)*TTP1
      TTP1_TOLL = TTP1_TOLL*TTP1 
        
      ATRIP1(DEST) = ATRIP1(DEST) + TTP1_FREE
      ATRIP1_TOLL(DEST) = ATRIP1_TOLL(DEST) + TTP1_TOLL
C
C   TTP2 IS THE PROBABILITY THIS TRIP IS BY TWO PERSON HOV, CALCULATED
C   USING BEST PATH
C
      TTP2 = EXP(MAX(U2,U2_TOLL))/
     A  (EXP(MAX(U2,U2_TOLL))+EXP(MAX(U3,U3_TOLL))+
     B  EXP(MAX(U4PLUS,U4PLUS_TOLL)))
      TTP2 = TTP2*(1.0-TTP-TTP1)
C
C     TTP2_TOLL IS THE PROBABILITY THIS TRIP IS BY HOV 2
C     VIA A TOLL PATH
C
      TTP2_TOLL = EXP(U2_TOLL)/(EXP(U2)+EXP(U2_TOLL))
      TTP2_FREE = (1.0-TTP2_TOLL)*TTP2
      TTP2_TOLL = TTP2_TOLL*TTP2
        
      ATRIP2(DEST) = ATRIP2(DEST) + TTP2_FREE
      ATRIP2_TOLL(DEST) = ATRIP2_TOLL(DEST) + TTP2_TOLL
C
C   TTP3 IS THE PROBABILITY THIS TRIP IS BY THREE OR MORE PERSON 
C   HOV, CALCULATED USING BEST PATH
C
      TTP3 = (EXP(MAX(U3,U3_TOLL))+EXP(MAX(U4PLUS,U4PLUS_TOLL)))/
     A  (EXP(MAX(U2,U2_TOLL))+EXP(MAX(U3,U3_TOLL))+
     B  EXP(MAX(U4PLUS,U4PLUS_TOLL)))
      TTP3 = TTP3*(1.0-TTP-TTP1)
C
C     TTP3_TOLL IS THE PROBABILITY THIS TRIP IS BY HOV 3+
C     VIA A TOLL PATH
C
      TTP3_TOLL = (EXP(U3_TOLL)+EXP(U4PLUS_TOLL))/
     A  (EXP(U3)+EXP(U3_TOLL)+EXP(U4PLUS)+EXP(U4PLUS_TOLL))
      TTP3_FREE = (1.0-TTP3_TOLL)*TTP3
      TTP3_TOLL = TTP3_TOLL*TTP3 
        
      ATRIP3(DEST) = ATRIP3(DEST) + TTP3_FREE
      ATRIP3_TOLL(DEST) = ATRIP3_TOLL(DEST) + TTP3_TOLL        
C
C     WRITE COMSIS MODEL AUTO SUBMODE CHOICE PARAMETERS IF TRACE IS 
C     TURNED ON
C
	IF (TRACE) THEN
	  WRITE (31, '(/A)') ' COMSIS SUBMODE CHOICES WITH HOV LANE'
	
	  WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
	  WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST

	  WRITE (31, '(A,F9.6)') '   TRANSIT PROBABILITY (TTP)=', TTP
        
	  WRITE (31, '(A,F9.6)') '   SOV PROBABILITY (TTP1)=', TTP1
        WRITE (31, '(A,F9.6)') '   SOV FREE PATH PROBABILITY (TTP1_FREE)
     A=', TTP1_FREE
	  WRITE (31, '(A,F9.6)') '   SOV TOLL PATH PROBABILITY (TTP1_TOLL)
     A=', TTP1_TOLL

	  WRITE (31, '(A,F9.6)') '   TWO PERSON PROBABILITY (TTP2)=', TTP2
        WRITE (31, '(A,F9.6)') '   TWO PERSON FREE PATH PROBABILITY (TTP
     A2_FREE)=', TTP2_FREE
	  WRITE (31, '(A,F9.6)') '   TWO PERSON TOLL PATH PROBABILITY (TTP
     A2_TOLL)=', TTP2_TOLL
        
 	  WRITE (31, '(A,F9.6)') '   THREE OR MORE PERSON PROBABILITY (TTP
     A3)=', TTP3
        WRITE (31, '(A,F9.6)') '   THREE OR MORE PERSON FREE PATH PROBAB
     AILITY (TTP3_FREE)=', TTP3_FREE
	  WRITE (31, '(A,F9.6)') '   THREE OR MORE PERSON TOLL PATH PROBAB
     AILITY (TTP3_TOLL)=', TTP3_TOLL
       
	  WRITE (31, '(A,F8.1)') '   CURRENT TRANSIT TRIPS (TTRIP)=',
     A    TTRIP(DEST)
        WRITE (31, '(A,F8.1)') '   CURRENT FREE PATH SOV TRIPS (ATRIP1)=
     A', ATRIP1(DEST)
        WRITE (31, '(A,F8.1)') '   CURRENT TOLL PATH SOV TRIPS (ATRIP1_T
     AOLL)=', ATRIP1_TOLL(DEST)
        WRITE (31, '(A,F8.1)') '   CURRENT FREE PATH TWO PERSON HOV TRIP
     AS (ATRIP2)=', ATRIP2(DEST)
        WRITE (31, '(A,F8.1)') '   CURRENT TOLL PATH TWO PERSON HOV TRIP
     AS (ATRIP2_TOLL)=', ATRIP2_TOLL(DEST)
        WRITE (31, '(A,F8.1)') '   CURRENT FREE PATH THREE OR MORE PERSO
     AN HOV TRIPS (ATRIP3)=', ATRIP3(DEST)
        WRITE (31, '(A,F8.1)') '   CURRENT TOLL PATH THREE OR MORE PERSO
     AN HOV TRIPS (ATRIP3_TOLL)=', ATRIP3_TOLL(DEST)

	ENDIF
C
C     END OF TRIPS IN DESTINATION ZONE LOOP
C
10101 CONTINUE
C
C     BYPASSED TRIP SIMULATION FOR DESTINATION ZONE
C
10102 CONTINUE
C
C     WRITE TRIPS INTO PRIMARY EMMEBANK (32)
C       MF23 = AUTO TRIPS
C       MF24 = TRANSIT TRIPS
C
      P = ORIG
	Q = DEST

      REC1 = ((P-1)*mcent) + Q
C************ RWE CHANGE FOR I290 ROUND 3 MODELS MARCH 2013 ************
C
C       COMPUTE TRIPS BY MODE USING SIMULATED MODE SHARES
C
C   Heither, CMAP 11-05-13: simulate 100 trips
C ##   Heither, CMAP 09-06-2016: simulate ITER trips        
C*********************************************************************** 
      SC = SC + PTRIP(Q)
      PTRIP_TOT = PTRIP_TOT + PTRIP(Q)
          
      ATRIP(Q) = ATRIP(Q)*PTRIP(Q)/ITER
      WRITE(951, REC=REC1) ATRIP(Q)
      SCA = SCA + ATRIP(Q)
      ATRIP_TOT = ATRIP_TOT + ATRIP(Q)
C
      TTRIP(Q) = TTRIP(Q)*PTRIP(Q)/ITER
      WRITE(952, REC=REC1) TTRIP(Q)
      SCT = SCT + TTRIP(Q)
      TTRIP_TOT = TTRIP_TOT + TTRIP(Q)      
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     WRITE TRIPS INTO SECONDARY EMMEBANK (42)
C       MF16 = SOV FREE PATH PERSON TRIPS
C       MF17 = SOV TOLL PATH PERSON TRIPS
C       MF18 = TWO PERSON HOV FREE PATH PERSON TRIPS
C       MF19 = TWO PERSON HOV TOLL PATH PERSON TRIPS
C       MF20 = THREE OR MORE PERSON FREE PATH PERSON TRIPS
C       MF21 = THREE OR MORE PERSON TOLL PATH PERSON TRIPS
C
      ATRIP1(Q) = ATRIP1(Q)*PTRIP(Q)/ITER
      WRITE(953, REC=REC1) ATRIP1(Q)
      SC1 = SC1 + ATRIP1(Q)
      SOVFREETRIP_TOT = SOVFREETRIP_TOT + ATRIP1(Q)           
           
      ATRIP1_TOLL(Q) = ATRIP1_TOLL(Q)*PTRIP(Q)/ITER
      WRITE(954, REC=REC1) ATRIP1_TOLL(Q)
      SC1_TOLL = SC1_TOLL + ATRIP1_TOLL(Q)
      SOVTOLLTRIP_TOT = SOVTOLLTRIP_TOT + ATRIP1_TOLL(Q)           
           
      ATRIP2(Q) = ATRIP2(Q)*PTRIP(Q)/ITER
      WRITE(955, REC=REC1) ATRIP2(Q)
      SC2 = SC2 + ATRIP2(Q)
      HOV2FREETRIP_TOT = HOV2FREETRIP_TOT + ATRIP2(Q)           
           
      ATRIP2_TOLL(Q) = ATRIP2_TOLL(Q)*PTRIP(Q)/ITER
      WRITE(956, REC=REC1) ATRIP2_TOLL(Q)
      SC2_TOLL = SC2_TOLL + ATRIP2_TOLL(Q)
      HOV2TOLLTRIP_TOT = HOV2TOLLTRIP_TOT + ATRIP2_TOLL(Q)           
      
      ATRIP3(Q) = ATRIP3(Q)*PTRIP(Q)/ITER
      WRITE(957, REC=REC1) ATRIP3(Q)
      SC3 = SC3 + ATRIP3(Q)
      HOV3FREETRIP_TOT = HOV3FREETRIP_TOT + ATRIP3(Q)           
           
      ATRIP3_TOLL(Q) = ATRIP3_TOLL(Q)*PTRIP(Q)/ITER
      WRITE(958, REC=REC1) ATRIP3_TOLL(Q)
      SC3_TOLL = SC3_TOLL + ATRIP3_TOLL(Q)
      HOV3TOLLTRIP_TOT = HOV3TOLLTRIP_TOT + ATRIP3_TOLL(Q)           
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     REPEAT SIMULATION FOR NEXT DESTINATION
C
      IF (DEST .LT. ZONES) GO TO 50502
C
C  THIS ZONE IS DONE
C
	WRITE(31,80803) ORIG,SC
	WRITE(31,80804) ORIG,SCT
      WRITE(31,80805) ORIG,SCA

      WRITE(31,80806) ORIG,SC1
	WRITE(31,88806) ORIG,SC1_TOLL
      WRITE(31,80807) ORIG,SC2
      WRITE(31,88807) ORIG,SC2_TOLL
      WRITE(31,80808) ORIG,SC3
      WRITE(31,88808) ORIG,SC3_TOLL

80803 FORMAT(' ZONE ',I5,' HAS SIMULATED ',I6,' PERSON TRIPS')
80804 FORMAT(' ZONE ',I5,' HAS ',I6,' TRANSIT PERSON TRIPS')
80805 FORMAT(' ZONE ',I5,' HAS ',I6,' AUTO PERSON TRIPS')

80806 FORMAT(' ZONE ',I5,' HAS ',I6,' SOV PERSON TRIPS ON FREE PATHS')
88806 FORMAT(' ZONE ',I5,' HAS ',I6,' SOV PERSON TRIPS ON TOLL PATHS')

80807 FORMAT(' ZONE ',I5,' HAS ',I6,' TWO PERSON HOV TRIPS ON FREE PATHS
     A')
88807 FORMAT(' ZONE ',I5,' HAS ',I6,' TWO PERSON HOV TRIPS ON TOLL PATHS
     A')
80808 FORMAT(' ZONE ',I5,' HAS ',I6,' THREE OR MORE PERSON HOV TRIPS ON 
     AFREE PATHS')
88808 FORMAT(' ZONE ',I5,' HAS ',I6,' THREE OR MORE PERSON HOV TRIPS ON 
     ATOLL PATHS')
    
	CLOSE (951)
      CLOSE (952)
	CLOSE (953)
	CLOSE (954)
	CLOSE (955)
	CLOSE (956)
	CLOSE (957)
	CLOSE (958)
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C	CLOSE (42)
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      RETURN
      END