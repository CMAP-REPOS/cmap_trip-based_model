      SUBROUTINE PRKCBD(ORIG,DEST,INCOME,CAPK,WALK3,HOURS,
     A  INTOCC)
C## Revised for vectorized calculations - Heither, 11-02-2017
      IMPLICIT INTEGER(A-Z)

	INCLUDE 'Common_cbdparking.fi'
	INCLUDE 'Common_params.fi'
	INCLUDE 'Common_data.fi'

      INTEGER,DIMENSION (ITER) :: L, J3, J6, J7
      INTEGER,INTENT(OUT),DIMENSION (ITER) :: INTOCC 
      REAL,DIMENSION (ITER) :: VT, SI, WK, BLK, HC, FREEPRK
      REAL,DIMENSION (ITER) ::  HCPT1, HCPT2, HCPT3, HCPT4
      REAL,INTENT(IN),DIMENSION (ITER) :: INCOME 
      REAL,INTENT(OUT),DIMENSION (ITER) :: WALK3, CAPK  
      REAL,DIMENSION (ITER) :: RAN3, RAN4, RAN5
C DEBUGGING:           WRITE (31, '(/A)') ' Made it past VARIABLES IN CBD PARKING COST'
C
      J6=0
      J7=1
      INTOCC=0
	CALL RANDOM_NUMBER(RAN3)  ! CHECK IF PARKING COST=0
      RAN3 = RAN3*100
	CALL RANDOM_NUMBER(RAN4)  ! FOR THOSE PAYING FOR PARKING
      RAN4 = RAN4*10000
	CALL RANDOM_NUMBER(RAN5)  ! FOR VEHICLE OCCUPANCY
      RAN5 = RAN5*100.0
C --    FIRST: IDENTIFY ARRAY INDEX HOLDING PARKING ZONE
	DO J1=1,NUMCBD_PARK
		IF (PKZN(J1) .EQ. DEST) THEN
			PZONE=J1
			EXIT
		ENDIF
	ENDDO	
C -- FIND OUT WHICH INCOME LEVEL WE ARE AT (THE INCOME VARIABLE
C -- IS THE ANNUAL INCOME GENERATED BY THE PROGRAM.  prkadj(j,1)
C -- IS THE HIGHEST INCOME LEVEL FOR THE STRATA BEING INVESTIGATED.
C -- L WILL BE THE STRATA FOR THE INCOME LEVEL SELECTED BY THE PROGRAM.
	DO BB = 1,ITER
		do j2 = 1,5
			if (prkadj(j2,1) .ge. income(BB)) THEN
				L(BB) = J2	
C -- prkadj(J2,2) is the percentage of free parking				
				FREEPRK(BB) = prkadj(J2,2)
				EXIT
              ELSE
C -- IN CASE INCOME EXCEEDS UPPER BOUND IN CBD PARK FILE                  
                  L(BB) = 5
                  FREEPRK(BB) = prkadj(5,2)
              ENDIF
		enddo				
      ENDDO	
C DEBUGGING:           WRITE (31, '(/A)') ' Made it past SOME CALCS IN CBD PARKING COST'
C -- PAY FOR PARKING	
	DO CC = 1,ITER
		DO J=1,5
			IF(ran4(CC) .LE. CBDPRK(PZONE,J,1)) THEN
				J3(CC) = J
				EXIT
			ENDIF
          enddo
C -- SETUP PAY FOR PARKING CALCULATION	          
          HCPT1(CC) = CBDPRK(PZONE,J3(CC),2)
          HCPT2(CC) = CBDPRK(PZONE,J3(CC)-1,2)
          HCPT3(CC) = CBDPRK(PZONE,J3(CC),1)
          HCPT4(CC) = CBDPRK(PZONE,J3(CC)-1,1)
      ENDDO	
      
C -- SET VALUE OF J7 = ZERO IF J3.NE. 1      
      WHERE(J3 > 1) J7 = 0
C -- SET VALUE OF J6=1 WHERE J7=ZERO       
      WHERE(J7 == 0) J6 = 1   

C --  VALUE OF TIME (VT) DERIVED AS ONE-HALF THE PERSON'S HOURLY WAGE
C --  PERSON ASSUMED TO WORK 2000 HOURS PER YEAR
C --  VT IS IN CENTS PER MINUTE      
	IF(TPTYPE.EQ.1) THEN
          VT=INCOME/2400.
      ELSE
          VT=INCOME/2400.*0.666
      ENDIF      
           
C -- IF THE RANDOM NUMBER IS .LE. TO THE PERCENT FREE PARKING FOR 
C -- prkadj(L,2) THEN PARKING IS FREE.  SO
C -- ASSUME A SHORT WALK TIME OF 1 BLOCK OR 3 MINUTES WITH FREE PARKING
C DEBUGGING:           WRITE (31, '(/A)') ' Before where processing'
	WHERE(RAN3 <= FREEPRK)
		CAPK = 0.0
		WALK3 = 3.0		
C##  Heither, corrected coding 12-11-2017
          HC = 0.0
          VT = 0.0
          SI = 0.0
          WK = 0.0
          BLK = 0.0         
      ELSEWHERE	
C -- PAY FOR PARKING	  
          HC =(J7)*(CBDPRK(PZONE,1,2)) +
     A        (J6)*(HCPT1 + 
     B	    (HCPT2-HCPT1)*(HCPT3-RAN2)/
     C        ((HCPT3-HCPT4)*1.0))	

		SI=CBDPRK(PZONE,J3,3)
          WK=CBDPRK(PZONE,J3,4)  !! WK IS SECONDS PER BLOCK
		WK=MAX(WK,180.)
		BLK=SI/(VT*WK/60.)  !! BLK IS BLOCKS WALKED
		BLK=AMAX1(BLK,0.25)
		BLK=AMIN1(BLK,6.0)
		WALK3=(BLK*WK)/60.
		CAPK=MAX(HC*HOURS-BLK*SI,0.0) 
      END WHERE
C --   END OF ELSEWHERE	
C  --- PRINT FOR DEBUGGING:      WRITE (31, '(/A)') ' After where processing'
	  
C -- NOW DETERMINE VEHICLE OCCUPANCY
      WHERE(L.EQ.1 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(1,4)) INTOCC=1
      WHERE(L.EQ.1 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(1,5)) INTOCC=2
      WHERE(L.EQ.1 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(1,6)) INTOCC=3
      WHERE(L.EQ.1 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(1,7)) INTOCC=4
      WHERE(L.EQ.2 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(2,4)) INTOCC=1
      WHERE(L.EQ.2 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(2,5)) INTOCC=2
      WHERE(L.EQ.2 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(2,6)) INTOCC=3
      WHERE(L.EQ.2 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(2,7)) INTOCC=4
      WHERE(L.EQ.3 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(3,4)) INTOCC=1
      WHERE(L.EQ.3 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(3,5)) INTOCC=2
      WHERE(L.EQ.3 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(3,6)) INTOCC=3
      WHERE(L.EQ.3 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(3,7)) INTOCC=4
      WHERE(L.EQ.4 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(4,4)) INTOCC=1
      WHERE(L.EQ.4 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(4,5)) INTOCC=2
      WHERE(L.EQ.4 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(4,6)) INTOCC=3
      WHERE(L.EQ.4 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(4,7)) INTOCC=4
      WHERE(L.EQ.5 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(5,4)) INTOCC=1
      WHERE(L.EQ.5 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(5,5)) INTOCC=2
      WHERE(L.EQ.5 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(5,6)) INTOCC=3
      WHERE(L.EQ.5 .AND. INTOCC.EQ.0 .AND. RAN5.LT.PRKADJ(5,7)) INTOCC=4
C DEBUGGING:           WRITE (31, '(/A)') ' After intocc processing'

C DEBUGGING:           DO CC = 1,ITER
C DEBUGGING:                WRITE (31, '(A,5I3,4F10.3,F10.1)') 'L,INTOCC,J3,J6,J7,RAN5,
C DEBUGGING:          ACAPK,FREEPRK,HC,INCOME',L(CC),INTOCC(CC),J3(CC),J6(CC),J7(CC),
C DEBUGGING:          BRAN5(CC),CAPK(CC),FREEPRK(CC),HC(CC),INCOME(CC)
C DEBUGGING:           ENDDO    
C --
	IF (TRACE) THEN
		WRITE (31, '(/A)') ' CBD PARKING COST INPUTS FROM SUBROUTINE PRK
     A  CBD'
		WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
		WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST
		WRITE (31, '(A,I6)') '   CBD PARKING ZONE (PZONE)=', PZONE
		WRITE (31, '(A,3F9.2)') '   RANDOM NUMBERS (RAN3,RAN4,RAN5)=',
     A    RAN3(1),RAN4(1),RAN5(1)
        WRITE (31, '(A,F8.3)') '   FREE PARKING PERCENTAGE (FREEPRK)=',
     A FREEPRK(1)  
	    WRITE (31, '(A,2F8.2)') '   FreeParking=', prkadj(1,1), 
     A prkadj(1,2)
	    WRITE (31, '(A,2F8.2)') '   FreeParking=', prkadj(2,1), 
     A prkadj(2,2)
	    WRITE (31, '(A,2F8.2)') '   FreeParking=', prkadj(3,1), 
     A prkadj(3,2)
	    WRITE (31, '(A,2F8.2)') '   FreeParking=', prkadj(4,1), 
     A prkadj(4,2)
	    WRITE (31, '(A,2F8.2)') '   FreeParking=', prkadj(5,1), 
     A prkadj(5,2)        
        WRITE (31, '(A,F8.3)') '   FINAL PARKING COST (HC)=', HC(1)
		WRITE (31, '(A,I4)') '   TRIP TYPE (TPTYPE)=',TPTYPE
		WRITE (31, '(A,I6)') '   PARKING HOURS (HOURS)=',HOURS
        WRITE (31, '(A,F8.3)') '   VALUE OF TIME (VT)=', VT(1)
        WRITE (31, '(A,F8.3)') '   PARKING SAVINGS (SI)=', SI(1)
        WRITE (31, '(A,F8.3)') '   WALKING SPEED (WK)=', WK(1)
        WRITE (31, '(A,F8.3)') '   BLOCKS WALKED (BLK)=', BLK(1)
        WRITE (31, '(A,F8.3)') '   WALK TIME FROM PARK (WALK3)=', 
     A   WALK3(1)
        WRITE (31, '(A,F8.0)') '   CBD MODEL PARK COST (CAPK)=',CAPK(1)
        WRITE (31, '(A,I4)') '   AUTO OCCUPANCY (INTOCC)=',INTOCC(1)
        WRITE (31, '(A,6I3)') '   POINTERS (J1,J3,L)=',
     A	J1,J3(1),L(1)
      ENDIF	
	IF (TRACE) THEN
		WRITE (31, '(/A)') ' CBD PARKING COST FROM PRK CBD 2ND ELEMENT'
		WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
		WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST
		WRITE (31, '(A,I6)') '   CBD PARKING ZONE (PZONE)=', PZONE
		WRITE (31, '(A,3F9.2)') '   RANDOM NUMBERS (RAN3,RAN4,RAN5)=',
     A    RAN3(2),RAN4(2),RAN5(2)
          WRITE (31, '(A,F8.3)') '   FREE PARKING PERCENTAGE (FREEPRK)='
     A ,FREEPRK(2)            
        WRITE (31, '(A,F8.3)') '   FINAL PARKING COST (HC)=', HC(2)
		WRITE (31, '(A,I4)') '   TRIP TYPE (TPTYPE)=',TPTYPE
		WRITE (31, '(A,I6)') '   PARKING HOURS (HOURS)=',HOURS
        WRITE (31, '(A,F8.3)') '   VALUE OF TIME (VT)=', VT(2)
        WRITE (31, '(A,F8.3)') '   PARKING SAVINGS (SI)=', SI(2)
        WRITE (31, '(A,F8.3)') '   WALKING SPEED (WK)=', WK(2)
        WRITE (31, '(A,F8.3)') '   BLOCKS WALKED (BLK)=', BLK(2)
        WRITE (31, '(A,F8.3)') '   WALK TIME FROM PARK (WALK3)=', 
     A   WALK3(1)
        WRITE (31, '(A,F8.0)') '   CBD MODEL PARK COST (CAPK)=',CAPK(2)
        WRITE (31, '(A,I4)') '   AUTO OCCUPANCY (INTOCC)=',INTOCC(2)
        WRITE (31, '(A,6I3)') '   POINTERS (J1,J3,L)=',
     A	J1,J3(2),L(2)
	ENDIF	      
C
      RETURN
      END
	  