      SUBROUTINE TRIPS(ORIG)
      IMPLICIT INTEGER (A-Z)
C*******************
C  THIS SUBROUTINE PERFORMS THE OPERATION OF SIMULATING THE TRIPS
C       FROM THIS ORIGIN
C  THIS SUBROUTINE IS CALLED ONCE PER ZONE SELECTED FOR ANALYSIS
C  THIS IS THE ORIGINAL VERSION USED WHEN HOV AND COST ARE TURNED OFF
C*******************
C
C     THIS IS THE INTERCHANGE VERSION OF THE MODEL AND THERE ARE
C     SEVERAL CODING CHANGES IN THIS SUBROUTINE FROM THE TRIP
C     END VERSION
C     THERE IS AN ADDITIONAL LOOP OUTSIDE THE DO LOOP FOR ITERATIONS
C     FOR ALL DESTINATIONS WITH INTERCHANGES FROM THE ORIGIN ZONE
C     AS THE SIMULATION PROGRESSES, TWO FILES ARE WRITTEN, ONE FOR
C     SIMULATED TRANSIT TRIPS AND ONE FOR AUTO TRIPS
C     MODE CHOICE IS DONE USING BINARY MONTE CARLO SIMULATION
C
C ##  Heither 09-06-2016: Add ITER to program   
C ##  Heither 12-06-2017: Vectorized version of the code.        
C*******************
      INCLUDE 'Common_params.fi'
	INCLUDE 'Common_data.fI'
      INCLUDE 'Common_emme4bank.fi'
	INCLUDE 'Common_approach_model.fi'
	INCLUDE 'Common_cbdparking.fi'

      REAL, DIMENSION(ITER) :: ARNUMT, ARNUMA, RAN_NUM, TTP, INCOME
      REAL, DIMENSION(ITER) :: AUTOCC, WALK, CAPK, ACOSTVC
      INTEGER,DIMENSION (ITER) :: INTOCC, EC, EIVT, EOVT
	REAL*4 D, DD, ACOST, HEADER, TTPAVG, SC, SCA, SCT
	LOGICAL*4 CBDIND, NOTTRO, NOTTRD
      INTEGER, ALLOCATABLE :: SEED(:)
      INTEGER SIZE
C
C     REOPEN EMMEBANK
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C      OPEN (UNIT=32, FILE='EMMEBANK',
C     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      OPEN (UNIT=951, FILE='emmemat/'//TEMX_TRANSIT,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
      OPEN (UNIT=952, FILE='emmemat/'//TEMX_AUTO,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
C
C     ALL TRIPS ARE SIMULATED FOR EACH DESTINATION
C ##    ITER TRIPS ARE SIMULATED FOR EACH DESTINATION      
C## Heither, 12-06-2017: use ZONES r/t 3000
      DO II=1,ZONES
        ATRIP(II) = 0.0   !! Auto trips
        TTRIP(II) = 0.0   !! Transit trips
      ENDDO
C
C  REVISED COUNTERS
C
      SC = 0.0    !! Person trip counter
      SCA = 0.0   !! Auto Person trip counter
      SCT = 0.0   !! Transit Person trip counter
C
C  THE NEXT FEW STATEMENTS DETERMINE WHETHER OR NOT THIS ZONE
C               IS SERVED BY TRANSIT A TRANSIT MODE
C                      IF NOT, DON'T BOTHER SIMULATING
C
      NOTTRO = .TRUE.
C
C    NEED ONE DESTINATION ZONE ACCESSIBLE BY TRANSIT
C## Heither, 12-06-2017: use ZONES r/t 3000
      DO I=1,ZONES
	  IF (DZOI(I)) THEN
          IF ((DISTR(I,1,3).NE.999).OR.(DISTR(I,2,3).NE.999).OR.
     A      (DISTR(I,3,3).NE.999).OR.(DISTR(I,4,3).NE.999)) THEN
            IF(PMD(I).GE.3) THEN
              NOTTRO = .FALSE.
            ENDIF
          ENDIF
        ENDIF
      ENDDO
C
C     CHECK ORIGIN FOR DISTR PARAMETERS
C
      IF ((DISTR(ORIG,1,3).EQ.999).AND.(DISTR(ORIG,2,3).EQ.999).AND.
     A  (DISTR(ORIG,3,3).EQ.999).AND.(DISTR(ORIG,4,3).EQ.999).AND.
     B  (DISTR(ORIG,5,3).EQ.999)) THEN
        NOTTRO = .TRUE.
      ENDIF 

      IF (NOTTRO) THEN
	  WRITE(31,505) ORIG
      ENDIF

  505 FORMAT(' ZONE ',I5,' NOT SERVED BY A TRANSIT MODE(4-8)')
C****************************************
C  THIS BEGINS THE SIMULATION OF TRIPS  *
C****************************************
C
C     START OF LOOP BY DESTINATION ZONE
      DO DEST=1,ZONES
C
C##     PROCESS DESTINATION ZONE ONLY IF:
C##       1.  THERE ARE TRIPS BETWEEN ORIGIN AND DESTINATION ZONES, AND
C##       2.  THE DESTINATION ZONE IS ACCESSIBLE
C##       OTHERWISE: TTRIP=0, ATRIP=0          
          IF (DZOI(DEST) .AND. PTRIP(DEST).GT.0) THEN
C##### Heither, 01-12-2019: GET ZONAL INTERCHANGE SEED VALUE 
              SEED1 = ((ORIG-1)*mcent) + DEST
              READ(40, REC=SEED1) ZNINTSD
              CALL RANDOM_SEED(SIZE=SIZE)
              ALLOCATE(SEED(SIZE))
              SEED = ZNINTSD
              CALL RANDOM_SEED(PUT=SEED)   !!! SET SEED VALUE
              IF (ORIG.EQ.1 .AND. DEST.LE.10) THEN
                  WRITE (31, '(A,3I8)')  '  ORIG,DEST,RANDOM SEED',
     AORIG,DEST,ZNINTSD
              ENDIF
              DEALLOCATE(SEED)                     
              
C===========================================================================
C## PART 1: AUTO	  
C===========================================================================	              
C  SET THE MINIMUM LINE HAUL DRIVING TIME TO ONE MINUTE
              IF(ZLHT(DEST).LT.1) ZLHT(DEST)=1   
C
C  RUN A CHECK FOR A CBD DESTINATION
              CBDIND=.FALSE.
              IF(ZCBD(DEST)) CBDIND=.TRUE.              
C*******************
C  THE NEXT SECTION COMPUTES THE AUTO OPERATING COSTS IN CENTS
C*******************
              D=ZLHD(DEST)
              DD=ZLHT(DEST)
	        IF (D .GT. 0 .AND. DD .GT. 0) THEN 
                  CALL AUTCST(ORIG,DEST,D,DD,ACOST)
	        ELSE
	            ACOST = 0.0
              ENDIF              
C##    VECTORIZE AUTO COSTS, Heither 12-06-2017
              ACOSTVC=ACOST  
C              
C*******************
C  THE NEXT SECTION OBTAINS THE INCOME OF THE TRIPMAKER
C      IF THIS A HOME BASED TRIP START WITH THE ZONAL MEDIAN INCOME
C         AT THE DESTINATION RATHER THAN AT THE ORIGIN
C*******************
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
              IF (TPTYPE .NE. 3) THEN
                  MEDINC=INC(ORIG)*100
                  CALL INCDIS(ORIG,DEST,MEDINC,INCOME)
              ELSE
C  IF WE HAVE A NON-HOME BASED TRIP USE THE AVERAGE REGIONAL
C    INCOME (2007 ACS HH INCOME FOR CHICAGO METRO AREA)                  
	            INCOME = 59300.
              ENDIF  
C
C PARKING NEXT
C  THE CALL TO PRKCST OBTAINS THE COST OF PARKING FOR A HIGHWAY TRIP
C    CAPK CONTAINS COST OF PARKING
C    WALK IS THE AVERAGE WALK TIME FROM THE AUTO TO THE DESTINATION
              INTOCC = 0
              CALL PRKCST(ORIG,DEST,INCOME,CAPK,WALK,INTOCC)
              ACOSTVC=.5*CAPK+ACOST+AFC1    !! TOTAL COST OF THE HIGHWAY TRIP
C
C     AUTO OCCUPANCY DETERMINED BY THE FOLLOWING OPTIONS/PRIORITIES:
C       1.  FROM PARKING MODEL WHEN DEST IS A CBD PARKING ZONE
C       2.  OCCUPANCIES INPUT VIA TABLE FROME EMMEBANK
C       3.  OBTAINED FROM M023 INPUT
              AUTOCC = ZOCC(DEST)
C
C     FOLLOWING CODE ALLOWS USER TO INPUT AUTO OCCUPANCIES
              IF (AOCC) AUTOCC = COCC(DEST)
C
C     OCCUPANCY RETURNED FROM PRKCBD ALWAYS IS USED
			WHERE(INTOCC .GT. 0) AUTOCC=INTOCC
C
C    COMPUTE FINAL AUTO COST
              ACOSTVC=ACOSTVC/AUTOCC
C
C     COSTS ARE DISCOUNTED FROM 1990 TO 1970 (CALIBRATION YEAR) IN CATS 
C     MODEL
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C     COSTS ARE ESTIMATED IN CURRENT DOLLARS FOR I290 RUNS AND MODEL 
C     COST COEFFICIENT HAS BEEN ADJUSTED ACCORDINGLY, SO DISCNT IS 
C     INPUT AS 1.00
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
              ACOSTVC = ACOSTVC * DISCNT
C
C    COMPUTE AUTO UTILITY
C
              IF(.NOT.CBDIND) THEN
	            ARNUMA= COEFF1(1)*ZLHT(DEST)+
     A          COEFF1(2)*ACOSTVC+
     B          COEFF1(3)*WALK
	        ENDIF
              IF(CBDIND) THEN
	            ARNUMA= COEFF2(1)*ZLHT(DEST)+
     A          COEFF2(2)*ACOSTVC+
     B          COEFF2(3)*WALK
	        ENDIF
C
C     WRITE UTILITIES IF TRACE IS TURNED ON
C            
			IF (TRACE) THEN
				WRITE (31, '(/A)') ' HIGHWAY INPUTS IN SUBROUTINE TRIPS'
				WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
				WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST
				WRITE (31, '(A,I8)') '   HOUSEHOLD MEDIAN INCOME=', MEDINC
				WRITE (31, '(A,F8.0)') '   HOUSEHOLD INCOME=', INCOME(1)
				WRITE (31, '(A,F8.3)') '   HIGHWAY TRAVEL TIME (ZLHT)=',
     A	ZLHT(DEST)
				WRITE (31, '(A,F8.3)') '   HIGHWAY DISTANCE (ZLHD)=',ZLHD(DEST)
				WRITE (31, '(A,F8.3)') '   AUTO OCCUPANCY (AUTOCC)= ',AUTOCC(1)
				WRITE (31, '(A,F8.3)') '   CBD PARKING COST (CAPK)= ',CAPK(1)
				WRITE (31, '(A,I8)')   '   AUTO FIXED COST (AFC1)= ',AFC1
				WRITE (31, '(A,F8.3)') '   FINAL AUTO COST (ACOST)= ',ACOSTVC(1)
				WRITE (31, '(A,F8.3)') '   WALK TIME (WALK)= ',WALK(1)
				WRITE (31, '(A,F8.3)') '   HIGHWAY UTILITY (ARNUMA)=',ARNUMA(1)
              ENDIF              
              
C===========================================================================
C## PART 2: TRANSIT	  
C===========================================================================              
C
C  VERIFY THAT TRANSIT WILL GO TO THE DESTINATION ZONE
			NOTTRD = .TRUE.
			IF(PMD(DEST).GE.3) THEN
				IF ((DISTR(DEST,1,3).NE.999).OR.(DISTR(DEST,2,3).NE.999).OR.
     A    (DISTR(DEST,3,3).NE.999).OR.(DISTR(DEST,4,3).NE.999)) THEN
					NOTTRD = .FALSE.
				ENDIF
			ENDIF              
C
			IF ((.NOT. NOTTRO) .AND. (.NOT. NOTTRD)) THEN 
				CALL TRAPP(ORIG,DEST,EIVT,EOVT,EC)	!! RETURN THE TRANSIT APPROACH TIMES
C
				HEADER=0.5*HWAY(DEST)              
C
C     COSTS ARE DISCOUNTED FROM 1990 TO 1970 (CALIBRATION YEAR)
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C     COSTS ARE ESTIMATED IN CURRENT DOLLARS AND MODEL COST COEFFICIENT 
C     HAS BEEN ADJUSTED ACCORDINGLY, SO DISCNT = 1.00
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
				FARE(DEST) = FARE(DEST) * DISCNT
				EC = EC * DISCNT              
C
C   COMPUTE TRANSIT UTILITY:  NOTE THAT SIGN ON TRANSIT BIAS COEFFICIENT
C   IS NEGATIVE BECAUSE IT IS ENTERED AS MINUS NUMBER.  TRANSIT BIAS IS
C   AN ADDITIONAL TRANSIT COST, I.E., TRANSIT IS LESS THAN 50 PERCENT
C   EVERYTHING ELSE BEING EQUAL.
				IF(.NOT.CBDIND) THEN
					ARNUMT= COEFF1(1)*IVT(DEST)+
     A                COEFF1(2)*(FARE(DEST)+EC)+
     B                COEFF1(3)*EIVT-
     C                COEFF1(4)+
     D                COEFF1(5)*(OVT(DEST)+EOVT)+
     E                COEFF1(6)*HEADER
				ENDIF              
C
				IF(CBDIND) THEN
					ARNUMT= COEFF2(1)*IVT(DEST)+
     A                COEFF2(2)*(FARE(DEST)+EC)+
     B                COEFF2(3)*EIVT-
     C                COEFF2(4)+
     D                COEFF2(5)*(OVT(DEST)+EOVT)+
     E                COEFF2(6)*HEADER
				ENDIF              
C
C     WRITE UTILITIES IF TRACE IS TURNED ON
				IF (TRACE) THEN
					WRITE (31, '(/A)') ' TRANSIT INPUTS IN SUBROUTINE TRIPS'
					WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
					WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST
					WRITE (31, '(A,F8.3)') '   FIRST MODE (FMD)=',FMD(DEST)
					WRITE (31, '(A,F8.3)') '   LAST MODE (LMD)=',LMD(DEST)
					WRITE (31, '(A,F8.3)') '   PRIORITY MODE (PMD)=',PMD(DEST)
					WRITE (31, '(A,F8.3)') '   IN-VEHICLE TIME (IVT)=',IVT(DEST)
					WRITE (31, '(A,F8.3)') '   TRANSIT FARE (FARE)=',FARE(DEST)
					WRITE (31, '(A,F8.3)') '   OUT-OF-VEHICLE TIME (OVT)=',
     A      OVT(DEST)
					WRITE (31, '(A,F8.3)') '   INITIAL WAIT TIME (1/2 HEADWAY)=',
     A      HEADER
					WRITE (31, '(A,I6)') '   APPROACH IVT (EIVT)=',EIVT(1)
					WRITE (31, '(A,I6)') '   APPROACH TRANSIT FARE (EC)=',EC(1)
					WRITE (31, '(A,I6)') '   APPROACH OVT (EOVT)=',EOVT(1)
					WRITE (31, '(A,F8.3)') '   TRANSIT UTILITY (ARNUMT)=',ARNUMT(1)
				ENDIF              
				TTP = EXP(-ARNUMT)/(EXP(-ARNUMT)+EXP(-ARNUMA))	!! PROBABILITY THIS TRIP IS BY TRANSIT IN THE CATS MODEL
			ELSE
				TTP = 0.0
      ENDIF              
C
C     SEE WHETHER THIS TRIP IS AN AUTO OR TRANSIT TRIP
C************ RWE CHANGE FOR I290 ROUND 3 MODELS MARCH 2013 ************
C       COMPUTE TRIPS BY MODE USING SIMULATED MODE SHARES
C***********************************************************************
              TTPAVG = SUM(TTP)/ITER  !! AVERAGE TRANSIT PROBABILITY
              TTRIP(DEST) = TTRIP(DEST) + TTPAVG
              ATRIP(DEST) = ATRIP(DEST) + (1.0-TTPAVG)
C##              TTRIP(DEST) = TTRIP(DEST) + TTP
C##              ATRIP(DEST) = ATRIP(DEST) + (1.0-TTP)              
C
C     WRITE PROBABILITIES IF TRACE IS TURNED ON
	        IF (TRACE) THEN
	            WRITE (31, '(/A)') ' CHOICE PROBABILITIES IN SUBROUTINE TRI
     APS'
                  WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
				WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST
	            WRITE (31, '(A,F9.6)') '   TRANSIT PROBABILITY (TTP)=', 
     ATTPAVG
                  WRITE (31, '(A,F8.3)') '   CURRENT TRANSIT TRIPS (TTRI
     AP)=', TTRIP(DEST)
                  WRITE (31, '(A,F8.3)') '   CURRENT AUTO TRIPS (ATRIP)=
     A', ATRIP(DEST)
	        ENDIF
               
          ENDIF   !! END OF DESTINATION ZONE PROCESSING 
C
C     WRITE TRIPS INTO EMMEBANK
C       MF23 = TRANSIT TRIPS
C       MF24 = AUTO TRIPS
          P = ORIG
	    Q = DEST
          REC1 = ((P-1)*mcent) + Q
C       COMPUTE TRIPS BY MODE USING SIMULATED MODE SHARES
          SC = SC + PTRIP(Q)      !! Total Person trips
          PTRIP_TOT = PTRIP_TOT + PTRIP(Q)
          
C##          TTRIP(Q) = TTRIP(Q)*PTRIP(Q)/ITER
          TTRIP(Q) = TTRIP(Q)*PTRIP(Q)
          WRITE(951, REC=REC1) TTRIP(Q)
          SCT = SCT + TTRIP(Q)    !! Transit Person trips
          TTRIP_TOT = TTRIP_TOT + TTRIP(Q)
      
C##          ATRIP(Q) = ATRIP(Q)*PTRIP(Q)/ITER
          ATRIP(Q) = ATRIP(Q)*PTRIP(Q)
          WRITE(952, REC=REC1) ATRIP(Q)
          SCA = SCA + ATRIP(Q)    !! Auto Person trips
          ATRIP_TOT = ATRIP_TOT + ATRIP(Q)      
          
      ENDDO   !! END OF DESTINATION ZONE LOOP
  
C
C  THIS ZONE IS DONE
     	WRITE(31,80803) ORIG, SC
      WRITE(31,80804) ORIG, SCA
      WRITE(31,80805) ORIG, SCT

80803 FORMAT(' ZONE ',I5,' HAS SIMULATED ',F12.4,' PERSON TRIPS')
80804 FORMAT(' ZONE ',I5,' HAS ',F12.4,' AUTO PERSON TRIPS')
80805 FORMAT(' ZONE ',I5,' HAS ',F12.4,' TRANSIT PERSON TRIPS')
C
	CLOSE (951)
	CLOSE (952)

      RETURN
      END