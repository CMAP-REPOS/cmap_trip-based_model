      SUBROUTINE TRAPP(ORIG,DEST,EIVT,EOVT,EC)
      
C## Code restructured to eliminate archaic GO TO calls - Heither, 11-02-2017
C     COMPUTES APPROACH TIME FOR TRANSIT.
C     USES FIRST AND LAST MODES,DISTANCE DISTRIBUTION PARAMETERS
C          SPEEDS FOR ALL APPROACH MODES (WALK,AUTO,AND BUS),
C          TRANSIT FARE PARAMETERS,AUTO OPERATING COST,DRIVER'S VALUE
C          OF TIME(FOR DRIVEN),AUTO FIXED COST,PARK AND RIDE RATES,
C          WALKING TIME FROM PARK AND RIDE
C
C     THE ARRAY CSTBYM IS NOW DIMENSIONED (4) FOR AUTO ONLY
C     CHANGED BY EASH 12/3/93
C
      IMPLICIT INTEGER*4 (A-Z)
C
	INCLUDE 'Common_approach_model.fi'
	INCLUDE 'Common_data.fi'
	INCLUDE 'Common_params.fi'
	INCLUDE 'Common_emme4bank.fi'

      REAL*4 APWAIT(5)
      REAL,DIMENSION (ITER,5) :: APWALK, APTIME, TVAR4, APCOST
      INTEGER,INTENT(OUT),DIMENSION (ITER) :: EC, EIVT, EOVT
      INTEGER,DIMENSION (ITER) :: EOT
      REAL,DIMENSION (ITER) :: TVAR5
      INTEGER*4 ZOD1(2)
      INTEGER I,J
      INTEGER,DIMENSION (ITER,2) :: VOT, INVT, COST, TWAIT, APM	
	  
C -- INITIALIZE VALUES --    
      APCOST=0.
      APWAIT=0.
      APTIME=0.
      APWALK=0.
      APM=1
      COST=0
      TWAIT=0
      TVAR4=0.
C
C     GET ZONE TYPES
C
      ZOD1(1)=ZTYPE(ORIG)
      ZOD1(2)=ZTYPE(DEST)
C
C     GET INTERCHANGE ATTRIBUTES
C     FM=FIRST MODE,LM=LAST MODE,PM=PRIORITY MODE
C
      FM = FMD(DEST)+1
      LM = LMD(DEST)+1
C
C     INET TRANSIT NETWORK STORES SOME SUBURBAN BUS LINES (MODE=6)
C     AS MODE=5 DUE TO ARRAY SIZE LIMITS.  IF MODE=5 AND
C     ZONE TYPE NO. 1 IS OUTSIDE OF CHICAGO, THEN CHANGE MODE TO 6.
C
      IF(FM.EQ.5.AND.ZOD1(1).GT.2) FM=6
      IF(LM.EQ.5.AND.ZOD1(2).GT.2) LM=6
C DEBUGGING:      WRITE (*,'(A)') ' CHECK POINT 1 REACHED  '
C
C     GET APPROACH DISTANCES FOR FIRST AND LAST MODES
C
C DEBUGGING:        WRITE (31, '(A,10F8.4)')  '  RAN6 FOR ADIST IN TRAPP',
C DEBUGGING:  ARAN6(1),RAN6(2),RAN6(3),RAN6(4),RAN6(5),RAN6(6),RAN6(7),RAN6(8),
C DEBUGGING:       BRAN6(9),RAN6(10) 
 
      CALL ADIST(ORIG,DEST,FM,LM)     
C
C     CHECK FIRST/LAST MODES AND COMPUTE APPROACH TIME AND COST
C
C     ARRAYS APWALK,APCOST,APTIME CONTAIN TIME TO WALK,APPROACH COST,
C     AND IN-VEHICLE APPROACH TIME RESPECTIVELY. THESE ARRAYS HAVE FIVE
C     ELEMENTS FOR FIVE POSSIBLE APPROACH MODES.( 1-WALK,2-BUS,
C     3-PARK & RIDE,4-KISS & RIDE,AND 5-FEEDER BUS)
C
	DO I=1,2
C     I=1 GET VALUES FOR ORIGIN
C     I=2 GET VALUES FOR DESTINATION
          IF (I.EQ.1) THEN 
	            Z = ORIG
	            M = FM
	    ELSE
	            Z = DEST
	            M = LM
          ENDIF
C
C  IN THIS CASE WE ARE MAKING THE STATION PARKING COST FOR HOME BASED OTHER AND 
C  NON-HOME BASED TRIPS EQUAL TO 60 PERCENT OF HOME BASED WORK
C  CHANGE MADE 12/8/93 BY GWS NEXT LINE
C      IF(TPTYPE.NE.1) PRCOST(Z) = PRCOST(Z) * 0.6
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C     NONWORK PARK AND RIDE PARKING COST IS NOW READ FROM M01.  IN MANY
C     CASES THE NONWORK PNR COSTS ARE HIGHER THAN WORK DUE TO 
C     DISCOUNTING OF MONTHLY PARKING FEES.
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C     SET HIGH STARTING VALUE OF TVAR5
		TVAR5=1.E10
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C     IN CALCULATING TVAR4 AND TVAR5
C       IN-VEHICLE TIME = DRVOT = 20 CENTS/MIN
C       OUT-OF-VEHICLE TIME = 40 CENTS/MIN
C       PASSENGER TIME = 0.5 DRIVER TIME
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     FOLLOWING SECTION ADDED BY EASH TO SIMPLIFY LOGIC
C     IF M IS BUS (MODE<7) THEN ONLY POSSIBLE APPROACH COST IS TIME TO
C     WALK TO BUS.  OTHER APROACH COSTS AND TIMES ARE LINE=HAUL.
		IF (M .LT. 7) THEN
		    J=1
			APWALK(1:ITER,1)= DOND(1:ITER,1,I)/SPDWLK*600.
C     INCREASE WALK TIME IN CHICAGO CBD FOR WORK TRIPS
			IF(ZTYPE(Z).EQ.1.AND.TPTYPE.EQ.1) 
     A				APWALK(1:ITER,1)=APWALK(1:ITER,1)*1.20
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
			TVAR4(1:ITER,1)=APWALK(1:ITER,1)*DRVOT*2.0
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
			TVAR5(1:ITER) = TVAR4(1:ITER,1)  
C DEBUGGING:               IF (TRACE) THEN
C DEBUGGING: 	            WRITE (31, '(A,4F10.4)') '   TVAR4=',
C DEBUGGING:      A      		TVAR4(1,1),TVAR4(2,1),TVAR4(3,1),TVAR4(4,1)
C DEBUGGING: 	            WRITE (31, '(A,4F10.4)') '   TVAR5=',
C DEBUGGING:      A      		TVAR5(1),TVAR5(2),TVAR5(3),TVAR5(4)
C DEBUGGING:               ENDIF
			APM(1:ITER,I)=1
			INVT(1:ITER,I)=0
			VOT(1:ITER,I)=APWALK(1:ITER,1)+.5
			COST(1:ITER,I)=0
			TWAIT(1:ITER,I)=0             
              DO J=2,5
                  TVAR4(1:ITER,J)=0.
                  APCOST(1:ITER,J)=0.
                  APWAIT(J)=0.
                  APTIME(1:ITER,J)=0.
                  APWALK(1:ITER,J)=0.
              ENDDO    
                  
		ELSE
C     REMAINDER OF SUBROUTINE FOR RAIL TRANSIT/COMMUTER RAIL ONLY
C     GET VALUES FOR FIVE ALTERNATIVES
		    DO J=1,5
                  TVAR4(1:ITER,J)=0.
                  APCOST(1:ITER,J)=0.
                  APWAIT(J)=0.
                  APTIME(1:ITER,J)=0.
                  APWALK(1:ITER,J)=0.
C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =  					
C     J=1(WALK).COMPUTE WALKING TIME TO FIRST MODE.NO COST OR IN-VEHICLE TIME
C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =  
			    IF (J.EQ.1) THEN
				    K=MAX0(1,M-5)
					APWALK(1:ITER,J)= DOND(1:ITER,K,I)/SPDWLK*600.
C     INCREASE WALK TIME IN CHICAGO CBD FOR WORK TRIPS
					IF(ZTYPE(Z).EQ.1.AND.TPTYPE.EQ.1) 
     A						APWALK(1:ITER,J)=APWALK(1:ITER,J)*1.20
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
					TVAR4(1:ITER,J)=APWALK(1:ITER,J)*DRVOT*2.0	
C     ADD APPROACH TIMES AND COSTS - EVERYTHING SHOULD NOW BE IN CENTS
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
					TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)
C
C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =  						
C    J=2(BUS) FIRST MODE. COMPUTE WALKING TIME, COST, AND IN-VEHICLE TIME
C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =  					
                  ELSE IF (J.EQ.2) THEN
                      APWALK(1:ITER,J)= DOND(1:ITER,1,I)/SPDWLK*600.
C     INCREASE WALK TIME IN CHICAGO CBD
					IF(ZTYPE(Z).EQ.1) APWALK(1:ITER,J)=APWALK(1:ITER,J)*1.20
					APWAIT(J)=fwbus(z)		
C                      WRITE (31, '(A,8I4)') ' Speeds=', SPEEDS(1), 
C     ASPEEDS(2),SPEEDS(3),SPEEDS(4),SPEEDS(5),SPEEDS(6),SPEEDS(7),
C     BSPEEDS(8)
					APTIME(1:ITER,J) = DOND(1:ITER,K,I)/SPEEDS(ZTYPE(Z)+4)*60.
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
					TVAR4(1:ITER,J)=APWALK(1:ITER,J)*DRVOT*2.0+
     AAPTIME(1:ITER,J)*DRVOT+APWAIT(J)*DRVOT*2.0

C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************	
C
C     COST COMPUTATIONS FOR APPROACH BUS
C     REVISED BY EASH 12/4/93 TO REFLECT CURRENT FARES
C   ====  ORIGIN  ====
					IF(I.EQ.1) THEN
C     FIRST MODE SUBURBAN RAIL - CHECK ZONE TYPE AT ORIGIN						
					    IF(M.EQ.8) THEN
						    IF(ZOD1(1).GT.2) THEN
C   --- SUBURBAN ORIGIN, PACE BUS ---
C     PACE BUS - METRA RAIL, ADDED FARE IS PACE FEEDER BUS FARE
							    IF (LM.EQ. 8) APCOST(1:ITER,J) = TRANC2(1)
C     PACE BUS - METRA RAIL - CTA, NO ADDED FARE, LINKUP > FEEDER BUS
								IF(LM.EQ.7 .OR. LM.EQ.5 .OR. LM.EQ.4) APCOST(1:ITER,J) = 0
C     PACE BUS - METRA RAIL - PACE, ADDED FARE IS LINKUP LESS FEEDER BUS
								IF (LM .EQ. 6) APCOST(1:ITER,J) = TRANC2(3) 
C     ADD APPROACH TIMES AND COSTS - EVERYTHING SHOULD NOW BE IN CENTS
								TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)
							ELSE
C   --- CHICAGO ORIGIN, CTA BUS ---
C     CTA BUS - METRA RAIL, ADDED FARE IS LINKUP FARE (SINGLE RIDE)
							    IF (LM .EQ. 8) APCOST(1:ITER,J) = CTACBD
C     CTA BUS - METRA RAIL - CTA, ADDED FARE IS CTA TRANSFER
								IF(LM.EQ.7 .OR. LM.EQ.5 .OR. LM.EQ.4) APCOST(1:ITER,J) = XFER
C     CTA BUS - METRA RAIL - PACE, ADDED FARE IS LINKUP LESS FEEDER BUS
								IF (LM.EQ.6) APCOST(1:ITER,J) = TRANC2(3)
C     ADD APPROACH TIMES AND COSTS - EVERYTHING SHOULD NOW BE IN CENTS
								TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)			
                              ENDIF
C     FIRST MODE CTA RAPID TRANSIT
C     WHEN FOLLOWING STATEMENT IS TRUE A FULL FARE AND TRANSFER HAVE
C     BEEN PAID, SO NO ADDED FARE IS NEEDED FOR BUS						
                          ELSE IF(LM.LT.7) THEN
						    TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)
							  
C     ORIGIN OTHER THAN CHICAGO, ADDED FARE IS NOW AN RTA TRANSFER						  
                          ELSE IF(ZOD1(1).GT.2) THEN
						    APCOST(1:ITER,J)=TRANC3(3)
							TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)

C     CHICAGO ORIGIN, ADDED FARE IS CTA TRANSFER								
                          ELSE
						    APCOST(1:ITER,J)=XFER
							TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)
                          ENDIF

C   ====  DESTINATION  ====								
                      ELSE       
C     LAST MODE SUBURBAN RAIL						
						IF(M.EQ.8) THEN
						    IF(ZOD1(2).GT.2) THEN
C     SUBURBAN DESTINATION, PACE BUS
C     METRA RAIL - PACE BUS, ADDED FARE IS PACE FEEDER BUS FARE
							    IF (FM.EQ. 8) APCOST(1:ITER,J) = TRANC2(1)
C     CTA - METRA RAIL - PACE BUS,  NO ADDED FARE, LINKUP > FEEDER BUS
								IF(FM.EQ.7 .OR. FM.EQ.5 .OR. FM.EQ.4) APCOST(1:ITER,J) = 0
C     PACE - METRA RAIL - PACE BUS, ADDED FARE IS LINKUP LESS FEEDER BUS
								IF (FM .EQ. 6) APCOST(1:ITER,J) = TRANC2(3)
								TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)				
                              ELSE
C     CHICAGO DESTINATION, CTA BUS
C     METRA - CTA BUS, ADDED COST IS LINKUP FARE (SINGLE RIDE)
							    IF (FM .EQ. 8) APCOST(1:ITER,J) = CTACBD
C     CTA - METRA - CTA BUS, ADDED COST IS CTA TRANSFER
								IF (FM .EQ. 7 .OR. FM .EQ. 5 .OR. FM .EQ. 4) 
     A                            APCOST(1:ITER,J) = XFER
C     PACE - METRA - CTA BUS, ADDED COST IS LINKUP MINUS FEEDER BUS
								IF (FM .EQ. 6) APCOST(1:ITER,J) = TRANC2(3)
								TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)								
                              ENDIF

C     LAST MODE CTA RAPID TRANSIT
C     NO ADDED FARE FOR EGRESS BUS, TRANSFER OR LINKUP ALREADY PURCHASED								
                          ELSE IF (FM.LT.7 .OR. 
     A                    MAXVAL(APM(1:ITER,1)) .EQ. 2  .OR. 
     B                    MAXVAL(APM(1:ITER,1)) .EQ. 5) THEN
         						TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)	

C     DESTINATION OTHER THAN CHICAGO, ADDED COST IS STILL CTA TRANSFER	 
                          ELSE IF (ZOD1(2).GT.2) THEN
						    APCOST(1:ITER,J)=XFER
							TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)
								
C     CHICAGO DESTINATION, ADDED COST IS CTA TRANSFER
                          ELSE
						    APCOST(1:ITER,J)=XFER
							TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)
						ENDIF
                      ENDIF
											
C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =  						
C    J=3(PARK & RIDE) FIRST MODE. PARK & RIDE FOR APPROACH TO RAPID TRANSIT AND SUBURBAN RAIL ROAD
C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 					
                  ELSE IF (J.EQ.3 .AND. I.EQ.1) THEN
                      APTIME(1:ITER,J)= 
     ADOND(1:ITER,5,I)/SPEEDS(ZTYPE(Z))*60.
					APWALK(1:ITER,J)= W2PNR						
C     APPROACH COST=PER MILE COST + FIXED COST
					APCOST(1:ITER,J)= DOND(1:ITER,5,I)*CSTBYM(ZTYPE(Z))						
C     OPERATING COST MAY NOT BE LESS THAN 5 CENTS
					WHERE(APCOST(1:ITER,J).LT.5.) APCOST(1:ITER,J) = 5.
					APCOST(1:ITER,J)=APCOST(1:ITER,J)+AFC1						
C     ADD HALF OF THE PARKING COST IF PARK-&-RIDE AVAILABLE
					IF(PNRAVL(Z)) APCOST(1:ITER,J)=APCOST(1:ITER,J)+PRCOST(Z)/2
C     IF NO PARK-&-RIDE FACILITY AVAILABLE INCREASE WALK TIME
					IF(.NOT.PNRAVL(Z)) APWALK(1:ITER,J)=3*W2PNR
							
					TVAR4(1:ITER,J)=APWALK(1:ITER,J)*DRVOT*2.0+APTIME(1:ITER,J)*DRVOT
					TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)								
					
C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =  						
C    J=4(KISS & RIDE) FIRST MODE. KISS & RIDE FOR APPROACH TO RAPID TRANSIT AND SUBURBAN RAIL ROAD
C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 					
                  ELSE IF (J.EQ.4 .AND. I.EQ.1) THEN
                      APTIME(1:ITER,J)= 
     ADOND(1:ITER,5,I)/SPEEDS(ZTYPE(Z))*60.
					APWALK(1:ITER,J)= W2PNR
					APCOST(1:ITER,J)= DOND(1:ITER,5,I)*CSTBYM(ZTYPE(Z))
					WHERE(APCOST(1:ITER,J).LT.5.) APCOST(1:ITER,J) = 5.
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C     ASSUMPTION IS THAT KISS AND RIDE REQUIRES A SPECIAL
C     TRIP FROM HOME.  DRIVER AND PASSENGER TIME VALUES NOW EQUAL.
C      APCOST(J)=APCOST(J)*2.+AFC2+(DRVOT*APTIME(J)*2.)/10
					APCOST(1:ITER,J)=APCOST(1:ITER,J)*2.+ AFC2
					TVAR4(1:ITER,J)=APWALK(1:ITER,J)*DRVOT*2+
     A					APTIME(1:ITER,J)*2.0*DRVOT+APTIME(1:ITER,J)*DRVOT
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
					TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)	
C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =  						
C    J=5(FEEDER BUS) FIRST MODE. FEEDER BUS FOR RAIL ONLY
C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 						
                  ELSE IF (J.EQ.5 .AND. I.EQ.1) THEN
					APWALK(1:ITER,J)=DOND(1:ITER,4,I)/SPDWLK*600.
					APWAIT(J)=fwfdr(Z)
					APTIME(1:ITER,J) = DOND(1:ITER,K,I)/SPEEDS(ZTYPE(Z)+4)*60.
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
					TVAR4(1:ITER,J)=APWALK(1:ITER,J)*DRVOT*2.0+
     A						APTIME(1:ITER,J)*DRVOT+APWAIT(J)*DRVOT*2.0
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C ## SAME CODE BLOCK AS FOR BUS						
C     FIRST MODE SUBURBAN RAIL - CHECK ZONE TYPE AT ORIGIN						
					IF(M.EQ.8) THEN
					    IF(ZOD1(1).GT.2) THEN
C   --- SUBURBAN ORIGIN, PACE BUS ---
C     PACE BUS - METRA RAIL, ADDED FARE IS PACE FEEDER BUS FARE
						    IF (LM.EQ. 8) APCOST(1:ITER,J) = TRANC2(1)
C     PACE BUS - METRA RAIL - CTA, NO ADDED FARE, LINKUP > FEEDER BUS
							IF(LM.EQ.7 .OR. LM.EQ.5 .OR. LM.EQ.4) APCOST(1:ITER,J) = 0
C     PACE BUS - METRA RAIL - PACE, ADDED FARE IS LINKUP LESS FEEDER BUS
							IF (LM .EQ. 6) APCOST(1:ITER,J) = TRANC2(3) 
C     ADD APPROACH TIMES AND COSTS - EVERYTHING SHOULD NOW BE IN CENTS
							TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)
						ELSE
C   --- CHICAGO ORIGIN, CTA BUS ---
C     CTA BUS - METRA RAIL, ADDED FARE IS LINKUP FARE (SINGLE RIDE)
						    IF (LM .EQ. 8) APCOST(1:ITER,J) = CTACBD
C     CTA BUS - METRA RAIL - CTA, ADDED FARE IS CTA TRANSFER
							IF(LM.EQ.7 .OR. LM.EQ.5 .OR. LM.EQ.4) APCOST(1:ITER,J) = XFER
C     CTA BUS - METRA RAIL - PACE, ADDED FARE IS LINKUP LESS FEEDER BUS
							IF (LM.EQ.6) APCOST(1:ITER,J) = TRANC2(3)
C     ADD APPROACH TIMES AND COSTS - EVERYTHING SHOULD NOW BE IN CENTS
                              TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+
     AAPCOST(1:ITER,J)
                          ENDIF
								
C     FIRST MODE CTA RAPID TRANSIT
C     WHEN FOLLOWING STATEMENT IS TRUE A FULL FARE AND TRANSFER HAVE
C     BEEN PAID, SO NO ADDED FARE IS NEEDED FOR BUS						
					ELSE IF(LM.LT.7) THEN
					    TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)
							  
C     ORIGIN OTHER THAN CHICAGO, ADDED FARE IS NOW AN RTA TRANSFER						  
					ELSE IF(ZOD1(1).GT.2) THEN
                          APCOST(1:ITER,J)=TRANC3(3)
						TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)

C     CHICAGO ORIGIN, ADDED FARE IS CTA TRANSFER								
					ELSE
					    APCOST(1:ITER,J)=XFER
						TVAR4(1:ITER,J)=TVAR4(1:ITER,J)+APCOST(1:ITER,J)
					ENDIF												
                  ENDIF
C     END OF LOOP FOR FIVE APPROACH ALTERNATIVES
              ENDDO
          ENDIF

C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
C     EVALUATE APPROACH MODES AND SELECT THE BEST
C = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
C     FOLLOWING CODE CHANGED BY EASH 12/6/93 TO REFLECT
C     NEW TRIP TYPES
C     TPTYPE = 1 HOME PRODUCTIONS TO WORK ATTRACTIONS
C     TPTYPE = 2 HOME PRODUCTIONS TO NON-WORK/NON-HOME ATTRACTIONS
C     TPTYPE = 3 NON-HOME PRODUCTIONS TO NON-HOME ATTRACTIONS
		DO J=1,5
C     NO KISS-&-RIDE FOR NON-WORK TRIPS
		    IF(TPTYPE.NE.1 .AND. J.EQ.4) EXIT
C     NO PARK-AND RIDE OR KISS-&-RIDE AT THE WORK/OTHER
C     ATTRACTION END FOR HOME BASED TRIPS
			IF(TPTYPE.LT.3 .AND. I.EQ.2 .AND. (J.EQ.3.OR.J.EQ.4)) EXIT
C     NO PARK-&-RIDE OR KISS AND RIDE FOR NON-HOME TO NON-HOME TRIPS
			IF(TPTYPE.EQ.3 .AND. (J.EQ.3.OR.J.EQ.4)) EXIT
C --  FIND LOWEST COST APPROACH					
			WHERE(TVAR4(1:ITER,J) < TVAR5 .AND. TVAR4(1:ITER,J).GT.0)
			    TVAR5=TVAR4(1:ITER,J)
                  APM(1:ITER,I)=J
				INVT(1:ITER,I)=APTIME(1:ITER,J)+.5
				VOT(1:ITER,I)=APWALK(1:ITER,J)+.5
				COST(1:ITER,I)=APCOST(1:ITER,J)+.5
				TWAIT(1:ITER,I)=APWAIT(J)+.5					
			END WHERE													
		ENDDO	

C     END OF ORIG AND DEST LOOPS
C     WRITE APPROACH QUANTITIES IF TRACE IS TURNED ON
		IF (TRACE .AND. (I.EQ.1)) THEN
		    WRITE (31, '(/A)') ' ORIGIN ZONE INPUTS FROM SUBROUTINE TRAPP'
			WRITE (31, '(A,I6)') '   ORIGIN ZONE=', Z
			WRITE (31, '(A,I6)') '   FIRST MODE (M)=',M
			WRITE (31, '(A,I6)') '   TRIP TYPE (TPTYPE)=',TPTYPE
			DO J = 1,5
			    WRITE (31, '(/A,I4)') '   APPROACH MODE (J)=', J
				WRITE (31, '(A,F8.3)') '   APPROACH IVT (APTIME)=',APTIME(1,J)
				WRITE (31, '(A,F8.3)') '   APPROACH WALK TIME (APWALK)=',
     A      		APWALK(1,J)
				WRITE (31, '(A,F8.3)') '   APPROACH COST (APCOST)=',APCOST(1,J)
				WRITE (31, '(A,F8.3)') '   APPROACH WAIT TIME (APWAIT)=',
     A      		APWAIT(J)
				WRITE (31, '(A,F8.3)') '   APPROACH GENERAL COST (TVAR4)=',
     A      		TVAR4(1,J)
			ENDDO
			WRITE (31, '(/A,I4)') '   FINAL APPROACH MODE (APM)=',APM(1,1)
			WRITE (31, '(A,I6)') '   APPROACH IVT (INVT)=',INVT(1,1)
			WRITE (31, '(A,I6)') '   APPROACH WALK TIME (VOT)=', VOT(1,1)
			WRITE (31, '(A,I6)') '   APPROACH COST (COST)=',COST(1,1)
			WRITE (31, '(A,I6)') '   APPROACH WAIT TIME (WAIT)=',TWAIT(1,1)
			WRITE (31, '(A,F8.3)') '   APPROACH GENERAL COST (TVAR5)=',TVAR5(1)
		ENDIF
C
		IF (TRACE .AND. (I.EQ.2)) THEN
		    WRITE (31, '(/A)')' DESTINATION ZONE INPUTS FROM SUBROUTINE TRAP
     AP'
			WRITE (31, '(A,I6)') '   DESTINATION ZONE=', Z
			WRITE (31, '(A,I6)') '   LAST MODE (M)=',M
			WRITE (31, '(A,I6)') '   TRIP TYPE (TPTYPE)=',TPTYPE
			DO J = 1,5
			    WRITE (31, '(/A,I4)') '   APPROACH MODE (J)=', J
				WRITE (31, '(A,F8.3)') '   APPROACH IVT (APTIME)=',APTIME(1,J)
				WRITE (31, '(A,F8.3)') '   APPROACH WALK TIME (APWALK)=',
     A      		APWALK(1,J)
				WRITE (31, '(A,F8.3)') '   APPROACH COST (APCOST)=',APCOST(1,J)
				WRITE (31, '(A,F8.3)') '   APPROACH WAIT TIME (APWAIT)=',
     A      		APWAIT(J)
				WRITE (31, '(A,F8.3)') '   APPROACH GENERAL COST (TVAR4)=',
     A      		TVAR4(1,J)
              ENDDO

			WRITE (31, '(/A,I4)') '   FINAL APPROACH MODE (APM)=',APM(1,2)
			WRITE (31, '(A,I6)') '   APPROACH IVT (INVT)=',INVT(1,2)
			WRITE (31, '(A,I6)') '   APPROACH WALK TIME (VOT)=', VOT(1,2)
			WRITE (31, '(A,I6)') '   APPROACH COST (COST)=',COST(1,2)
			WRITE (31, '(A,I6)') '  APPROACH WAIT TIME (WAIT)=',TWAIT(1,2)
			WRITE (31, '(A,F8.3)') '   APPROACH GENERAL COST (TVAR5)=',TVAR5(1)
		ENDIF
	ENDDO

C     ADD ORIGIN AND DESTINATION QUANTITIES AND PASS BACK TO TRIPS
C
	EIVT=INVT(1:ITER,1)+INVT(1:ITER,2)
	EOVT=VOT(1:ITER,1)+VOT(1:ITER,2)
	EC=COST(1:ITER,1)+COST(1:ITER,2)
	EOT=TWAIT(1:ITER,1)+TWAIT(1:ITER,2)
C DEBUGGING:          WRITE (*,'(A)') ' END TRAPP  '
C      WRITE (31, '(A,6F8.3)') '   EC 6=',EC(1),
C     AEC(2),EC(3),EC(4),EC(5),EC(6) 
C      WRITE (31, '(A,6F8.3)') '   COST 6=',COST(1,1),
C     ACOST(2,1),COST(3,1),COST(4,1),COST(5,1),COST(6,1)
C      WRITE (31, '(A,6F8.3)') '   COST 6=',COST(1,2),
C     ACOST(2,2),COST(3,2),COST(4,2),COST(5,2),COST(6,2)        
C      WRITE (31, '(A,6F8.3)') '   EIVT 6=',EIVT(1),
C     AEIVT(2),EIVT(3),EIVT(4),EIVT(5),EIVT(6)  
C      WRITE (31, '(A,6F8.3)') '   EOVT 6=',EOVT(1),
C     AEOVT(2),EOVT(3),EOVT(4),EOVT(5),EOVT(6) 
C
	RETURN
	END