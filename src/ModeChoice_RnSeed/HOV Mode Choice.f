      PROGRAM HOV_MODE_CHOICE
	USE DFLIB
C***********************************************************************
C
C     THIS PROGRAM IS AN INTERCHANGE ADAPTION OF THE CATS MODE CHOICE 
C     PROGRAM INCORPORATING AUTO SUBMODES.  IT WAS ORIGINALLY PREPARED
C     IN 1994 FOR THE ORIGINAL I-290 HOV STUDY.  INCORPORATED INTO THE 
C     CODE ARE THE OCCUPANCY CHOICES DEVELOPED FOR THE COMSIS-MNCPPC 
C     MODE CHOICE MODEL.  COEFFICIENTS IN THIS MODEL WERE CALIBRATED 
C     FROM SHIRLEY HIGHWAY DATA.  THIS OPTION IS IN EFFECT WHEN HOV2 OR
C     HOV3 IS TRUE ON OPTION NAMELIST.
C
C     ANOTHER CHANGE IN THIS VERSION (8/1/94) IS THAT AUTO TRIPS MAY BE
C     SPLIT INTO TOLL AND NON-TOLL CATEGORIES FOR ASSIGNMENT.  THIS
C     OPTION IS IN EFFECT WHEN TOLL IS TRUE ON OPTION NAMELIST.
C
C     AUTO OCCUPANCIES MAY NOW BE INPUT INTO THE PROGRAM FOR WORK
C     TRIPS (8/1/94).  THIS IS SIGNALED BY THE VARIABLE AOCC IN THE
C     OPTION NAMELIST.  THE INTENT IS THAT AUTO OCCUPANCIES FROM ONE
C     ITERATION CAN BE INPUT INTO THE NEXT MODE CHOICE ITERATION.
C
C***********************************************************************
C
C     TRANNC2 ADDED BY EASH DURING 1993 CONFORMITY TESTING FOR FEEDER 
C     BUS FARE TO SUBURBAN RAIL STATION.
C
C     MAJOR REVISIONS TO CBD PARKING COST MODEL DURING 1993 CONFORMITY.
C     THESE CHANGES BY GORDON SCHULTZ ARE IN LOWER CASE.
C
C     FOLLOWING TRIP TYPES ASSUMED
C     TPTYPE=1  HOME PRODUCTIONS TO WORK ATTRACTIONS
C     TPTYPE=2  HOME PRODUCTIONS TO NON-WORK/NON-HOME ATTRACTIONS
C     TPTYPE=3  NON-HOME PRODUCTIONS TO NON-HOME ATTRACTIONS
C
C***********************************************************************
C
C     PRINCIPAL FEATURES OF THIS VERSION OF THE PROGRAM ARE AS FOLLOWS:
C
C     1.  THE PROGRAM IS WRITTEN IN FORTRAN SOURCE CODE USING COMPAQ 
C         VISUAL FORTRAN, RELEASE 6.5A.  THE SOURCE CODE CAN BE COMPILED
C         AND RUN ON EITHER A PC WINDOWS (PB CONSULT) OR SUN UNIX (CATS)
C         PLATFORM.
C     2.  THE PROGRAM READS AND WRITES FILES DIRECTLY FROM AND INTO
C         EMME DATABANKS.  THE INPUT FULL MATRICES ARE DESCRIBED IN
C         THE PROGRAM COMMENTS.
C     3.  OUTPUT IS DIRECTED TO A LENGTHY LOG FILE FOR REVIEW, ANALYSES,
C         AND DEBUGGING.  PROGRESS OF THE PROGRAM IS WRITTEN TO THE 
C         CONSOLE.
C     4.  INPUT FILES ARE SLIGHTLY REDESIGNED SO THAT CBD PARKING AND 
C         THE OPTIONAL DISTR PARAMETERS ARE READ IN SEPARATE FILES.
C     5.  MOST SECTIONS OF THE PROGRAM THAT ARE NO LONGER USED WERE
C         REMOVED.  THIS INCLUDES STATEMENTS THAT PACK AND UNPACK WORDS.  
C
C***********************************************************************
C
C     THIS VERSION OF THE PROGRAM WAS ASSEMBLED BY RONALD EASH FOR 
C     THE 2001-2002 I-290 HIGH OCCUPANCY VEHICLE LANE STUDY.  THIS 
C     PROJECT WAS CARRIED OUT AT THE CHICAGO OFFICE OF PB CONSULT AND 
C     WAS FUNDED BY THE ILLINOIS DEPARTMENT OF TRANSPORTATION.
C
C***********************************************************************
C
C     THE PREPARATION OF THE CODE WAS STARTED SEPTERMBR 10, 2001.
C     FIRST DRAFT COMPLETED           
C
C***********************************************************************	
C
C     THE CODE REFLECTS THE ENHANCEMENTS IN THE PRE DISTRIBUTION PROGRAM
C     PREVIOUSLY DEVELOPED FOR THE CURRENT I-290 HOV LANE PROJECT.
C
C***********************************************************************
C
C     THE CODE WAS REVISED BY RWE FOR THE PRAIRIE PARKWAY PROJECT TO  
C     HANDLE 3000 ZONES.
C
C     MAY 9, 2003
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     YET ANOTHER PASS THROUGH THE PROGRAM FOR THE REVISED I290 HOV 
C     STUDY STARTED IN JUNE 2009.
C
C     MOST CHANGES ARE NOTED IN BODY OF CODE.  NOTE THAT FILE NAMES
C     ARE NOW TAGGED WITH TRIP PURPOSE SINCE SEVERAL OF THE INPUT
C     FILES ARE NOW SPECIFIC TO TRIP PURPOSE.
C
C     INPUT EMMEBANK IS NOW NAMED EMMEBANK FOR CONSISTENCY WITH
C     EMME3.
C
C     APPROACH MODE DISTANCES ARE NOW DETERMINED FOR BUS AND 
C     FEEDER BUS IF M01 FILE INDICATES WAIT TIME NOT EQUAL TO 999.
C
C     MOST INPUT FILES HAVE BEEN REFORMATED AS COMMA DELIMITED FILES
C     FOR EASE OF PREPARATION.
C
C     PARK AND RIDE COSTS ARE INPUT FROM M01 FOR HOME-WORK AND NONWORK
C     PURPOSES.  NO ADJUSTMENT FOR PERIOD OF TIME PARKED SINCE IN
C     MANY CASES IT EFFECTIVELY COSTS MORE TO PARK AT STATION FOR
C     NONWORK TRIP THAT DOES NOT GET MONTHLY DISCOUNT.
C
C     GIVEN CURRENT COST STRUCTURE IT IS POSSIBLE TO HAVE NEGATIVE 
C     CBD PARKING COSTS.  RESET TO ZERO WHEN THIS OCCURS.
C
C     NOW POSSIBLE FOR ZONES TO HAVE THE SAME MINIMUM AND MAXIMUM 
C     ACCESS DISTANCE TO BUS.  THIS OCCURS WHEN ONLY A SMALL FRACTION
C     OF THE ZONE IS WITHIN REASONABLE WALKING DISTANCE OF A FEEDER/
C     REGULAR BUS LINE.  FOR THE PURPOSES OF THE MODEL ACCESS 
C     IS SET TO MINIMUM WHEN THIS OCCURS.
C
C     CODED INCOMES AND AUTO OCCUPANCIES UPDATED TO 2007-2009 LEVELS.
C
C     COMMENTS BY RWE 9/14/2009
C 
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C*******************  RWE CHANGE FOR I290 OCTOBER 2009  ****************
C
C     THE FINAL VERSION OF THE MODE CHOICE MODEL FOR THE I290 PROJECT
C     INCLUDES AN OPTION THAT ALLOWS HOME-WORK TRIPS TO BE SUBDIVIDED
C     INTO TRIPS COMPLETED BY HIGH (ABOVE MEDIAN) AND LOW (BELOW MEDIAN)  
C     EARNINGS WORKERS.  TWO SWITCHES INDICATE THAT THIS OPTION IS IN 
C     EFFECT, LOW_INC AND HI_INC.  WHEN EITHER OF THESE IS TURNED ON,
C     THE PROGRAM EXPECTS TO READ A FILE OF HOUSEHOLD CHARACTERISTICS 
C     BUILT IN THE TRIP GENERATION NAMED MC_HH.TXT.
C
C*******************  RWE CHANGE FOR I290 OCTOBER 2009  ****************
C*******************  RWE CHANGE FOR I290 MARCH 2013  ******************
C
C     REVISED FOR THE ROUND 3 I-290 MODE RUNS.  THIS VERSION PRODUCES
C     FLOATING POINT TRIP ESTIMATES IN AN ATTEMPT TO REDUCE THE NOISE
C     IN THE RESULTS FOR ALTERNATIVE COMPARISON.
C
C*******************  RWE CHANGE FOR I290 MARCH 2013  ******************
C*******************  RWE CHANGE FOR I290 JUNE 2013  *******************
C
C     EMMEBANK READS AND WRITES CHANGED TO WORK WITH EXTERNAL MATRICES
C     PRODUCED BY EMME4 BY RWE JUNE 2013
C
C*******************  RWE CHANGE FOR I290 JUNE 2013  *******************

C############ Heither, 07-11-2018: updated to support 4000 zones
C############ Heither, 09-08-2018: provide Namelist file as argument to allow for simultaneous runs of PreDist by purpose  
      IMPLICIT INTEGER (A-Z)
C
C     COMMON AREAS
C
      INCLUDE 'Common_params.fi'
      INCLUDE 'Common_auto_params.fi'
	INCLUDE 'Common_data.fI'
      INCLUDE 'Common_emme4bank.fi'
      INCLUDE 'Common_auto_emme4bank.fi'
	INCLUDE 'Common_approach_model.fi'
	INCLUDE 'Common_cbdparking.fi'

	CHARACTER*1 ASTERIX(100)/100*'*'/
	CHARACTER*8 DATE8
      CHARACTER*10  CTIME10
      CHARACTER*2 DATE2(4), CTIME2(5)
      EQUIVALENCE (DATE8,DATE2(1)), (CTIME10,CTIME2(1))
	REAL*4 RAN_NUM

	LOGICAL*4 NOTRIP
      CHARACTER(LEN=30) :: FL1, FL2, FL3
	  
C ### --- GET NAMELIST FILE AND LOG FILE ARGUMENTS      
      CALL GETARG(1, FL1)
      CALL GETARG(2, FL2)
      CALL GETARG(3, FL3)
      FL1 = TRIM(ADJUSTL(FL1))
      FL2 = TRIM(ADJUSTL(FL2))	
      FL3 = TRIM(ADJUSTL(FL3))	
C***********************************************************************
C
C     FOLLOWING TRIP TYPES ASSUMED
C     TPTYPE=1  HOME PRODUCTIONS TO WORK ATTRACTIONS
C     TPTYPE=2  HOME PRODUCTIONS TO NON-WORK/NON-HOME ATTRACTIONS
C     TPTYPE=3  NON-HOME PRODUCTIONS TO NON-HOME ATTRACTIONS
C
C***********************************************************************
C
C     OPEN OUTPUT LOG (UNIT=31)
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************

      OPEN (UNIT=31,FILE=FL2,ERR=9931)
      OPEN (UNIT=40,FILE=FL3,ACCESS="DIRECT",RECL=1,ERR=9930)

C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
      CALL DATE_AND_TIME(DATE8,CTIME10)
      WRITE (31,'(15A)') ' MODE CHOICE LOGFILE OPENED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
C
C     LOGON
C     
      WRITE (*,'(100A1)') ASTERIX
      
      WRITE (*,'(/A)') ' CATS EMME4 MODE CHOICE PROGRAM'
      WRITE (*,'(A)') ' REVISED BY RONALD EASH FOR UNIX AND PC FORTRAN'
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
	WRITE (*,'(A)') ' VERSION 1.4 (I290 HOV PROJECT WITH CURRENT COSTS
     A AND DETAILED CORRIDOR ZONES):  JUNE 2013'
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      WRITE (*,'(100A1)') ASTERIX
C
      WRITE (*,'(/A)') ' THE PROGRAM ESTIMATES THE ZONE TO ZONE TRIPS BY 
     A TRANSIT AND'
      WRITE (*,'(A)') ' HIGHWAY SUBMODES (AUTO OCCUPANCY LEVELS AND TOLL
     A-UNTOLLED ROUTES).'
      WRITE (*,'(A)') ' THE ORIGINAL MODEL AND SOFTWARE WERE DEVELOPED I
     AN THE EARLY 1970S'
      WRITE (*,'(A)') ' AT THE CHICAGO AREA TRANSPORTATION STUDY BY YEHU
     ADA GUR.'
      WRITE (*,'(A)') ' IN THE EARLY 1970S AT THE CATS.'

      CALL DATE_AND_TIME(DATE8,CTIME10)
      WRITE (*,'(/15A)') ' PROGRAM STARTED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
C
	WRITE (31,'(100A1)') ASTERIX
      WRITE (31,'(/A)') ' CATS EMME4 MODE CHOICE PROGRAM'
      WRITE (31,'(A)') ' REVISED BY RONALD EASH FOR UNIX AND PC FORTRAN'
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
	WRITE (*,'(A)') ' VERSION 1.4 (I290 HOV PROJECT WITH CURRENT COSTS
     A AND DETAILED CORRIDOR ZONES):  JUNE 2013'
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      WRITE (31,'(100A1)') ASTERIX
C
      WRITE (31,'(/A)')' THE PROGRAM ESTIMATES THE ZONE TO ZONE TRIPS BY 
     A TRANSIT AND'
      WRITE (31,'(A)')' HIGHWAY SUBMODES (AUTO OCCUPANCY LEVELS AND TOLL
     A-UNTOLLED ROUTES).'
      WRITE (31,'(A)')' THE ORIGINAL MODEL AND SOFTWARE WERE DEVELOPED I
     AN THE EARLY 1970S'
      WRITE (31,'(A)')' AT THE CHICAGO AREA TRANSPORTATION STUDY BY YEHU
     ADA GUR.'
      WRITE(31,'(A)') ' IN THE EARLY 1970S AT THE CATS.'
C
      CALL DATE_AND_TIME(DATE8,CTIME10)
      WRITE (31,'(/15A)') ' PROGRAM STARTED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)

      WRITE (31,'(100A1)') ASTERIX
C
C	OPEN MCLIST NAMELIST FILE (UNIT=33)
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      OPEN (UNIT=33,FILE=FL1,ERR=9933)
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
      CALL DATE_AND_TIME(DATE8,CTIME10)
      WRITE (*,'(/15A)') ' MC_NAMELIST.TXT OPENED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
       WRITE (31,'(/15A)') ' MC_NAMELIST.TXT OPENED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)

C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C*******************
C  DATA1 SUBROUTINE READS THE NAMELIST PARAMETERS INPUT BY THE USER
C    DEFAULTS THOSE PARAMETERS NOT SPECIFIED
C    OBTAINS THE RANDOM NUMBER SEED
C*******************
      CALL DATE_AND_TIME(DATE8,CTIME10)
      WRITE (*,'(/15A)') ' MC_NAMELIST.TXT OPENED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
       WRITE (31,'(/15A)') ' MC_NAMELIST.TXT OPENED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
C
      CALL DATA1
C
      CALL DATE_AND_TIME(DATE8,CTIME10)
      WRITE (*,'(/15A)') ' RETURN FROM DATA1:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
      WRITE (31,'(/15A)') ' RETURN FROM DATA1:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
      
      WRITE (31,'(100A1)') ASTERIX
C*******************
C  AUTO_DATA1 SUBROUTINE READS THE NAMELIST PARAMETERS FOR THE SUBMODE
C    AUTO SKIM TREES
C*******************
      IF (HOV2 .OR. HOV3 .OR. TOLL) THEN
        CALL DATE_AND_TIME(DATE8,CTIME10)
        WRITE (*,'(/15A)') ' AUTO_DATA1 CALLED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
        WRITE (31,'(/15A)') ' AUTO_DATA1 CALLED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
C
        CALL AUTO_DATA1
C
        CALL DATE_AND_TIME(DATE8,CTIME10)
        WRITE (*,'(/15A)') ' RETURN FROM AUTO_DATA1:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
        WRITE (31,'(/15A)') ' RETURN FROM AUTO_DATA1:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
        WRITE (31,'(100A1)') ASTERIX
	ENDIF
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C	OPEN M01 FILE (UNIT=34)
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      IF (TPTYPE .EQ. 1) THEN
        OPEN (UNIT=34,FILE='MCHW_M01.TXT',ERR=9934)
      ELSE
	  IF (TPTYPE .EQ. 2) THEN
          OPEN (UNIT=34,FILE='MCHO_M01.TXT',ERR=9934)
        ELSE 
          OPEN (UNIT=34,FILE='MCNH_M01.TXT',ERR=9934)
        ENDIF
      ENDIF
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C 
      CALL DATE_AND_TIME(DATE8,CTIME10)
*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      IF (TPTYPE .EQ. 1) THEN
        WRITE (*,'(/15A)')' MCHW_M01.TXT OPENED:  ',
     A    DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B    CTIME2(1),':', CTIME2(2),':', CTIME2(3)
        WRITE (31,'(/15A)')' MCHW_M01.TXT OPENED:  ',
     A    DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B    CTIME2(1),':', CTIME2(2),':', CTIME2(3)
	ELSE
	  IF (TPTYPE .EQ. 2) THEN
          WRITE (*,'(/15A)')' MCHO_M01.TXT OPENED:  ',
     A      DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B      CTIME2(1),':', CTIME2(2),':', CTIME2(3)
          WRITE (31,'(/15A)')' MCHO_M01.TXT OPENED:  ',
     A      DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B      CTIME2(1),':', CTIME2(2),':', CTIME2(3)
 	  ELSE 
          WRITE (*,'(/15A)')' MCNH_M01.TXT OPENED:  ',
     A      DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B      CTIME2(1),':', CTIME2(2),':', CTIME2(3)
          WRITE (31,'(/15A)')' MCNH_M01.TXT OPENED:  ',
     A      DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B      CTIME2(1),':', CTIME2(2),':', CTIME2(3)
	  ENDIF
      ENDIF
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************C
C
C	OPEN M023 FILE (UNIT=35)
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      IF (TPTYPE .EQ. 1) THEN
        OPEN (UNIT=35,FILE='MCHW_M023.TXT',ERR=9935)
	ELSE
	  IF (TPTYPE .EQ. 2) THEN
          OPEN (UNIT=35,FILE='MCHO_M023.TXT',ERR=9935)
	  ELSE 
          OPEN (UNIT=35,FILE='MCNH_M023.TXT',ERR=9935)
	  ENDIF
      ENDIF
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
      CALL DATE_AND_TIME(DATE8,CTIME10)
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      IF (TPTYPE .EQ. 1) THEN
        WRITE (*,'(/15A)')' MCHW_M023.TXT OPENED:  ',
     A    DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B    CTIME2(1),':', CTIME2(2),':', CTIME2(3)
        WRITE (31,'(/15A)')' MCHW_M023.TXT OPENED:  ',
     A    DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B    CTIME2(1),':', CTIME2(2),':', CTIME2(3)
	ELSE
	  IF (TPTYPE .EQ. 2) THEN
          WRITE (*,'(/15A)')' MCHO_M023.TXT OPENED:  ',
     A      DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B      CTIME2(1),':', CTIME2(2),':', CTIME2(3)
          WRITE (31,'(/15A)')' MCHO_M023 TXT OPENED:  ',
     A      DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B      CTIME2(1),':', CTIME2(2),':', CTIME2(3)
	  ELSE 
          WRITE (*,'(/15A)')' MCNH_M023.TXT OPENED:  ',
     A      DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B      CTIME2(1),':', CTIME2(2),':', CTIME2(3)
          WRITE (31,'(/15A)')' MCNH_M023.TXT OPENED:  ',
     A      DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B      CTIME2(1),':', CTIME2(2),':', CTIME2(3)
	  ENDIF
      ENDIF
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C*******************
C
C     DATA1 AND AUTO_DATA1 CALLED PREVIOUSLY
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C	OPEN CBD PARKING FILE, FILE THAT NOW CONTAINS THE CBD PARKING 
C     INPUTS SPECIFIED IN THE SUBMODEL DEVELOPED BY GORDON SCHULTZ
C     (UNIT=36)
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     CBD PARKING MODEL IS ONLY USED FOR HOME WORK TRIPS
C
      IF ((TPTYPE .EQ. 1) .AND. (NUMCBD_PARK .GT. 0)) THEN
        OPEN (UNIT=36,FILE='MCHW_CBDPARK.TXT',ERR=9936)
      ENDIF
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
      CALL DATE_AND_TIME(DATE8,CTIME10)
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      IF ((TPTYPE .EQ. 1) .AND. (NUMCBD_PARK .GT. 0)) THEN
        WRITE (*,'(/15A)') ' MCHW_CBDPARK.TXT OPENED:  ',
     A    DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B    CTIME2(1),':', CTIME2(2),':', CTIME2(3)
        WRITE (31,'(/15A)')' MCHW_CBDPARK.TXT OPENED:  ',
     A    DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B    CTIME2(1),':', CTIME2(2),':', CTIME2(3)
      ENDIF
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C	OPEN DISTR FILE, OPTIONAL FILE THAT NOW INCLUDES ONLY DISTR 
C     ARRAYS REQUIRED IF ASM_AREA OR ASM_ZONE IS TRUE (UNIT=37)
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      IF (ASM_AREA .OR. ASM_ZONE) THEN
        IF (TPTYPE .EQ. 1) THEN
          OPEN (UNIT=37,FILE='MCHW_DISTR.TXT',ERR=9937)
	  ELSE
	    IF (TPTYPE .EQ. 2) THEN
            OPEN (UNIT=37,FILE='MCHO_DISTR.TXT',ERR=9937)
	    ELSE 
            OPEN (UNIT=37,FILE='MCNH_DISTR.TXT',ERR=9937)
	    ENDIF
        ENDIF
      ENDIF
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
      CALL DATE_AND_TIME(DATE8,CTIME10)
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      IF (ASM_AREA .OR. ASM_ZONE) THEN
        IF (TPTYPE .EQ. 1) THEN
          WRITE (*,'(/15A)') ' MCHW_DISTR.TXT OPENED:  ',
     A      DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B      CTIME2(1),':', CTIME2(2),':', CTIME2(3)
          WRITE (31,'(/15A)') ' MCHW_DISTR.TXT OPENED:  ',
     A      DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B      CTIME2(1),':', CTIME2(2),':', CTIME2(3)
	  ELSE
	    IF (TPTYPE .EQ. 2) THEN
            WRITE (*,'(/15A)') ' MCHO_DISTR.TXT OPENED:  ',
     A        DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B        CTIME2(1),':', CTIME2(2),':', CTIME2(3)
            WRITE (31,'(/15A)') ' MCHO_DISTR.TXT OPENED:  ',
     A        DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B        CTIME2(1),':', CTIME2(2),':', CTIME2(3)
	    ELSE 
            WRITE (*,'(/15A)') ' MCNH_DISTR.TXT OPENED:  ',
     A        DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B        CTIME2(1),':', CTIME2(2),':', CTIME2(3)
            WRITE (31,'(/15A)') ' MCNH_DISTR.TXT OPENED:  ',
     A        DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B        CTIME2(1),':', CTIME2(2),':', CTIME2(3)
	    ENDIF
        ENDIF
      ENDIF
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     SET RANDOM NUMBER SEED
C## HEITHER, 01-19-2019: THIS CODE IS OBSOLETE      
C
C##      IF (RNSEED .EQ. 0) THEN
C##        CALL SEED(RND$TIMESEED)
C##       CALL RANDOM(RAN_NUM)  !! not needed for vectorized version
C##	  WRITE (*,'(/A,2I10)') ' RANDOM NUMBER SEEDS:  ', RND$TIMESEED
C##	  WRITE (*,'(A,F11.8)') ' FIRST RANDOM NUMBER:  ', RAN_NUM
C##	  WRITE (31,'(/A,2I10)') ' RANDOM NUMBER SEEDS:  ', RND$TIMESEED
C##        WRITE (31,'(A,F11.8)') ' FIRST RANDOM NUMBER:  ', RAN_NUM
C##	ELSE    
C##	  CALL SEED(RNSEED)
C##       CALL RANDOM(RAN_NUM)  !! not needed for vectorized version
C##        WRITE (*,'(/A,2I10)') ' RANDOM NUMBER SEEDS:  ', RNSEED
C##        WRITE (*,'(A,F11.8)') ' FIRST RANDOM NUMBER:  ', RAN_NUM
C##	  WRITE (31,'(/A,2I10)') ' RANDOM NUMBER SEEDS:  ', RNSEED
C##        WRITE (31,'(A,F11.8)') ' FIRST RANDOM NUMBER:  ', RAN_NUM
C##	ENDIF

      WRITE (31,'(100A1)') ASTERIX
	  
C*******************
C  SUBROUTINE DATA2 READS ZONAL, ZONE TYPE & SYSTEM-WIDE PARAMETERS
C*******************
      CALL DATE_AND_TIME(DATE8,CTIME10)
      WRITE (*,'(/15A)') ' DATA2 CALLED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
      WRITE (31,'(/15A)') ' DATA2 CALLED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
C
      CALL DATA2
C
      CALL DATE_AND_TIME(DATE8,CTIME10)
      WRITE (*,'(/15A)') ' RETURN FROM DATA2:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
      WRITE (31,'(/15A)') ' RETURN FROM DATA2:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
C
C     OPEN UP THE EMMEBANK AND GET THE EMME PARAMETERS
C
      CALL OPEN_EMME4

	IF (mcent .LT. ZONES) THEN
	  WRITE (31,'(A, 2I5)') ' ERROR:  EMMEBANK DIMENSIONED SMALLER TH
     AAN MAXIMUM ZONE NUMBER', mcent, ZONES
	  STOP
      ENDIF   

      CALL DATE_AND_TIME(DATE8,CTIME10)
	WRITE (*,'(/15A)') ' START MAIN LOOP FOR ORIGIN ZONES:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
	WRITE (31,'(/15A)') ' START MAIN LOOP FOR ORIGIN ZONES:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
      WRITE (31,'(100A1)') ASTERIX
C
C     REGIONAL TOTALS
C
      PTRIP_IN = 0.0
      PTRIP_TOT = 0.0
      ATRIP_TOT = 0.0
      TTRIP_TOT = 0.0
      
      SOVTRIP_TOT = 0.0
      HOV2TRIP_TOT = 0.0
      HOV3TRIP_TOT = 0.0
      
      TOLLTRIP_TOT = 0.0
      NOTOLLTRIP_TOT = 0.0
    
      SOVFREETRIP_TOT = 0.0
      HOV2FREETRIP_TOT = 0.0
      HOV3FREETRIP_TOT = 0.0
      SOVTOLLTRIP_TOT = 0.0
      HOV2TOLLTRIP_TOT = 0.0
      HOV3TOLLTRIP_TOT = 0.0 
C*******************
C  MAIN LOOP FOR ORIGINS
C*******************  
      DO 10101 ORIG=1,MAXZONES

	IF (.NOT. ZOI(ORIG)) GO TO 10101

      CALL DATE_AND_TIME(DATE8,CTIME10)

      WRITE (31,'(/A,I4,15A)') ' BEGIN PROCESSING ZONE:  ',ORIG, 
     A ', ',CTIME2(1),':', CTIME2(2),':', CTIME2(3)

      WRITE (*,'(A,I4,15A)') ' BEGIN PROCESSING ZONE:  ',ORIG, 
     A ', ',CTIME2(1),':', CTIME2(2),':', CTIME2(3)
C*******************
C  SUBROUTINE DATA3 READS THE EMMEBANK MATRICES FOR TRANSIT.  INCLUDES
C  OLD SUBROUTINES VOCC AND TRIPIN 
C*******************
      CALL DATA3(ORIG,NOTRIP)
C
      IF(NOTRIP) THEN
        WRITE(31,'(/A,I5,A)') '   ZONE ',ORIG,
     A   ' NOT SIMULATED DUE TO ZERO PERSON TRIPS'
        GO TO 10101
	ENDIF
C*******************
C  SUBROUTINE DATA4 READS MATRICES FROM A SEPARATE HIGHWAY EMMEBANK
C  FOR HOV AND TOLL ROUTES
C*******************
	IF (TOLL .OR. HOV2 .OR. HOV3) THEN
        CALL DATA4(ORIG)
	ENDIF
C*******************
C  SUBROUTINE TRIPS DOES THE SIMULATION OF CHOICES
C  IF THE ORIGIN ZONE WAS SELECTED FOR ANALYSIS
C  AND THE ZONE HAS TRIPS ORIGINATING FROM IT.
C*******************
C
C     IN THIS VERSION OF THE PROGRAM (9/1/94) SEPARATE TRIPS
C     SUBROUTINES ARE USED DEPENDING ON THE OPTIONS SPECIFIED:
C     1.  SUBROUTINE TRIPS IS THE BASIC BINARY AUTO-TRANSIT SPLIT
C     2.  SUBROUTINE TRIPS_TOLL SPLITS AUTO TRIPS INTO TOLL AND NON-TOLL
C           TRIP TABLES
C     3.  SUBROUTINE TRIPS_HOV SPLITS AUTO TRIPS INTO SOV AND TWO HOV
C           CATEGORIES
C     4.  SUBROUTINE TRIPS_HOVTOLL SPLITS AUTO TRIPS INTO SIX
C           CATEGORIES:  HOV (2 PERSON), HOV (3+PERSON) AND SOV BY TOLL
C           AND NON-TOLL USERS
C
      IF ((.NOT. HOV2) .AND. (.NOT. HOV3)) THEN
        IF (.NOT. TOLL) THEN
     	    CALL TRIPS(ORIG)
        ELSE
	    CALL TRIPS_TOLL(ORIG)
        ENDIF
      ENDIF
      IF (HOV2 .OR. HOV3) THEN
        IF (.NOT. TOLL) THEN
	    CALL TRIPS_HOV(ORIG)
	  ELSE
	    CALL TRIPS_TOLLHOV(ORIG)
        ENDIF
	ENDIF

10101 CONTINUE
C*******************
C  THE SIMULATION HAS BEEN COMPLETED FOR EACH ORIGIN SELECTED
C  FOR ANALYSIS.
C*******************

C***********************************************************************
C
C     I/O ERRORS
C
C***********************************************************************     
      GO TO 9999
 9930 CONTINUE
      WRITE (*,*) 'ERROR:  UNABLE TO OPEN RANDOM SEED FILE'
	STOP  
      
 9931 CONTINUE
      WRITE (*,*) 'ERROR:  UNABLE TO OPEN MSLOG OUTPUT FILE'
      STOP

 9932 CONTINUE
      WRITE (*,*) 'ERROR:  UNABLE TO OPEN EMMEBANK INPUT/OUTPUT FILE'
      STOP

 9933 CONTINUE
      WRITE (*,*) 'ERROR:  UNABLE TO OPEN NAMELIST INPUT FILE'
      STOP

 9934 CONTINUE
      WRITE (*,*) 'ERROR:  UNABLE TO OPEN M01 INPUT FILE'
      STOP

 9935 CONTINUE
      WRITE (*,*) 'ERROR:  UNABLE TO OPEN M023 INPUT FILE'
      STOP

 9936 CONTINUE
      WRITE (*,*) 'ERROR:  UNABLE TO OPEN CBDPARK INPUT FILE'
      STOP

 9937 CONTINUE
      WRITE (*,*) 'ERROR:  UNABLE TO OPEN DISTR INPUT FILE'
      STOP

 9999 CONTINUE
      
      CALL DATE_AND_TIME(DATE8,CTIME10)
      WRITE (*,'(/15A)') ' MODE SPLIT PROGRAM COMPLETED:  ', 
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
      WRITE (*,'(100A1)') ASTERIX
      WRITE (31,'(/15A)') ' MODE SPLIT PROGRAM COMPLETED:  ',
     A DATE2(3),'/',DATE2(4),'/',DATE2(1), DATE2(2),'  ', 
     B CTIME2(1),':', CTIME2(2),':', CTIME2(3)
	WRITE (31,'(100A1)') ASTERIX
C
C     WRITE MODE SHARE TOTALS
C
      IF ((.NOT. HOV2) .AND. (.NOT. HOV3)) THEN
        IF (.NOT. TOLL) THEN
          WRITE(31,80802) PTRIP_IN
          WRITE(31,80803) PTRIP_TOT
          WRITE(31,80804) ATRIP_TOT
          WRITE(31,80805) TTRIP_TOT     	   
        ELSE
          WRITE(31,80802) PTRIP_IN
          WRITE(31,80803) PTRIP_TOT
          WRITE(31,80804) ATRIP_TOT
          WRITE(31,80805) TTRIP_TOT                 
          WRITE(31,80806) TOLLTRIP_TOT    
          WRITE(31,80807) NOTOLLTRIP_TOT               
        ENDIF
      ENDIF
      IF (HOV2 .OR. HOV3) THEN
        IF (.NOT. TOLL) THEN
          WRITE(31,80802) PTRIP_IN
          WRITE(31,80803) PTRIP_TOT
          WRITE(31,80804) ATRIP_TOT
          WRITE(31,80805) TTRIP_TOT             
          WRITE(31,80808) SOVTRIP_TOT              
          WRITE(31,80809) HOV2TRIP_TOT  
          WRITE(31,80810) HOV3TRIP_TOT            
        ELSE
          WRITE(31,80802) PTRIP_IN
          WRITE(31,80803) PTRIP_TOT
          WRITE(31,80804) ATRIP_TOT
          WRITE(31,80805) TTRIP_TOT

          WRITE(31,80811) SOVTOLLTRIP_TOT
          WRITE(31,80812) HOV2TOLLTRIP_TOT  
          WRITE(31,80813) HOV3TOLLTRIP_TOT
          WRITE(31,80814) SOVFREETRIP_TOT 
          WRITE(31,80815) HOV2FREETRIP_TOT  
          WRITE(31,80816) HOV3FREETRIP_TOT
        ENDIF
	ENDIF
C
80802 FORMAT(F14.4,' TOTAL PERSON TRIPS IN')
80803 FORMAT(F14.4,' TOTAL PERSON TRIPS OUT')
80804 FORMAT(F14.4,' TOTAL AUTO PERSON TRIPS')
80805 FORMAT(F14.4,' TOTAL TRANSIT PERSON TRIPS')
80806 FORMAT(F14.4,' AUTO PERSON TRIPS ON TOLL PATHS')
80807 FORMAT(F14.4,' AUTO PERSON TRIPS ON NONTOLL PATHS')
80808 FORMAT(F14.4,' SOV AUTO PERSON TRIPS')
80809 FORMAT(F14.4,' HOV 2 OCCUPANT AUTO PERSON TRIPS')
80810 FORMAT(F14.4,' HOV 3+ OCCUPANT AUTO PERSON TRIPS')
80811 FORMAT(F14.4,' SOV AUTO PERSON TRIPS ON TOLL PATHS')
80812 FORMAT(F14.4,' HOV 2 OCCUPANT AUTO PERSON TRIPS ON TOLL PATHS')
80813 FORMAT(F14.4,' HOV 3+ OCCUPANT AUTO PERSON TRIPS ON TOLL PATHS')
80814 FORMAT(F14.4,' SOV AUTO PERSON TRIPS ON NONTOLL PATHS')
80815 FORMAT(F14.4,' HOV 2 OCCUPANT AUTO PERSON TRIPS ON NONTOLL PATHS')
80816 FORMAT(F14.4,' HOV 3+ OCCUPANT AUTO PERSON TRIPS ON NONTOLL PATHS'
     A)            
C
      CLOSE (31)
      CLOSE (32)
	CLOSE (33)
      CLOSE (34)
	CLOSE (35)
      CLOSE (40)

      STOP
      END