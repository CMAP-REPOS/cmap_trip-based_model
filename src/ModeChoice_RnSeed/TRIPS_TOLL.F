      SUBROUTINE TRIPS_TOLL(ORIG)
      IMPLICIT INTEGER (A-Z)
C*******************
C  THIS SUBROUTINE PERFORMS THE OPERATION OF SIMULATING THE TRIPS
C       FROM THIS ORIGIN
C  THIS SUBROUTINE IS CALLED ONCE PER ZONE SELECTED FOR ANALYSIS.
C  NOTE THAT SUBROUTING IS NOT CALLED WHEN ZONE HAS NO TRIPS.
C  THIS IS THE SUBROUTINE USED WHEN TOLL IS TURNED ON
C    AUTO TRIPS ARE SPLIT INTO TOLL AND NON-TOLL TRIP TABLES USING
C    THE CALCULATED UTILITIES FOR THESE TWO MODES
C*******************
C
C     THIS IS THE INTERCHANGE VERSION OF THE MODEL AND THERE ARE
C     SEVERAL CODING CHANGES IN THIS SUBROUTINE FROM THE TRIP
C     END VERSION
C     THERE IS AN ADDITIONAL LOOP OUTSIDE THE DO LOOP FOR ITERATIONS
C     FOR ALL DESTINATIONS WITH INTERCHANGES FROM THE ORIGIN ZONE
C     AS THE SIMULATION PROGRESSES, TWO FILES ARE WRITTEN, ONE FOR
C     SIMULATED TRANSIT TRIPS AND ONE FOR AUTO TRIPS
C     MODE CHOICE IS DONE USING BINARY MONTE CARLO SIMULATION
C
C     THIS VERSION INCLUDES AN OPTION TO SUBDIVIDE THE AUTO MODE
C     INTO AUTO PERSON TRIPS VIA TOLL AND UNTOLLED PATHS.
C
C     LOGIC IS TO FIRST ESTIMATE AUTO-TRANSIT MODE CHOICE USING THE
C     CATS BINAARY MODEL MODE CHOICE COEFFICIENTS.  AUTO TRIPS ARE 
C     THEN SUBDIVIDED INTO TOLL AND UNTOLLED CATEGORIES USSING THE 
C     SEPARATE PATH CHARACTERISTICS.
C
C ##  Heither 09-06-2016: Add ITER to program    
C############ Heither, 07-11-2018: updated to support 4000 zones   
C*******************
      INCLUDE 'Common_params.fi'
	INCLUDE 'Common_data.fI'
      INCLUDE 'Common_emme4bank.fi'
	INCLUDE 'Common_approach_model.fi'
	INCLUDE 'Common_cbdparking.fi'

      INCLUDE 'Common_auto_params.fi'
      INCLUDE 'Common_auto_emme4bank.fi'

      REAL*4 ARNUMT, ARNUMA, ARNUMA_TOLL
	REAL*4 RAN_NUM, RAN_NUM1, TTP, TTP_TOLL
      REAL*4 SC, SCA, SC1, SC2, SCT 

	REAL*4 D, DD, ACOST, ACOST_TOLL, INCOME, AUTOCC, HEADER, WALK, 
     A CAPK

      REAL*4 UAUTO, UTRAN, UTOLL

	LOGICAL*4 CBDIND, NOTTRO, NOTTRD
C
C     REOPEN EMMEBANK
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C      OPEN (UNIT=32, FILE='EMMEBANK',
C     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
C
C      OPEN (UNIT=42, FILE='AUTOBANK',
C     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      OPEN (UNIT=951, FILE='emmemat/'//TEMX_AUTO,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
      OPEN (UNIT=952, FILE='emmemat/'//TEMX_TRANSIT,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
      OPEN (UNIT=953, FILE='emmemat/'//TEMX_AUTO_FREE,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
      OPEN (UNIT=954, FILE='emmemat/'//TEMX_AUTO_TOLL,
     A  ACCESS='DIRECT',RECL=1,STATUS='OLD')
C
C     ALL TRIPS ARE SIMULATED FOR EACH DESTINATION
C
      DO II=1,ZONES
	  ATRIP(II) = 0.0
        ATRIP1(II) = 0.0
        ATRIP2(II) = 0.0
        TTRIP(II) = 0.0
      ENDDO
C
C  REVISED COUNTER
C
      SC = 0.0
      SCA = 0.0
	SC1 = 0.0 
	SC2 = 0.0 
	SCT = 0.0 
C
C  THE NEXT FEW STATEMENTS DETERMINE WHETHER OR NOT THIS ZONE
C               IS SERVED BY A TRANSIT MODE
C                      IF NOT, DON'T BOTHER SIMULATING
C
      NOTTRO = .TRUE.
C
C    NEED ONE DESTINATION ZONE ACCESSIBLE BY TRANSIT
C
      DO I=1,ZONES
	  IF (DZOI(I)) THEN
          IF ((DISTR(I,1,3).NE.999).OR.(DISTR(I,2,3).NE.999).OR.
     A      (DISTR(I,3,3).NE.999).OR.(DISTR(I,4,3).NE.999)) THEN
            IF(PMD(I).GE.3) THEN
              NOTTRO = .FALSE.
            ENDIF
          ENDIF
        ENDIF
      ENDDO
C
C     CHECK ORIGIN FOR DISTR PARAMETERS
C
      IF ((DISTR(ORIG,1,3).EQ.999).AND.(DISTR(ORIG,2,3).EQ.999).AND.
     A  (DISTR(ORIG,3,3).EQ.999).AND.(DISTR(ORIG,4,3).EQ.999).AND.
     B  (DISTR(ORIG,5,3).EQ.999)) THEN
        NOTTRO = .TRUE.
      ENDIF 

      IF (NOTTRO) THEN
	  WRITE(31,505) ORIG
      ENDIF

  505 FORMAT(' ZONE ',I5,' NOT SERVED BY A TRANSIT MODE(4-8)')
C****************************************
C  THIS BEGINS THE SIMULATION OF TRIPS  *
C****************************************
      DEST = 0
C
C     START OF LOOP BY DESTINATION ZONE
C
50502 CONTINUE

      DEST = DEST + 1
C
C     SKIP DESTINATION ZONE, TRIPS DETERMINED ABOVE
C
C       1.  NOT SELECTED FOR SIMULATION:  TTRIP=0, ATRIP1=0, ATRIP2=0
C       2.  NO TRIPS BBETWEEN ORIGIN AND DESTINATION ZONES:  TTRIP=0, 
C           ATRIP1=0, ATRIP2=0
C
      IF ((.NOT. DZOI(DEST)) .OR. (PTRIP(DEST) .EQ. 0)) GO TO 10102
C
C	START OF DO LOOP FOR ALL TRIPS IN INTERCHANGE
C
C************ RWE CHANGE FOR I290 ROUND 3 MODELS MARCH 2013 ************
C
C       SIMULATE 1000 TRIPS TO OBTAIN MODE SHARES
C
C   Heither, CMAP 11-05-13: simulate 100 trips
C ##   Heither, CMAP 09-06-2016: simulate ITER trips       
C***********************************************************************
C      ITER = PTRIP(DEST)
      DO 10101 I=1,ITER
C
C  NOW THAT THE DESTINATION HAS BEEN OBTAINED,
C      CHECK TO SEE IF TRANSIT WILL GO TO THAT ZONE
C
      NOTTRD = .TRUE.
      
      IF(PMD(DEST).GE.3) THEN
        IF ((DISTR(DEST,1,3).NE.999).OR.(DISTR(DEST,2,3).NE.999).OR.
     A    (DISTR(DEST,3,3).NE.999).OR.(DISTR(DEST,4,3).NE.999)) THEN
          NOTTRD = .FALSE.
        ENDIF
      ENDIF
C
C  SET THE MINIMUM LINE HAUL DRIVING TIME TO ONE MINUTE
C
      IF(ZLHT(DEST).LT.1) ZLHT(DEST)=1
      IF(ZLHT$(DEST).LT.1) ZLHT$(DEST)=1
C
C  RUN A CHECK FOR A CBD DESTINATION
C
      CBDIND=.FALSE.
      IF(ZCBD(DEST)) CBDIND=.TRUE.
C*******************
C  THE NEXT SECTION COMPUTES THE AUTO OPERATING COSTS IN CENTS
C*******************
      D=ZLHD(DEST)
      DD=ZLHT(DEST)
	IF (D .GT. 0 .AND. DD .GT. 0) THEN 
        CALL AUTCST(I,ORIG,DEST,D,DD,ACOST)
	ELSE
	  ACOST = 0.0
      ENDIF
C
C     TOLL COSTS
C
      D=ZLHD$(DEST)
      DD=ZLHT$(DEST)
	IF (D .GT. 0 .AND. DD .GT. 0) THEN 
        CALL AUTCST(I,ORIG,DEST,D,DD,ACOST_TOLL)
	ELSE
	  ACOST_TOLL = 0.0
      ENDIF
C*******************
C  THE NEXT SECTION OBTAINS THE INCOME OF THE TRIPMAKER
C      IF THIS A HOME BASED TRIP START WITH THE ZONAL MEDIAN INCOME
C         AT THE DESTINATION RATHER THAN AT THE ORIGIN
C*******************

C## Heither, 01-11-2018: the following INCDIS change was implemented in TRIPS but not TRIPS_TOLL until now. 
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      IF (TPTYPE .NE. 3) THEN
        MEDINC=INC(ORIG)*100
        CALL INCDIS(I,ORIG,DEST,MEDINC,INCOME)
C
C  IF WE HAVE A NON-HOME BASED TRIP USE THE AVERAGE REGIONAL
C     2007 ACS HH INCOME FOR CHICAGO METRO AREA
      ELSE
	  INCOME = 59300.
      ENDIF	

	  
C
C  THE CALL TO SUBROUTINE TRAPP WILL RETURN THE TRANSIT APPROACH TIMES
C
      IF ((.NOT. NOTTRO) .AND. (.NOT. NOTTRD)) THEN 
	  CALL TRAPP(I,ORIG,DEST,EIVT,EOVT,EC)
C
        HEADER=0.5*HWAY(DEST)
C
C     COSTS ARE DISCOUNTED FROM 1990 TO 1970 (CALIBRATION YEAR)
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     COSTS ARE ESTIMATED IN CURRENT DOLLARS AND MODEL COST COEFFICIENT 
C     HAS BEEN ADJUSTED ACCORDINGLY, SO DISCNT = 1.00
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
        FARE(DEST) = FARE(DEST) * DISCNT
	  EC = EC * DISCNT
C
C   COMPUTE TRANSIT UTILITY:  NOTE THAT SIGN ON TRANSIT BIAS COEFFICIENT
C   IS NEGATIVE BECAUSE IT IS ENTERED AS MINUS NUMBER.  TRANSIT BIAS IS
C   AN ADDITIONAL TRANSIT COST, I.E., TRANSIT IS LESS THAN 50 PERCENT
C   EVERYTHING ELSE BEING EQUAL.
C
        IF(.NOT.CBDIND) THEN
	    ARNUMT= COEFF1(1)*IVT(DEST)+
     A            COEFF1(2)*(FARE(DEST)+EC)+
     B            COEFF1(3)*EIVT-
     C            COEFF1(4)+
     D            COEFF1(5)*(OVT(DEST)+EOVT)+
     E            COEFF1(6)*HEADER
	  ENDIF
C
	  IF(CBDIND) THEN
	    ARNUMT= COEFF2(1)*IVT(DEST)+
     A            COEFF2(2)*(FARE(DEST)+EC)+
     B            COEFF2(3)*EIVT-
     C            COEFF2(4)+
     D            COEFF2(5)*(OVT(DEST)+EOVT)+
     E            COEFF2(6)*HEADER
	  ENDIF
C
C     WRITE UTILITIES IF TRACE IS TURNED ON
C
	  IF (TRACE) THEN
	    WRITE (31, '(/A)') ' TRANSIT INPUTS IN SUBROUTINE TRIPS'

	    WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
	    WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST

  	    WRITE (31, '(A,F8.3)') '   FIRST MODE (FMD)=',FMD(DEST)
  	    WRITE (31, '(A,F8.3)') '   LAST MODE (LMD)=',LMD(DEST)
  	    WRITE (31, '(A,F8.3)') '   PRIORITY MODE (PMD)=',PMD(DEST)
  	    WRITE (31, '(A,F8.3)') '   IN-VEHICLE TIME (IVT)=',IVT(DEST)
  	    WRITE (31, '(A,F8.3)') '   TRANSIT FARE (FARE)=',FARE(DEST)
  	    WRITE (31, '(A,F8.3)') '   OUT-OF-VEHICLE TIME (OVT)=',
     A      OVT(DEST)
  	    WRITE (31, '(A,F8.3)') '   INITIAL WAIT TIME (1/2 HEADWAY)=',
     A      HEADER
	    WRITE (31, '(A,I6)') '   APPROACH IVT (EIVT)=',EIVT
  	    WRITE (31, '(A,I6)') '   APPROACH TRANSIT FARE (EC)=',EC
  	    WRITE (31, '(A,I6)') '   APPROACH OVT (EOVT)=',EOVT
	    WRITE (31, '(A,F8.3)') '   TRANSIT UTILITY (ARNUMT)=',ARNUMT
	  ENDIF
	ENDIF
C
C  THE CALL TO PRKCST OBTAINS THE COST OF PARKING FOR A HIGHWAY TRIP
C    CAPK CONTAINS COST OF PARKING
C    WALK IS THE AVERAGE WALK TIME FROM THE AUTO TO THE DESTINATION
C
      INTOCC = 0
      CALL PRKCST(I,ORIG,DEST,INCOME,CAPK,WALK,INTOCC)
C
      ACOST=0.5*CAPK+ACOST+AFC1
	ACOST_TOLL=0.5*CAPK+ACOST_TOLL+AFC1+ZLHC(DEST)
C*******************
C  ACOST CONTAINS THE TOTAL COST OF THE HIGHWAY TRIP ON FREE PATH
C  ACOST_TOLL CONTAINS THE COST OF THE HIGHWAY TRIP ON THE TOLL PATH
C*******************
C
C     AUTO OCCUPANCY DETERMINED BY THE FOLLOWING OPTIONS/PRIORITIES:
C
C       1.  FROM PARKING MODEL WHEN DEST IS A CBD PARKING ZONE
C       2.  OCCUPANCIES INPUT VIA TABLE FROME EMMEBANK
C       3.  OBTAINED FROM M023 INPUT
C
      AUTOCC = ZOCC(DEST)
C
C     FOLLOWING CODE ALLOWS USER TO INPUT AUTO OCCUPANCIES
C
      IF (AOCC) AUTOCC = COCC(DEST)
C
C     OCCUPANCY RETURNED FROM PRKCBD ALWAYS IS USED
C
      IF (INTOCC .GT. 0) AUTOCC=INTOCC
C
C    COMPUTE FINAL AUTO COST
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     COSTS ARE ESTIMATED IN CURRENT DOLLARS AND MODEL COST COEFFICIENT 
C     HAS BEEN ADJUSTED ACCORDINGLY, SO DISCNT = 1.00
C
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      ACOST=ACOST/AUTOCC
	ACOST_TOLL = ACOST_TOLL/AUTOCC
C
C     COSTS ARE DISCOUNTED FROM 1990 TO 1970 (CALIBRATION YEAR) IN CATS 
C     MODEL
C
      ACOST = ACOST * DISCNT
	ACOST_TOLL = ACOST_TOLL * DISCNT 
C
C    COMPUTE AUTO UTILITY
C
      IF(.NOT.CBDIND) THEN
	  ARNUMA = COEFF1(1)*ZLHT(DEST)+
     A           COEFF1(2)*ACOST+
     B           COEFF1(3)*WALK
        ARNUMA_TOLL = COEFF1(1)*ZLHT(DEST)+
     A                COEFF1(2)*ACOST_TOLL+
     B                COEFF1(3)*WALK
	ENDIF
      IF(CBDIND) THEN
	  ARNUMA= COEFF2(1)*ZLHT(DEST)+
     A          COEFF2(2)*ACOST+
     B          COEFF2(3)*WALK
	  ARNUMA_TOLL= COEFF2(1)*ZLHT(DEST)+
     A               COEFF2(2)*ACOST_TOLL+
     B               COEFF2(3)*WALK
	ENDIF
C
C     WRITE UTILITIES IF TRACE IS TURNED ON
C
	IF (TRACE) THEN
	  WRITE (31, '(/A)') ' HIGHWAY INPUTS IN SUBROUTINE TRIPS'
	
	  WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
	  WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST
	 
	  WRITE (31, '(A,I8)') '   HOUSEHOLD MEDIAN INCOME=', MEDINC
	  WRITE (31, '(A,F8.0)') '   HOUSEHOLD INCOME=', INCOME
  	  WRITE (31, '(A,F8.3)') '   HIGHWAY TRAVEL TIME (ZLHT)=',
     A	ZLHT(DEST)
  	  WRITE (31, '(A,F8.3)') '   HIGHWAY DISTANCE (ZLHD)=',ZLHD(DEST)
  	  WRITE (31, '(A,F8.3)') '   AUTO OCCUPANCY (AUTOCC)= ',AUTOCC
  	  WRITE (31, '(A,F8.3)') '   CBD PARKING COST (CAPK)= ',CAPK
  	  WRITE (31, '(A,I8)')   '   AUTO FIXED COST (AFC1)= ',AFC1
        WRITE (31, '(A,F8.3)') '   WALK TIME (WALK)= ',WALK
  	  WRITE (31, '(A,F8.3)') '   FINAL AUTO COST (ACOST)= ',ACOST
        WRITE (31, '(A,F8.3)') '   TOLL VIA TOLL PATH (ZLHC)=',
     A	ZLHC(DEST)
  	  WRITE (31, '(A,F8.3)') '   FINAL AUTO COST WITH TOLL (ACOST_TOLL
     A)= ',ACOST
	  WRITE (31, '(A,F8.3)') '   FREE PATH HIGHWAY UTILITY (ARNUMA)=',
     A    ARNUMA
	  WRITE (31, '(A,F8.3)') '   TOLL PATH HIGHWAY UTILITY (ARNUMA_TOL
     AL)=',ARNUMA_TOLL
	ENDIF
C
C   TTP BECOMES THE PROBABILITY THIS TRIP IS BY TRANSIT IN THE
C     CATS MODEL
C
      IF ((.NOT. NOTTRO) .AND. (.NOT. NOTTRD)) THEN 
	  
	  IF (ARNUMA_TOLL .GT. ARNUMA) THEN
	    TTP = EXP(-ARNUMT)/(EXP(-ARNUMT)+EXP(-ARNUMA))
	  ELSE 
	    TTP = EXP(-ARNUMT)/(EXP(-ARNUMT)+EXP(-ARNUMA_TOLL))
	  ENDIF
	  
	ELSE
	  TTP = 0.0
	ENDIF
C
C     SEE WHETHER THIS TRIP IS AN AUTO OR TRANSIT TRIP
C
C************ RWE CHANGE FOR I290 ROUND 3 MODELS MARCH 2013 ************
C
C       SIMULATE 1000 TRIPS TO OBTAIN MODE SHARES
C
C***********************************************************************
C
      IF ((.NOT. NOTTRO) .AND. (.NOT. NOTTRD)) THEN

        TTRIP(DEST) = TTRIP(DEST) + TTP
C
C   TTP_TOLL IS THE PROBABILITY THIS TRIP IS BY TOLL PATH
C
        ATRIP(DEST) = ATRIP(DEST) + (1.0-TTP)
        TTP_TOLL = EXP(-ARNUMA_TOLL)/(EXP(-ARNUMA)+EXP(-ARNUMA_TOLL))
        TTP_TOLL = TTP_TOLL*(1.0-TTP)

	  ATRIP1(DEST) = ATRIP1(DEST) + TTP_TOLL
	  ATRIP2(DEST) = ATRIP2(DEST) + (1.0-TTP-TTP_TOLL)
	ENDIF    
C
C     WRITE AUTO SUBMODE CHOICE PARAMETERS IF TRACE IS TURNED ON
C
	IF (TRACE) THEN
	  WRITE (31, '(/A)') ' AUTO FREE-TOLL SUBMODE CHOICES'
	
	  WRITE (31, '(A,I6)') '   ORIGIN ZONE=', ORIG
	  WRITE (31, '(A,I6)') '   DESTINATION ZONE=', DEST

	  WRITE (31, '(A,F9.6)') '   TRANSIT PROBABILITY (TTP)=', TTP
	  WRITE (31, '(A,F9.6)') '   TOLL PROBABILITY (TTP_TOLL)=', 
     A    TTP_TOLL
	  WRITE (31, '(A,F8.1)') '   CURRENT TRANSIT TRIPS (TTRIP)=',
     A    TTRIP(DEST)
        WRITE (31, '(A,F8.1)') '   CURRENT FREE PATH TRIPS (ATRIP1)=',
     A    ATRIP1(DEST)
        WRITE (31, '(A,F8.1)') '   CURRENT TOLL PATH TRIPS (ATRIP2)=',
     A    ATRIP2(DEST)
	ENDIF
C
C     END OF TRIPS IN DESTINATION ZONE LOOP
C
10101 CONTINUE
C
C     BYPASSED TRIP SIMULATION FOR DESTINATION ZONE
C
10102 CONTINUE
C
C     WRITE TRIPS INTO PRIMARY EMMEBANK (32)
C       MF23 = AUTO TRIPS
C       MF24 = TRANSIT TRIPS
C
      P = ORIG
	Q = DEST

      REC1 = ((P-1)*mcent) + Q
C************ RWE CHANGE FOR I290 ROUND 3 MODELS MARCH 2013 ************
C
C       COMPUTE TRIPS BY MODE USING SIMULATED MODE SHARES
C
C   Heither, CMAP 11-05-13: simulate 100 trips
C ##   Heither, CMAP 09-06-2016: simulate ITER trips         
C*********************************************************************** 
      SC = SC + PTRIP(Q)
      PTRIP_TOT = PTRIP_TOT + PTRIP(Q)
          
      ATRIP(Q) = ATRIP(Q)*PTRIP(Q)/ITER
      WRITE(951, REC=REC1) ATRIP(Q)
      SCA = SCA + ATRIP(Q)
      ATRIP_TOT = ATRIP_TOT + ATRIP(Q)
C
      TTRIP(Q) = TTRIP(Q)*PTRIP(Q)/ITER
      WRITE(952, REC=REC1) TTRIP(Q)
      SCT = SCT + TTRIP(Q)
      TTRIP_TOT = TTRIP_TOT + TTRIP(Q)
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     WRITE TRIPS INTO SECONDARY EMMEBANK (42)
C       MF06 = FREE PATH AUTO PERSON TRIPS
C       MF07 = TOLL PATH AUTO PERSON TRIPS
C
      ATRIP1(Q) = ATRIP1(Q)*PTRIP(Q)/ITER
      WRITE(953, REC=REC1) ATRIP1(Q)
      SC1 = SC1 + ATRIP1(Q)
      NOTOLLTRIP_TOT = NOTOLLTRIP_TOT + ATRIP1(Q)      

      ATRIP2(Q) = ATRIP2(Q)*PTRIP(Q)/ITER
      WRITE(954, REC=REC1) ATRIP2(Q)
      SC2 = SC2 + ATRIP2(Q)
      TOLLTRIP_TOT = TOLLTRIP_TOT + ATRIP2(Q)          
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C
C     REPEAT SIMULATION FOR NEXT DESTINATION
C
      IF (DEST .LT. ZONES) GO TO 50502
C
C  THIS ZONE IS DONE
C
 	WRITE(31,80803) ORIG,SC
	WRITE(31,80804) ORIG,SCT
      WRITE(31,80805) ORIG,SCA
      WRITE(31,80806) ORIG,SC1
      WRITE(31,80807) ORIG,SC2

80803 FORMAT(' ZONE ',I5,' HAS SIMULATED ',F12.4,' PERSON TRIPS')
80804 FORMAT(' ZONE ',I5,' HAS ',F12.4,' TRANSIT PERSON TRIPS')
80805 FORMAT(' ZONE ',I5,' HAS ',F12.4,' AUTO PERSON TRIPS')

80806 FORMAT(' ZONE ',I5,' HAS ',F12.4,' FREE PATH PERSON TRIPS')
80807 FORMAT(' ZONE ',I5,' HAS ',F12.4,' TOLL PATH PERSON HOV TRIPS')
     
	CLOSE (951)
	CLOSE (952)
	CLOSE (953)
	CLOSE (954)
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
C	CLOSE (42)
C*******************  RWE CHANGE FOR I290 AUGUST-SEPT 2009  ************
      RETURN
      END