import numba
import numpy as np
import pickle

taxi_cost = pickle.loads(b'\x80\x05\x95\x17\x05\x00\x00\x00\x00\x00\x00\x8c\x14numba.core.serialize\x94\x8c\x0ecustom_rebuild\x94\x93\x94h\x00\x8c\x18_unpickle__CustomPickled\x94\x93\x94B\xbf\x04\x00\x00\x80\x04\x95\xb4\x04\x00\x00\x00\x00\x00\x00\x8c\x13numba.core.registry\x94\x8c\rCPUDispatcher\x94\x93\x94}\x94(\x8c\x04uuid\x94\x8c$fc7813ba-d522-11eb-9c61-acde48001122\x94\x8c\x07py_func\x94\x8c\x14numba.core.serialize\x94\x8c\x11_rebuild_function\x94\x93\x94(K\x04C\x04a\r\r\n\x94B"\x03\x00\x00\xe3\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00s^\x00\x00\x00|\x04j\x00|\x00|\x04j\x01\x14\x00\x17\x00|\x01|\x04j\x02\x14\x00\x17\x00}\x05|\x04j\x03rZd\x01}\x06t\x04|\x04j\x05j\x06\x83\x01D\x00]\x1a}\x07|\x04j\x05|\x07\x19\x00|\x02k\x02r0d\x02}\x06\x01\x00qLq0|\x06rZ|\x05|\x04j\x037\x00}\x05|\x05S\x00)\x03\xe1U\x01\x00\x00\n    Compute taxi fare.\n\n    A single set of rates (Chicago medallion rates for in-city trips)\n    is used; fares for taxi trips outside Chicago are close to this\n    rate and rare enough that more precision is unneeded.\n\n    Parameters\n    ----------\n    auto_time, auto_dist : array-like\n\n    Returns\n    -------\n    fare : array-like\n    FT)\x07\xda\tflag_pull\xda\nper_minute\xda\x08per_mile\xda\x12airport_pickup_fee\xda\x05range\xda\x14airport_pickup_zones\xda\x04size)\x08\xda\tauto_time\xda\tauto_dist\xda\x06o_zone\xda\x06d_zone\xda\x10taxi_cost_struct\xda\x04cost\xda\x0ebucket_applies\xda\x01i\xa9\x00r\x11\x00\x00\x00\xfa`/Users/jeffnewman/LocalGit/cmap_trip-based_model/src/Mode-Dest-TOD/cmap_modedest/fast/tnc_los.py\xda\ttaxi_cost \x00\x00\x00s\x1e\x00\x00\x00\x00\x12\x04\x01\x08\xff\x02\x02\x08\xfe\x02\xff\x02\x05\x06\x01\x04\x01\x10\x01\x0e\x01\x04\x01\x06\x01\x04\x01\n\x02\x94\x87\x94}\x94(\x8c\x05range\x94\x8c\x08builtins\x94\x8c\x05range\x94\x93\x94\x8c\x08__name__\x94\x8c\x1acmap_modedest.fast.tnc_los\x94u\x8c\ttaxi_cost\x94NNt\x94R\x94h\x07\x8c\x12_function_setstate\x94\x93\x94h\x16}\x94\x8c\x05cells\x94)s\x86R0\x8c\x06locals\x94}\x94\x8c\rtargetoptions\x94}\x94(\x8c\x08nopython\x94\x88\x8c\x0bboundscheck\x94Nu\x8c\timpl_kind\x94\x8c\x06direct\x94\x8c\x0bcan_compile\x94\x88\x8c\x04sigs\x94]\x94u\x86\x94.\x94\x85\x94R\x94\x85\x94R\x94.')
tnc_cost = pickle.loads(b'\x80\x05\x95\xf2\x05\x00\x00\x00\x00\x00\x00\x8c\x14numba.core.serialize\x94\x8c\x0ecustom_rebuild\x94\x93\x94h\x00\x8c\x18_unpickle__CustomPickled\x94\x93\x94B\x9a\x05\x00\x00\x80\x04\x95\x8f\x05\x00\x00\x00\x00\x00\x00\x8c\x13numba.core.registry\x94\x8c\rCPUDispatcher\x94\x93\x94}\x94(\x8c\x04uuid\x94\x8c$fc782102-d522-11eb-9c61-acde48001122\x94\x8c\x07py_func\x94\x8c\x14numba.core.serialize\x94\x8c\x11_rebuild_function\x94\x93\x94(K\x04C\x04a\r\r\n\x94B\xe5\x03\x00\x00\xe3\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x03\x00\x00\x00C\x00\x00\x00s\xcc\x00\x00\x00|\x04j\x00|\x00\x14\x00|\x04j\x01|\x01\x14\x00\x17\x00|\x04j\x02\x17\x00}\x05t\x03|\x05|\x04j\x04\x83\x02|\x04j\x05\x17\x00}\x05|\x04j\x06rzd\x01}\x06t\x07|\x04j\x08j\t\x83\x01D\x00](}\x07|\x04j\x08|\x07\x19\x00|\x02k\x02sb|\x04j\x08|\x07\x19\x00|\x03k\x02rBd\x02}\x06\x01\x00qlqB|\x06rz|\x05|\x04j\x067\x00}\x05|\x04j\nr\xc8d\x01}\x06t\x07|\x04j\x0bj\t\x83\x01D\x00](}\x07|\x04j\x0b|\x07\x19\x00|\x02k\x02s\xb0|\x04j\x0b|\x07\x19\x00|\x03k\x02r\x90d\x02}\x06\x01\x00q\xbaq\x90|\x06r\xc8|\x05|\x04j\n7\x00}\x05|\x05S\x00)\x03\xe1n\x01\x00\x00\n    Compute the TNC cost.\n\n    Parameters\n    ----------\n    auto_time, auto_dist : float\n        The auto travel time and distance for a set of trips.\n    o_zone, d_zone : int\n        Zone numbers for origin and destination\n    tnc_cost_struct : TncCostStruct\n        Use the correct struct for peak/offpeak and solo/shared.\n\n    Returns\n    -------\n    float\n    FT)\x0c\xda\nper_minute\xda\x08per_mile\xda\tbase_fare\xda\x03max\xda\x08min_fare\xda\x0bbooking_fee\xda\x0bspecial_fee\xda\x05range\xda\rspecial_zones\xda\x04size\xda\x0cdowntown_fee\xda\x0edowntown_zones)\x08\xda\tauto_time\xda\tauto_dist\xda\x06o_zone\xda\x06d_zone\xda\x0ftnc_cost_struct\xda\x04cost\xda\x0ebucket_applies\xda\x01i\xa9\x00r\x16\x00\x00\x00\xfa`/Users/jeffnewman/LocalGit/cmap_trip-based_model/src/Mode-Dest-TOD/cmap_modedest/fast/tnc_los.py\xda\x08tnc_costA\x00\x00\x00s0\x00\x00\x00\x00\x13\x08\x01\x08\xff\x02\x02\x04\xfe\x02\xff\x02\x05\x12\x02\x06\x01\x04\x01\x10\x01\x1c\x01\x04\x01\x06\x01\x04\x01\n\x02\x06\x01\x04\x01\x10\x01\x1c\x01\x04\x01\x06\x01\x04\x01\n\x02\x94\x87\x94}\x94(\x8c\x03max\x94\x8c\x08builtins\x94\x8c\x03max\x94\x93\x94\x8c\x05range\x94\x8c\x08builtins\x94\x8c\x05range\x94\x93\x94\x8c\x08__name__\x94\x8c\x1acmap_modedest.fast.tnc_los\x94u\x8c\x08tnc_cost\x94NNt\x94R\x94h\x07\x8c\x12_function_setstate\x94\x93\x94h\x1a}\x94\x8c\x05cells\x94)s\x86R0\x8c\x06locals\x94}\x94\x8c\rtargetoptions\x94}\x94(\x8c\x08nopython\x94\x88\x8c\x0bboundscheck\x94Nu\x8c\timpl_kind\x94\x8c\x06direct\x94\x8c\x0bcan_compile\x94\x88\x8c\x04sigs\x94]\x94u\x86\x94.\x94\x85\x94R\x94\x85\x94R\x94.')
